{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":31041,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Setup and Initial Configuration","metadata":{}},{"cell_type":"code","source":"# --- Essential Installs ---\n!pip install -q transformers datasets accelerate accelerate \n!pip install -q torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n!pip install -q pytorch-lightning\n!pip install -q nltk spacy scikit-learn torchmetrics pandas summa sentence_transformers\n!pip install -q git+https://github.com/google-research/bleurt.git \n!pip install -q git+https://github.com/neulab/BARTScore.git \n!pip install -q ctc-score bert-score \n\n# Check transformers version\n!pip show transformers\n\n# --- Clone BARTScore Repository ---\nimport os\nKAGGLE_WORKING_DIR = \"/kaggle/working/\" \nBARTSCORE_DIR = os.path.join(KAGGLE_WORKING_DIR, \"BARTScore_repo\")\n\nif not os.path.exists(BARTSCORE_DIR):\n    print(\"Cloning BARTScore repository...\")\n    !git clone https://github.com/neulab/BARTScore.git {BARTSCORE_DIR}\n    print(\"BARTScore cloned.\")\nelse:\n    print(\"BARTScore repository already cloned.\")\n\n# Add BARTScore to Python Path\nimport sys\nif BARTSCORE_DIR not in sys.path:\n    sys.path.append(BARTSCORE_DIR)\n    print(f\"Added {BARTSCORE_DIR} to sys.path\")\n\n# --- Imports ---\nimport json\nimport random\nimport math\nimport re\nimport pickle\nimport logging\nimport time\nfrom argparse import Namespace\n\nimport torch\nimport torch.nn as nn\nimport pytorch_lightning as pl\nfrom torch.utils.data import DataLoader, Dataset, Sampler\nfrom tqdm.auto import tqdm # Good practice for notebooks\nfrom sklearn.metrics import (\n    accuracy_score, f1_score, precision_recall_fscore_support,\n    roc_auc_score, matthews_corrcoef, balanced_accuracy_score\n)\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom scipy.stats import pearsonr, kendalltau, spearmanr # Added spearmanr based on evaluate.py\nfrom nltk.tokenize import sent_tokenize\nimport nltk\nimport spacy\n\nimport pytorch_lightning as pl\nfrom pytorch_lightning import LightningDataModule\n\nfrom datasets import load_dataset \nfrom transformers import (\n    AutoConfig,\n    AutoTokenizer,\n    AutoModel,\n    AutoModelForSequenceClassification,\n    AutoModelForMaskedLM, \n    BertForPreTraining, BertModel, RobertaModel, AlbertModel, AlbertForMaskedLM, RobertaForMaskedLM,\n    T5Tokenizer, T5ForConditionalGeneration,\n    BartTokenizer, BartForConditionalGeneration\n)\n\n# Attempt to import AdamW and get_linear_schedule_with_warmup\ntry:\n    from transformers.optimization import AdamW, get_linear_schedule_with_warmup\n    print(\"Successfully imported AdamW from transformers.optimization\")\nexcept ImportError:\n    print(\"Could not import AdamW from transformers.optimization. Attempting from torch.optim...\")\n    try:\n        from torch.optim import AdamW\n        from transformers import get_linear_schedule_with_warmup \n        print(\"Successfully imported AdamW from torch.optim and get_linear_schedule_with_warmup from transformers\")\n    except ImportError:\n        print(\"Error: AdamW not found in transformers.optimization or torch.optim. Scheduler setup might fail.\")\n\n\n# --- Basic Configuration ---\n# KAGGLE_WORKING_DIR already defined\nKAGGLE_INPUT_DIR = \"/kaggle/input/\"\n\nSAMPLES_PER_DATASET_TARGET = 20000 \nGENERATED_DATA_DIR = os.path.join(KAGGLE_WORKING_DIR, \"alignscore_training_data_20k\") \nCHECKPOINT_SAVE_PATH = os.path.join(KAGGLE_WORKING_DIR, \"alignscore_checkpoints\") \nMODEL_NAME = \"roberta-large\" \n\nos.makedirs(GENERATED_DATA_DIR, exist_ok=True)\nos.makedirs(CHECKPOINT_SAVE_PATH, exist_ok=True)\n\nnltk.download('punkt', quiet=True)\nnltk.download('stopwords', quiet=True)\ntry:\n    spacy.load('en_core_web_sm')\nexcept OSError:\n    print(\"Downloading spacy en_core_web_sm model...\")\n    spacy.cli.download('en_core_web_sm')\n    print(\"Spacy model downloaded.\")\n\n\nlogging.getLogger(\"transformers\").setLevel(logging.ERROR)\nlogging.getLogger(\"datasets\").setLevel(logging.ERROR)\nlogging.getLogger(\"pytorch_lightning\").setLevel(logging.INFO)\n\nDEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nprint(f\"Using device: {DEVICE}\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:34:07.765794Z","iopub.execute_input":"2025-05-27T23:34:07.766407Z","iopub.status.idle":"2025-05-27T23:36:33.161149Z","shell.execute_reply.started":"2025-05-27T23:34:07.766385Z","shell.execute_reply":"2025-05-27T23:36:33.160311Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m193.6/193.6 kB\u001b[0m \u001b[31m7.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m31.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m8.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m0:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m82.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ncesium 0.12.4 requires numpy<3.0,>=2.0, but you have numpy 1.26.4 which is incompatible.\nbigframes 1.42.0 requires rich<14,>=12.4.4, but you have rich 14.0.0 which is incompatible.\ngcsfs 2025.3.2 requires fsspec==2025.3.2, but you have fsspec 2025.3.0 which is incompatible.\u001b[0m\u001b[31m\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.9/54.9 kB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for summa (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for BLEURT (setup.py) ... \u001b[?25l\u001b[?25hdone\n\u001b[31mERROR: git+https://github.com/neulab/BARTScore.git does not appear to be a Python project: neither 'setup.py' nor 'pyproject.toml' found.\u001b[0m\u001b[31m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m61.1/61.1 kB\u001b[0m \u001b[31m3.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hName: transformers\nVersion: 4.51.3\nSummary: State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow\nHome-page: https://github.com/huggingface/transformers\nAuthor: The Hugging Face team (past and future) with the help of all our contributors (https://github.com/huggingface/transformers/graphs/contributors)\nAuthor-email: transformers@huggingface.co\nLicense: Apache 2.0 License\nLocation: /usr/local/lib/python3.11/dist-packages\nRequires: filelock, huggingface-hub, numpy, packaging, pyyaml, regex, requests, safetensors, tokenizers, tqdm\nRequired-by: bert-score, ctc-score, kaggle-environments, peft, sentence-transformers\nCloning BARTScore repository...\nCloning into '/kaggle/working/BARTScore_repo'...\nremote: Enumerating objects: 220, done.\u001b[K\nremote: Counting objects: 100% (26/26), done.\u001b[K\nremote: Compressing objects: 100% (12/12), done.\u001b[K\nremote: Total 220 (delta 18), reused 14 (delta 14), pack-reused 194 (from 1)\u001b[K\nReceiving objects: 100% (220/220), 101.98 MiB | 24.26 MiB/s, done.\nResolving deltas: 100% (47/47), done.\nUpdating files: 100% (192/192), done.\nBARTScore cloned.\nAdded /kaggle/working/BARTScore_repo to sys.path\n","output_type":"stream"},{"name":"stderr","text":"2025-05-27 23:36:21.440374: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1748388981.619340      35 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1748388981.673001      35 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"Could not import AdamW from transformers.optimization. Attempting from torch.optim...\nSuccessfully imported AdamW from torch.optim and get_linear_schedule_with_warmup from transformers\nUsing device: cuda\n","output_type":"stream"}],"execution_count":3},{"cell_type":"markdown","source":"# Data Generation Definitions","metadata":{}},{"cell_type":"code","source":"# --- DATASET_HUGGINGFACE and DATASET_CONFIG ---\n# This is an expanded list based on AlignScore's generate_training_data.py\n# You MUST verify these and add any missing datasets you need.\n# For datasets originally from local files, I've tried to find HF equivalents or noted issues.\n\nDATASET_HUGGINGFACE = {\n    'cnndm': ['cnn_dailymail', '3.0.0', 'train'],\n    'mnli': ['multi_nli', 'default', 'train'],\n    'squad_v2': ['squad_v2', 'squad_v2', 'train'], # Used for process_squad_v2_new\n    'paws': ['paws', 'labeled_final', 'train'], # 'labeled_final' for PAWS-Wiki/PAWS-QQP like structure\n    'vitaminc': ['tals/vitaminc', 'default', 'train'], # 'default' config on HF for tals/vitaminc\n    'xsum': ['xsum', 'default', 'train'],\n    'stsb': ['glue', 'stsb', 'train'],\n    'sick': ['sick', 'default', 'train'],\n    'race': ['race', 'all', 'train'],\n    'anli_r1': ['anli', 'plain_text', 'train_r1'],\n    'anli_r2': ['anli', 'plain_text', 'train_r2'],\n    'anli_r3': ['anli', 'plain_text', 'train_r3'],\n    'snli': ['snli', 'plain_text', 'train'],\n    'wikihow': ['wikihow', 'all', 'train'], # HF 'wikihow' dataset\n    'mrpc': ['glue', 'mrpc', 'train'],\n    'qqp': ['glue', 'qqp', 'train'],\n    'adversarial_qa': ['adversarial_qa', 'adversarialQA', 'train'],\n    'drop': ['drop', 'train'],\n    'duorc_self': ['duorc', 'SelfRC', 'train'],\n    'duorc_paraphrase': ['duorc', 'ParaphraseRC', 'train'],\n    'quoref': ['quoref', 'train'],\n    'hotpot_qa_distractor': ['hotpot_qa', 'distractor', 'train'],\n    'hotpot_qa_fullwiki': ['hotpot_qa', 'fullwiki', 'train'], # Large, might need care\n    'ropes': ['ropes', 'train'],\n    'boolq': ['boolq', 'train'],\n    'eraser_multi_rc': ['eraser_multi_rc', 'train'],\n    'quail': ['quail', 'train'],\n    'sciq': ['sciq', 'train'],\n    'strategy_qa': ['metaeval/strategy-qa', 'train'], # Requires accepting terms on HF\n    'gap': ['gap', 'train'],\n    'doc_nli': [\"saattrupdan/doc-nli\", None, \"train\"], # Using HF version from LIM-RA\n    'nli_fever': [\"pietrolesci/nli_fever\", \"default\", \"train\"], # Using HF version\n    'newsqa': [\"newsqa\", \"default\", \"train\"], # HF version\n    # 'msmarco': ['ms_marco', 'v2.1', 'train'], # Very large, often needs special handling\n    # 'paws_qqp': ['paws', 'labeled_final', 'train'] # Covered by 'paws' with specific processing.\n    # 'paws_unlabeled': ['paws', 'unlabeled_final', 'train'] # Usually for unsupervised tasks.\n    # 'wiki103' and WMT datasets were local in AlignScore, would need custom handling or HF equivalents for summarization/MT eval tasks.\n}\n\nDATASET_CONFIG = {\n    'cnndm': {'task': 'summarization', 'text_a': 'article', 'text_b': 'highlights', 'label': None, 'huggingface': True},\n    'mnli': {'task': 'nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True},\n    'squad_v2': {'task': 'qa', 'text_a': 'context', 'text_b': ['question', 'answers'], 'label': None, 'huggingface': True, 'method_name': 'squad_v2_new'}, # AlignScore has process_squad_v2_new\n    'paws': {'task': 'paraphrase', 'text_a': 'sentence1', 'text_b': 'sentence2', 'label': 'label', 'huggingface': True},\n    'vitaminc': {'task': 'fact_checking', 'text_a': 'evidence', 'text_b': 'claim', 'label': 'label', 'huggingface': True},\n    'xsum': {'task': 'summarization', 'text_a': 'document', 'text_b': 'summary', 'label': None, 'huggingface': True},\n    'stsb': {'task': 'sts', 'text_a': 'sentence1', 'text_b': 'sentence2', 'label': 'label', 'huggingface': True},\n    'sick': {'task': 'sts', 'text_a': 'sentence_A', 'text_b': 'sentence_B', 'label': 'relatedness_score', 'huggingface': True},\n    'race': {'task': 'qa', 'text_a': 'article', 'text_b': ['question', 'options'], 'label': 'answer', 'huggingface': True},\n    'anli_r1': {'task': 'nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True},\n    'anli_r2': {'task': 'nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True},\n    'anli_r3': {'task': 'nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True},\n    'snli': {'task': 'nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True},\n    'wikihow': {'task': 'summarization', 'text_a': 'text', 'text_b': 'headline', 'label': None, 'huggingface': True}, # Using HF 'wikihow'\n    'mrpc': {'task': 'paraphrase', 'text_a': 'sentence1', 'text_b': 'sentence2', 'label': 'label','huggingface': True},\n    'qqp': {'task': 'paraphrase', 'text_a':'question1', 'text_b':'question2', 'label': 'label', 'huggingface': True},\n    'adversarial_qa': {'task': 'qa', 'text_a': 'context', 'text_b': ['question', 'answers'],'label': None, 'huggingface': True},\n    'drop': {'task': 'qa', 'text_a': 'passage', 'text_b': ['question', 'answers_spans'], 'label': 'answers_spans', 'huggingface': True}, # 'answers_spans' for answers\n    'duorc_self': {'task': 'qa', 'text_a': 'plot', 'text_b': ['question', 'answers'], 'label': 'answers', 'huggingface': True},\n    'duorc_paraphrase': {'task': 'qa', 'text_a': 'plot', 'text_b': ['question', 'answers'], 'label': 'answers', 'huggingface': True},\n    'quoref': {'task': 'qa', 'text_a': 'context', 'text_b': ['question', 'answers'], 'label': 'answers', 'huggingface': True},\n    'hotpot_qa_distractor': {'task': 'qa', 'huggingface': True}, # Special processing\n    'hotpot_qa_fullwiki': {'task': 'qa', 'huggingface': True},   # Special processing\n    'ropes': {'task': 'qa', 'text_a': ['background', 'situation'], 'text_b': ['question', 'answers'], 'label': 'answers', 'huggingface': True},\n    'boolq': {'task': 'qa', 'text_a': 'passage', 'text_b': 'question', 'label': 'answer', 'huggingface': True},\n    'eraser_multi_rc': {'task': 'qa', 'text_a':'passage', 'text_b':'query_and_answer', 'label':'label', 'huggingface': True},\n    'quail': {'task': 'qa', 'text_a':'context', 'text_b':['question','answers'], 'label':'correct_answer_id', 'huggingface': True},\n    'sciq': {'task': 'qa', 'text_a':'support', 'text_b':['question','correct_answer','distractor1','distractor2','distractor3'], 'label':'correct_answer', 'huggingface': True},\n    'strategy_qa': {'task': 'qa', 'text_a':'facts', 'text_b':'question', 'label':'answer', 'huggingface': True},\n    'gap': {'task': 'coreference', 'text_a':'Text', 'text_b':['Pronoun', 'A', 'B'], 'label':['A-coref', 'B-coref'], 'huggingface': True},\n    'doc_nli': {'task': 'bin_nli', 'text_a': 'premise', 'text_b': 'hypothesis', 'label': 'label', 'huggingface': True}, # saattrupdan/doc-nli\n    'nli_fever': {'task': 'fact_checking', 'text_a': 'context', 'text_b': 'query', 'label': 'label','huggingface': True }, # pietrolesci/nli_fever\n    'newsqa': {'task': 'qa', 'huggingface': True}, # Special processing\n    # 'msmarco': {'task': 'ir', 'text_a': 'passages', 'text_b': ['query', 'answers'], 'label': None,'huggingface': True},\n    # 'paws_qqp': {'task': 'paraphrase', 'text_a': 'sentence1', 'text_b': 'sentence2', 'label': 'label', 'huggingface': False, 'using_pandas': True, 'data_path':'paws_qqp/output/train.tsv' }, # Handled by 'paws'\n    # 'wiki103': {'task': 'paraphrase', 'text_a': 'original_sent', 'text_b': 'paraphrase', 'label': None,'huggingface': False, 'using_json': True, 'data_path':'data/model_generated_data/backtranslation/wiki103_single_sent_backtranslation.json'}, # SKIPPED - custom generated\n    # WMT datasets skipped as they were for specific local eval data in original script.\n}\n\n# --- Helper Classes (QA2D, QAnswering, MLMGeneratorWithPairedData, ExtractiveSummarizationGenerator) ---\n# (Copied from the previous response where they were defined\n\nclass QA2D:\n    def __init__(self, batch_size=32, device='cuda', verbose=True) -> None:\n        from transformers import BartTokenizer, BartForConditionalGeneration\n        self.tokenizer = BartTokenizer.from_pretrained(\"MarkS/bart-base-qa2d\")\n        self.model = BartForConditionalGeneration.from_pretrained(\"MarkS/bart-base-qa2d\").to(device)\n        self.batch_size = batch_size\n        self.device=device\n        self.verbose = verbose\n\n    def generate(self, questions: list, answers: list): #\n        assert len(questions) == len(answers) #\n        qa_list = []\n        for q, a in zip(questions, answers):\n            qa_list.append(f\"question: {q} answer: {a}\")\n        output = []\n        for qa_pairs in tqdm(\n            self.chunks(qa_list, self.batch_size), #\n            desc=\"QA to Declarative\", #\n            total=math.ceil(len(qa_list)/self.batch_size), #\n            disable=(not self.verbose)\n        ):\n            input_text = qa_pairs\n            input_token = self.tokenizer(\n                input_text, return_tensors='pt', padding=True, truncation=True).to(self.device)\n            dec_sents = self.model.generate(\n                 input_token.input_ids, max_length=512)\n            result = self.tokenizer.batch_decode(\n                dec_sents, skip_special_tokens=True)\n            output.extend(result)\n        return output\n\n    def chunks(self, lst, n):\n        for i in range(0, len(lst), n):\n             yield lst[i:i + n]\n\nclass QAnswering:\n    def __init__(self, batch_size=32, device='cuda', verbose=True) -> None:\n        from transformers import T5Tokenizer, T5ForConditionalGeneration\n        self.tokenizer = T5Tokenizer.from_pretrained(\n            \"valhalla/t5-base-qa-qg-hl\")\n        self.model = T5ForConditionalGeneration.from_pretrained(\n            \"valhalla/t5-base-qa-qg-hl\").to(device)\n        self.batch_size = batch_size\n        self.device = device\n        self.verbose = verbose\n\n    def generate(self, questions: list, contexts: list):\n        assert len(questions) == len(contexts)\n        answers = []\n        for qs, cs in tqdm(zip(self.chunks(questions, self.batch_size), self.chunks(contexts, self.batch_size)), desc=\"Generating Answers for not answerable\", total=math.ceil(len(questions)/self.batch_size), disable=(not self.verbose)):\n            qc_pairs = []\n            assert len(qs) == len(cs)\n            for one_q, one_c in zip(qs, cs):\n                qc_pairs.append(f\"\"\"question: {one_q} context: {one_c}\"\"\")\n            input_ids = self.tokenizer(\n                qc_pairs, padding=True, truncation=True, return_tensors='pt').to(self.device).input_ids\n            outputs = self.model.generate(input_ids, max_length=512)\n            answers.extend(self.tokenizer.batch_decode(\n                 outputs, skip_special_tokens=True))\n        return answers\n\n    def chunks(self, lst, n):\n        for i in range(0, len(lst), n):\n            yield lst[i:i + n]\n\nclass MLMGeneratorWithPairedData:\n    def __init__(self, corpra: list, device='cuda', batch_size=8, mask_percent=0.25, verbose=True) -> None:\n        self.device = device\n        self.tokenizer = AutoTokenizer.from_pretrained(\"distilbert-base-uncased\")\n        self.model = AutoModelForMaskedLM.from_pretrained(\"distilbert-base-uncased\").to(self.device)\n        self.mask_percent = mask_percent\n        self.batch_size = batch_size\n        self.dataset = corpra # This is the list of sentences to process\n        self.verbose = verbose\n        if self.verbose: print(f\"MLMGenerator: Initialized with {len(corpra)} sentences. Batch size: {batch_size}.\")\n\n    def chunks(self, lst, n):\n        for i in range(0, len(lst), n):\n             yield lst[i:i + n]\n\n    def generate(self):\n        sents_output = []\n        if not self.dataset:\n            if self.verbose: print(\"MLMGenerator.generate: Input corpus is empty. Returning empty list.\")\n            return sents_output\n\n        if self.verbose: print(f\"MLMGenerator.generate: Starting. Corpus size: {len(self.dataset)}, Batch size: {self.batch_size}\")\n        \n        chunk_iterator = self.chunks(self.dataset, self.batch_size)\n        # Calculate num_chunks carefully to avoid issues if self.dataset is empty later\n        num_chunks = math.ceil(len(self.dataset) / self.batch_size) if self.dataset else 0\n\n        if self.verbose and num_chunks == 0 and self.dataset : # Should not happen if initial check passes\n             print(\"MLMGenerator.generate: Warning - num_chunks is 0 but dataset is not empty. This is unexpected.\")\n\n\n        for i, examples_batch in tqdm(enumerate(chunk_iterator), total=num_chunks, desc=\"MLM Batch Processing\", disable=(not self.verbose)):\n            if self.verbose: print(f\"MLMGenerator.generate: Processing chunk {i+1}/{num_chunks}. Batch items: {len(examples_batch)}\")\n            \n            sents_to_be_noised = [str(each) for each in examples_batch] \n            if not sents_to_be_noised:\n                if self.verbose: print(f\"MLMGenerator.generate: Chunk {i+1} is empty. Skipping.\")\n                continue\n                \n            if self.verbose: print(f\"MLMGenerator.generate: First sentence in batch to be noised (chunk {i+1}): '{sents_to_be_noised[0][:100]}...'\")\n            \n            sents_noised = self.mlm_infiller(sents_to_be_noised) # This calls the model\n            \n            if self.verbose: print(f\"MLMGenerator.generate: Finished mlm_infiller for chunk {i+1}. Num noised sents from chunk: {len(sents_noised)}\")\n            sents_output.extend(sents_noised)\n        \n        if self.verbose: print(f\"MLMGenerator.generate: Finished generate() method. Total sents_output: {len(sents_output)}\")\n        return sents_output\n\n    def mlm_infiller(self, batch_of_sents):\n        if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Starting for a batch of {len(batch_of_sents)} sentences.\")\n        \n        masked_batch_input_ids = []\n        # These are not directly used by current mlm_infiller logic for constructing labels for MLM loss,\n        # but kept if you want to adapt it later to output MLM labels too.\n        # mask_indices_batch = [] \n        # original_token_ids_batch_for_label = []\n\n        for sent_idx, each_sent in enumerate(batch_of_sents):\n            if self.verbose and sent_idx < 2: # Log first few sentences in a batch\n                print(f\"    MLMGenerator.mlm_infiller: Processing sentence {sent_idx+1} in batch: '{each_sent[:100]}...'\")\n            \n            # Truncate individual sentences if they are too long BEFORE masking\n            # -2 to leave space for [CLS] and [SEP]\n            token_ids = self.tokenizer.encode(each_sent, add_special_tokens=False, truncation=True, max_length=self.tokenizer.model_max_length - 2)\n            \n            if not token_ids: # Handle cases where sentence becomes empty after tokenization (e.g. only special chars)\n                if self.verbose: print(f\"    MLMGenerator.mlm_infiller: Sentence {sent_idx+1} resulted in empty token_ids. Skipping.\")\n                # We need to append something to maintain batch structure if other sents are valid,\n                # or handle this more gracefully. For now, let's append a dummy [PAD] sequence if we must maintain length.\n                # However, it's better to filter these out or ensure inputs are clean.\n                # For simplicity, if a sentence is empty, the resulting \"noised\" sentence will also be effectively empty.\n                # Let's create a minimal sequence that can be padded.\n                masked_batch_input_ids.append([self.tokenizer.cls_token_id, self.tokenizer.sep_token_id])\n                continue\n\n            num_to_mask = max(1, int(self.mask_percent * len(token_ids)))\n            mask_indices = sorted(random.sample(list(range(len(token_ids))), num_to_mask))\n            \n            current_masked_ids = list(token_ids)\n            # current_original_labels = [-100] * len(token_ids) # For MLM loss, not directly used for generation here\n\n            for idx_in_token_ids in mask_indices:\n                # current_original_labels[idx_in_token_ids] = current_masked_ids[idx_in_token_ids]\n                prob = random.random()\n                if prob < 0.8: \n                    current_masked_ids[idx_in_token_ids] = self.tokenizer.mask_token_id\n                elif prob < 0.9: \n                    current_masked_ids[idx_in_token_ids] = random.randint(0, self.tokenizer.vocab_size - 1)\n                # 10% keep original - current_masked_ids[idx] is already original\n\n            final_input_ids = [self.tokenizer.cls_token_id] + current_masked_ids + [self.tokenizer.sep_token_id]\n            masked_batch_input_ids.append(final_input_ids)\n        \n        if not masked_batch_input_ids:\n            if self.verbose: print(\"  MLMGenerator.mlm_infiller: No valid sequences to process after initial tokenization checks.\")\n            return []\n\n        if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Preparing to pad {len(masked_batch_input_ids)} sequences.\")\n        try:\n            inputs = self.tokenizer.pad(\n                {\"input_ids\": masked_batch_input_ids},\n                padding=True, \n                return_attention_mask=True, \n                return_tensors=\"pt\"\n            ).to(self.device)\n        except Exception as e:\n            if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Error during tokenizer.pad: {e}\")\n            # Print details of what was passed to pad\n            for idx, seq_ids in enumerate(masked_batch_input_ids):\n                 if self.verbose: print(f\"    Sequence {idx} length: {len(seq_ids)}, content: {seq_ids[:10]}...\")\n            return [\"\"] * len(batch_of_sents) # Return empty strings on padding error\n\n        \n        if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Padded inputs created. Shape: {inputs['input_ids'].shape}. Calling model...\")\n        try:\n            with torch.no_grad():\n                logits = self.model(**inputs).logits\n        except Exception as e:\n            if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Error during model inference: {e}\")\n            return [\"\"] * len(batch_of_sents) # Return empty strings on model error\n\n        if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: {logits.shape}\")\n\n        infilled_sents = []\n        for i in range(len(masked_batch_input_ids)): # Iterate original number of sequences before padding\n            sent_logits = logits[i] # Logits for the i-th sequence in the batch\n            # Get the input_ids for this specific sequence from the padded batch\n            current_padded_input_ids = inputs['input_ids'][i].tolist()\n            \n            # This was the original list of tokens with CLS/SEP before padding\n            original_sequence_before_padding = masked_batch_input_ids[i] \n            \n            # Reconstruct the sequence by infilling masks from original_sequence_before_padding\n            # using logits that correspond to its unpadded length.\n            reconstructed_ids = list(original_sequence_before_padding) # Work on a copy\n\n            mask_positions_in_original = [idx for idx, token_id in enumerate(original_sequence_before_padding) if token_id == self.tokenizer.mask_token_id]\n\n            for pos_in_orig in mask_positions_in_original:\n                 predicted_token_id = sent_logits[pos_in_orig].argmax(axis=-1).item()\n                 reconstructed_ids[pos_in_orig] = predicted_token_id\n            \n            infilled_sent_text = self.tokenizer.decode(reconstructed_ids, skip_special_tokens=True)\n            infilled_sents.append(infilled_sent_text)\n\n        if self.verbose: print(f\"  MLMGenerator.mlm_infiller: Finished for batch. Returning {len(infilled_sents)} sentences.\")\n        return infilled_sents \n\nclass ExtractiveSummarizationGenerator:\n    def __init__(self) -> None:\n        pass\n\n    def generate(self, texts, verbose=True):\n        from summa.summarizer import summarize \n        summaries = []\n        for text in tqdm(texts, desc=\"Extracting Summary\", leave=False, disable=(not verbose)):\n            summ = \"\"\n            try:\n                num_words = len(text.split())\n                if num_words > 0:\n                    target_ratio = max(0.1, min(0.3, 50.0 / num_words if num_words > 50 else 0.2))\n                    summ = summarize(text, ratio=target_ratio)\n                if not summ.strip() and num_words > 0: \n                    summ = summarize(text, words=min(50, num_words // 2 if num_words // 2 > 0 else 1))\n            except Exception as e:\n                pass \n            summaries.append(summ.strip() if summ else text.split('.')[0] if '.' in text else text[:100]) \n        return summaries\n\n# --- DataGenerator Class ---\nclass DataGenerator:\n    def __init__(self, dataset_names, target_samples_per_dataset=20000, verbose=True):\n        self.dataset_names = dataset_names\n        self.datasets = dict()\n        self.target_samples = target_samples_per_dataset\n        self.verbose = verbose\n        self.device = DEVICE\n\n        self._qa2d_generator = None\n        self._qa_generator = None\n        self._mlm_generators = {} \n        self._ext_summarizer = None\n\n        self.load_dataset_from_huggingface()\n\n    @property\n    def qa2d_generator(self):\n        if self._qa2d_generator is None:\n            if self.verbose: print(\"Initializing QA2D generator...\")\n            self._qa2d_generator = QA2D(device=self.device, verbose=self.verbose)\n        return self._qa2d_generator\n\n    @property\n    def qa_generator(self):\n        if self._qa_generator is None:\n            if self.verbose: print(\"Initializing QAnswering generator...\")\n            self._qa_generator = QAnswering(device=self.device, verbose=self.verbose)\n        return self._qa_generator\n        \n    def get_mlm_generator(self, corpus_name_key, corpra):\n        if corpus_name_key not in self._mlm_generators:\n            if self.verbose: print(f\"Initializing MLM generator for {corpus_name_key}...\")\n            self._mlm_generators[corpus_name_key] = MLMGeneratorWithPairedData(\n                corpra=corpra, device=self.device, batch_size=64, mask_percent=0.25, verbose=self.verbose\n            )\n        return self._mlm_generators[corpus_name_key]\n        \n    @property\n    def ext_summarizer(self):\n        if self._ext_summarizer is None:\n            if self.verbose: print(\"Initializing ExtractiveSummarizationGenerator...\")\n            self._ext_summarizer = ExtractiveSummarizationGenerator()\n        return self._ext_summarizer\n\n    def load_dataset_from_huggingface(self):\n        for each_dataset_name in self.dataset_names:\n            if each_dataset_name not in DATASET_HUGGINGFACE:\n                if self.verbose: print(f\"Skipping {each_dataset_name}: Not in DATASET_HUGGINGFACE config.\")\n                self.datasets[each_dataset_name] = None\n                continue\n            \n            if self.verbose: print(f\"Loading raw dataset: {each_dataset_name}\")\n            config_entry = DATASET_CONFIG.get(each_dataset_name, {})\n            if config_entry.get('huggingface'):\n                try:\n                    dataset_args = DATASET_HUGGINGFACE[each_dataset_name][:-1]\n                    split_name = DATASET_HUGGINGFACE[each_dataset_name][-1]\n                    \n                    # Use provided config_name if available (e.g. for glue, anli)\n                    hf_config_name = dataset_args[1] if len(dataset_args) > 1 and dataset_args[1] is not None else None\n                    if hf_config_name:\n                         loaded_data = load_dataset(dataset_args[0], name=hf_config_name, split=split_name, trust_remote_code=True)\n                    else:\n                         loaded_data = load_dataset(dataset_args[0], split=split_name, trust_remote_code=True)\n                    \n                    self.datasets[each_dataset_name] = loaded_data\n                except Exception as e:\n                    if self.verbose: print(f\"Could not load {each_dataset_name} from Hugging Face: {e}\")\n                    self.datasets[each_dataset_name] = None\n                    continue\n            else: # Should not happen if we only process datasets from DATASET_HUGGINGFACE\n                if self.verbose: print(f\"Skipping {each_dataset_name} as it's not marked for Hugging Face loading (problem in config).\")\n                self.datasets[each_dataset_name] = None\n                continue\n            \n            if self.datasets.get(each_dataset_name):\n                 if self.verbose: print(f\"Loaded {each_dataset_name} with {len(self.datasets[each_dataset_name])} examples.\")\n            else:\n                 if self.verbose: print(f\"Failed to load or no examples for {each_dataset_name}.\")\n\n    def _get_field(self, example, field_name_or_list, default=\"\"):\n        if isinstance(field_name_or_list, list): # For cases like ['question', 'answers']\n            # This part needs to be specific to how fields are combined.\n            # For now, assumes the first is primary and others are appended or handled by task logic.\n            # A more robust way would be to have specific extractors per field combo.\n            # This is a simplification.\n            if field_name_or_list[0] == 'question' and field_name_or_list[1] == 'answers' and 'answers' in example and example['answers']['text']:\n                 return example['question'] + \" \" + example['answers']['text'][0] # Example for SQuAD\n            elif field_name_or_list[0] == 'question' and field_name_or_list[1] == 'options' and 'options' in example: # For RACE\n                 # RACE processing is complex due to multiple options, handled in its specific method.\n                 # This generic getter won't be enough for RACE's text_b.\n                 return example['question'] # Placeholder\n            elif field_name_or_list[0] == 'background' and field_name_or_list[1] == 'situation' : # For ROPES\n                 return example.get('background', \"\") + \" \" + example.get('situation', \"\")\n            return str(example.get(field_name_or_list[0], default))\n        return str(example.get(field_name_or_list, default))\n\n\n    def _generic_process_label_passthrough(self, dataset_name_key, create_text_c_via_mlm=False):\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n        \n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n\n        # Determine a number of raw examples to process, can be more than target_samples if augmentation is light\n        num_raw_to_process = min(len(data_to_process), self.target_samples * 3 if self.target_samples < 50000 else self.target_samples * 2)\n        if len(data_to_process) > num_raw_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_raw_to_process} from {len(data_to_process)} for processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_raw_to_process))\n\n        text_b_originals = []\n        processed_records = []\n\n        for example in tqdm(data_to_process, desc=f'Constructing {dataset_name_key}', leave=False, disable=(not self.verbose)):\n            text_a = self._get_field(example, config['text_a'])\n            text_b_orig = self._get_field(example, config['text_b']) # Assuming text_b is a single field from config\n            label = example[config['label']]\n            \n            if dataset_name_key == 'vitaminc':\n                if label == 'SUPPORTS': label = 0\n                elif label == 'REFUTES': label = 2\n                else: label = 1 \n            elif dataset_name_key == 'stsb' or dataset_name_key == 'sick':\n                label = float(label) / 5.0 \n            elif dataset_name_key == 'doc_nli': # Handling for saattrupdan/doc-nli string labels\n                if label.lower() == 'entailment': label = 1\n                else: label = 0 # Neutral and Contradiction map to 0 for bin_nli\n            elif dataset_name_key == 'nli_fever': # pietrolesci/nli_fever\n                if label == 'SUPPORTS': label = 0\n                elif label == 'REFUTES': label = 2\n                else: label = 1 # 'NOT ENOUGH INFO'\n            \n            processed_records.append({'text_a': text_a, 'text_b_orig': text_b_orig, 'orig_label': label})\n            if create_text_c_via_mlm:\n                text_b_originals.append(text_b_orig)\n\n        hallucinated_text_b = []\n        if create_text_c_via_mlm and text_b_originals:\n            mlm_gen = self.get_mlm_generator(f\"{dataset_name_key}_text_b\", text_b_originals)\n            hallucinated_text_b = mlm_gen.generate()\n        \n        for i, record in enumerate(processed_records):\n            current_text_c = [hallucinated_text_b[i]] if create_text_c_via_mlm and hallucinated_text_b else []\n            output.append({\n                'text_a': record['text_a'],\n                'text_b': [record['text_b_orig']],\n                'text_c': current_text_c,\n                'orig_label': record['orig_label']\n            })\n        return output\n\n    # NLI tasks\n    def process_mnli(self): return self._generic_process_label_passthrough('mnli', create_text_c_via_mlm=True)\n    def process_anli_r1(self): return self._generic_process_label_passthrough('anli_r1', create_text_c_via_mlm=True)\n    def process_anli_r2(self): return self._generic_process_label_passthrough('anli_r2', create_text_c_via_mlm=True)\n    def process_anli_r3(self): return self._generic_process_label_passthrough('anli_r3', create_text_c_via_mlm=True)\n    def process_snli(self): return self._generic_process_label_passthrough('snli', create_text_c_via_mlm=True)\n    def process_doc_nli(self): return self._generic_process_label_passthrough('doc_nli', create_text_c_via_mlm=True) # bin_nli\n\n    # Fact Checking tasks\n    def process_vitaminc(self): return self._generic_process_label_passthrough('vitaminc', create_text_c_via_mlm=True)\n    def process_nli_fever(self): return self._generic_process_label_passthrough('nli_fever', create_text_c_via_mlm=True)\n\n    # Paraphrase tasks\n    def process_paws(self): return self._generic_process_label_passthrough('paws', create_text_c_via_mlm=True)\n    def process_mrpc(self): return self._generic_process_label_passthrough('mrpc', create_text_c_via_mlm=True)\n    def process_qqp(self): return self._generic_process_label_passthrough('qqp', create_text_c_via_mlm=True)\n\n    # STS tasks\n    def process_stsb(self): return self._generic_process_label_passthrough('stsb') # No MLM for text_c by default for STS\n    def process_sick(self): return self._generic_process_label_passthrough('sick') # No MLM for text_c\n\n    # Summarization tasks\n    def _process_summarization_generic(self, dataset_name_key):\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None:\n            if self.verbose: print(f\"Dataset {dataset_name_key} not loaded or empty, skipping summarization processing.\")\n            return output\n\n        config = DATASET_CONFIG[dataset_name_key]\n        original_data = self.datasets[dataset_name_key]\n        \n        # Determine how many raw examples to process for augmentation sources\n        # We need `self.target_samples` final examples. If each original example produces one output record,\n        # then processing around `self.target_samples` (or slightly more to account for filtering) is fine.\n        # If augmentation is heavy and might fail for some, process more.\n        # The original AlignScore created multiple pairs from one source example for summarization.\n        # This version aims for one output record per input example, with text_b (positive) and text_c (negative via MLM).\n        \n        num_to_process_for_mlm_source = min(len(original_data), self.target_samples * 2) # Process up to 2x for MLM source generation\n        if len(original_data) > num_to_process_for_mlm_source:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process_for_mlm_source} from {len(original_data)} for creating MLM source material.\")\n            data_for_mlm_source = original_data.shuffle(seed=42).select(range(num_to_process_for_mlm_source))\n        else:\n            data_for_mlm_source = original_data\n            \n        if self.verbose: print(f\"{dataset_name_key}: Using {len(data_for_mlm_source)} samples as source for MLM text_c generation.\")\n\n        texts_a_source = [self._get_field(ex, config['text_a']) for ex in data_for_mlm_source]\n        gold_summaries_source = [self._get_field(ex, config['text_b']) for ex in data_for_mlm_source]\n        \n        gold_hallucinated_batch = []\n        if gold_summaries_source: # Only run MLM if there are summaries\n            if self.verbose: print(f\"Generating batch MLM summaries for {dataset_name_key} (from {len(gold_summaries_source)} gold summaries)...\")\n            # Use a unique key for the batch MLM generator instance\n            mlm_gen_gold_batch = self.get_mlm_generator(f\"{dataset_name_key}_gold_summ_batch\", gold_summaries_source)\n            gold_hallucinated_batch = mlm_gen_gold_batch.generate()\n        else:\n            if self.verbose: print(f\"No gold summaries to process with MLM for {dataset_name_key}.\")\n\n        # Now iterate through the (potentially larger, or same as data_for_mlm_source) data_to_process set\n        # to create the final output. If data_for_mlm_source was a subset, we might not have\n        # pre-generated hallucinated versions for all. The fallback handles this.\n        # For consistency and to ensure we can map hallucinated summaries, we iterate through data_for_mlm_source.\n        # If you want to produce self.target_samples from a larger original_data, sample original_data first.\n\n        for i, example_data_point in tqdm(enumerate(data_for_mlm_source), \n                                           desc=f\"Constructing final {dataset_name_key} examples\", \n                                           total=len(data_for_mlm_source), \n                                           leave=False, disable=(not self.verbose)):\n            text_a_i = texts_a_source[i] # Or self._get_field(example_data_point, config['text_a'])\n            current_gold_summary = gold_summaries_source[i] # Or self._get_field(example_data_point, config['text_b'])\n\n            current_text_b = [current_gold_summary] # Positive example is the original summary\n            current_text_c = []\n\n            # Try to use the pre-generated batch hallucinated summary\n            if gold_hallucinated_batch and i < len(gold_hallucinated_batch) and gold_hallucinated_batch[i]:\n                current_text_c.append(gold_hallucinated_batch[i])\n            \n            # Fallback: If batch MLM didn't produce a result for this item (e.g. it was filtered out, or an error)\n            # or if the batch result was an empty string.\n            if not current_text_c or not current_text_c[0]: \n                if self.verbose: print(f\"Fallback: Single MLM for item {i} in {dataset_name_key} (gold summary: '{current_gold_summary[:50]}...')\")\n                # Ensure a unique key for the MLM generator if caching, or just create anew\n                # The key should be unique enough if you expect different corpora for the same dataset_name_key, which is unlikely here.\n                mlm_gen_single = self.get_mlm_generator(f\"{dataset_name_key}_single_gold_fallback_{i % 100}\", [current_gold_summary]) # Modulo to limit cache size for single items\n                single_hallucinated_list = mlm_gen_single.generate() # generate() returns a list\n                if single_hallucinated_list and single_hallucinated_list[0]: # Check if list and first element are non-empty\n                    current_text_c = [single_hallucinated_list[0]] # Replace if fallback produced something\n                else:\n                    # If even single MLM fails to produce text_c, use a placeholder or original text_b as text_c\n                    # to indicate a \"less ideal\" negative. This ensures text_c is not empty.\n                    current_text_c = [current_gold_summary + \" (perturbed placeholder)\"] # Placeholder\n                    if self.verbose: print(f\"Fallback MLM for item {i} in {dataset_name_key} also failed or returned empty. Using placeholder for text_c.\")\n\n\n            output.append({\n                'text_a': text_a_i,\n                'text_b': current_text_b, # List of \"good\" summaries (just one gold here)\n                'text_c': current_text_c, # List of \"bad\" summaries (one hallucinated, or placeholder)\n                'orig_label': -1 # Special label for summarization, indicates text_b is positive reference, text_c is negative/perturbed.\n            })\n            \n        return output\n\n    def process_xsum(self): return self._process_summarization_generic('xsum')\n    def process_cnndm(self): return self._process_summarization_generic('cnndm')\n    def process_wikihow(self): return self._process_summarization_generic('wikihow')\n    \n    # QA Tasks - more complex due to answer/option processing\n    def process_squad_v2_new(self): # Name from AlignScore's DATASET_CONFIG\n        # This corresponds to 'squad_v2' in DATASET_HUGGINGFACE\n        dataset_name_key = 'squad_v2' \n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n        \n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2) # Process up to 2x for augmentations\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n        else:\n            if self.verbose: print(f\"{dataset_name_key}: Processing all {len(data_to_process)} samples for QA.\")\n\n\n        not_ans_contexts, not_ans_questions = [], []\n        ans_contexts, ans_questions, ans_answers = [], [], []\n\n        for ex in tqdm(data_to_process, desc=f\"Collecting SQuADv2 examples\", disable=(not self.verbose)):\n            if not ex['answers']['text']: # No answer\n                not_ans_contexts.append(ex['context'])\n                not_ans_questions.append(ex['question'])\n            else: # Has answer\n                ans_contexts.append(ex['context'])\n                ans_questions.append(ex['question'])\n                ans_answers.append(ex['answers']['text'][0]) # Take first answer\n\n        if ans_questions:\n            ans_declarative = self.qa2d_generator.generate(ans_questions, ans_answers)\n            for i, decl_sent in enumerate(ans_declarative):\n                output.append({'text_a': ans_contexts[i], 'text_b': [decl_sent], 'text_c': [], 'orig_label': 1})\n\n        if not_ans_questions:\n            gen_not_ans_answers = self.qa_generator.generate(not_ans_questions, not_ans_contexts)\n            not_ans_declarative = self.qa2d_generator.generate(not_ans_questions, gen_not_ans_answers)\n            for i, decl_sent in enumerate(not_ans_declarative):\n                output.append({'text_a': not_ans_contexts[i], 'text_b': [decl_sent], 'text_c': [], 'orig_label': 0})\n        return output\n\n    def process_race(self):\n        dataset_name_key = 'race'\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n        \n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2)\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n\n        option_dict = {'A': 0, 'B': 1, 'C': 2, 'D': 3}\n        contexts, questions_cloze, answers_cloze, labels_cloze = [], [], [], []\n        contexts_qa, questions_qa, correct_options_qa, wrong_options_qa = [], [], [], []\n\n        for ex in tqdm(data_to_process, desc=f\"Constructing {dataset_name_key}\", disable=(not self.verbose)):\n            article = self._get_field(ex, config['text_a'])\n            question = self._get_field(ex, config['text_b'][0])\n            options = ex[config['text_b'][1]] # This is a list\n            answer_char = ex[config['label']]\n            answer_idx = option_dict[answer_char]\n\n            if \"_\" in question: # Cloze style\n                for i, opt_text in enumerate(options):\n                    contexts_cloze.append(article)\n                    questions_cloze.append(question.replace(\"_\", opt_text)) # Fill blank\n                    answers_cloze.append(\"\") # No separate answer for cloze, it's in question\n                    labels_cloze.append(1 if i == answer_idx else 0)\n            else: # QA style\n                contexts_qa.append(article)\n                questions_qa.append(question)\n                correct_options_qa.append(options[answer_idx])\n                current_wrong_options = [opt for i, opt in enumerate(options) if i != answer_idx]\n                if current_wrong_options: # Ensure there's at least one wrong option\n                     wrong_options_qa.append(random.choice(current_wrong_options))\n                else: # Should not happen in RACE if options > 1\n                     wrong_options_qa.append(\"A distractor.\")\n\n\n        # Process cloze style directly\n        for i in range(len(contexts_cloze)):\n            output.append({'text_a': contexts_cloze[i], 'text_b': [questions_cloze[i]], 'text_c': [], 'orig_label': labels_cloze[i]})\n        \n        # Process QA style with QA2D\n        if questions_qa:\n            # Positive examples\n            decl_correct_qa = self.qa2d_generator.generate(questions_qa, correct_options_qa)\n            for i, decl_sent in enumerate(decl_correct_qa):\n                output.append({'text_a': contexts_qa[i], 'text_b': [decl_sent], 'text_c': [], 'orig_label': 1})\n            \n            # Negative examples\n            decl_wrong_qa = self.qa2d_generator.generate(questions_qa, wrong_options_qa)\n            for i, decl_sent in enumerate(decl_wrong_qa):\n                output.append({'text_a': contexts_qa[i], 'text_b': [decl_sent], 'text_c': [], 'orig_label': 0})\n        return output\n\n    def _process_qa_multiple_choice_options(self, dataset_name_key):\n        # Generic processor for QA tasks where answer is choosing from given options\n        # e.g. quail, sciq (adapted), boolq (adapted)\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n\n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2)\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n\n        contexts, questions, correct_answers, incorrect_answers = [], [], [], []\n\n        for ex in tqdm(data_to_process, desc=f\"Processing {dataset_name_key}\", disable=(not self.verbose)):\n            context = self._get_field(ex, config['text_a'])\n            question = self._get_field(ex, config['text_b'][0] if isinstance(config['text_b'], list) else config['text_b'])\n            \n            options = []\n            correct_option_text = \"\"\n            \n            if dataset_name_key == 'quail':\n                options = ex['answers']\n                correct_option_text = options[ex['correct_answer_id']]\n            elif dataset_name_key == 'sciq':\n                options = [ex['correct_answer'], ex['distractor1'], ex['distractor2'], ex['distractor3']]\n                correct_option_text = ex['correct_answer']\n            elif dataset_name_key == 'boolq': # boolq: answer is True/False (1/0)\n                # We frame it as \"Question? Yes.\" or \"Question? No.\"\n                # Positive example:\n                contexts.append(context)\n                questions.append(question)\n                correct_answers.append(\"Yes.\" if ex['answer'] else \"No.\")\n                # Negative example:\n                contexts.append(context)\n                questions.append(question)\n                incorrect_answers.append(\"No.\" if ex['answer'] else \"Yes.\") # Flipped answer for incorrect\n                continue # boolq handled differently with direct append\n            \n            if not options or not correct_option_text: continue # Skip if no options\n\n            contexts.append(context)\n            questions.append(question)\n            correct_answers.append(correct_option_text)\n\n            current_incorrect_options = [opt for opt in options if opt != correct_option_text]\n            if current_incorrect_options:\n                contexts.append(context) # For the negative pair\n                questions.append(question) # For the negative pair\n                incorrect_answers.append(random.choice(current_incorrect_options))\n            \n        # For boolq, output was already populated\n        if dataset_name_key == 'boolq':\n            if questions: # if any boolq items were processed\n                decl_correct = self.qa2d_generator.generate(questions[:len(correct_answers)], correct_answers) # questions and correct_answers have same length now\n                decl_incorrect = self.qa2d_generator.generate(questions[len(correct_answers):], incorrect_answers)\n\n                for i, decl_s in enumerate(decl_correct):\n                    output.append({'text_a': contexts[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 1})\n                for i, decl_s in enumerate(decl_incorrect):\n                    output.append({'text_a': contexts[len(correct_answers)+i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 0})\n            return output\n\n\n        # For other MCQA (quail, sciq)\n        if questions: # Check if there's anything to process\n            if correct_answers:\n                decl_correct = self.qa2d_generator.generate(questions[:len(correct_answers)], correct_answers) # Slice questions\n                for i, decl_s in enumerate(decl_correct):\n                    output.append({'text_a': contexts[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 1})\n            \n            if incorrect_answers: # incorrect_answers might be shorter if not all had distractors\n                # We need to match the contexts and questions for these incorrect answers\n                # The way contexts/questions were appended means the first set matches correct_answers,\n                # the second set (if present) matches incorrect_answers.\n                offset = len(correct_answers)\n                decl_incorrect = self.qa2d_generator.generate(questions[offset:offset+len(incorrect_answers)], incorrect_answers) # Slice questions for incorrect\n                for i, decl_s in enumerate(decl_incorrect):\n                    output.append({'text_a': contexts[offset+i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 0})\n        return output\n\n    def process_quail(self): return self._process_qa_multiple_choice_options('quail')\n    def process_sciq(self): return self._process_qa_multiple_choice_options('sciq')\n    def process_boolq(self): return self._process_qa_multiple_choice_options('boolq')\n\n    def _process_qa_extractive_or_abstractive(self, dataset_name_key, negative_sample_no_ans_only=True):\n        # For SQuAD-like, DROP, Duorc, Quoref, ROPES, NewsQA, AdversarialQA\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n        \n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2) # Limit input to QA generation\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n        \n        samples_for_neg_gen = [] # Tuples of (context, question, list_of_gold_answers_text)\n\n        if dataset_name_key == 'newsqa': # Special iteration for newsqa\n            for story in tqdm(data_to_process['data'] if isinstance(data_to_process, dict) else data_to_process, desc=f'Collecting {dataset_name_key} examples', disable=(not self.verbose)):\n                if story.get('type') != 'train' and isinstance(data_to_process, dict): continue # Skip if newsqa raw format\n                context = story['text']\n                for q_entry in story['questions']:\n                    if q_entry.get('isQuestionBad', 0.0) > 0.2 : continue # Skip bad questions\n                    question = q_entry['q']\n                    current_answers = []\n                    if 'consensus' in q_entry and 's' in q_entry['consensus'] and 'e' in q_entry['consensus']:\n                        start, end = q_entry['consensus']['s'], q_entry['consensus']['e']\n                        current_answers.append(context[start:end].strip())\n                    samples_for_neg_gen.append((context, question, current_answers))\n        else: # Generic iteration for other datasets\n            for ex in tqdm(data_to_process, desc=f\"Collecting {dataset_name_key} examples\", disable=(not self.verbose)):\n                context = \"\"\n                if isinstance(config['text_a'], list): # For ROPES: ['background', 'situation']\n                    context = self._get_field(ex, config['text_a'][0], \"\") + \" \" + self._get_field(ex, config['text_a'][1], \"\")\n                else:\n                    context = self._get_field(ex, config['text_a'])\n\n                question = self._get_field(ex, config['text_b'][0])\n                \n                answers_field = config['text_b'][1]\n                raw_answers = ex.get(answers_field)\n                current_answers_text = []\n                if isinstance(raw_answers, dict) and 'text' in raw_answers: # SQuAD, AdversarialQA, Quoref\n                    current_answers_text = raw_answers['text'] if isinstance(raw_answers['text'], list) else [raw_answers['text']]\n                elif isinstance(raw_answers, dict) and 'spans' in raw_answers: # DROP\n                    current_answers_text = raw_answers['spans'] if isinstance(raw_answers['spans'], list) else [raw_answers['spans']]\n                elif isinstance(raw_answers, list): # Duorc\n                     current_answers_text = raw_answers\n                \n                samples_for_neg_gen.append((context, question, [str(ans) for ans in current_answers_text if ans]))\n\n        # Process samples: create positive from gold, negative from generated fake answers\n        contexts_pos, questions_pos, answers_pos_text = [], [], []\n        contexts_for_neg, questions_for_neg, gold_answers_for_neg_gen = [], [], []\n\n        for context, question, gold_answers in samples_for_neg_gen:\n            if gold_answers: # Has at least one gold answer\n                contexts_pos.append(context)\n                questions_pos.append(question)\n                answers_pos_text.append(random.choice(gold_answers)) # Pick one gold answer\n            \n            if not gold_answers or not negative_sample_no_ans_only:\n                contexts_for_neg.append(context)\n                questions_for_neg.append(question)\n                gold_answers_for_neg_gen.append(gold_answers) # Pass all gold to help T5 avoid them\n\n        if questions_pos:\n            decl_positive = self.qa2d_generator.generate(questions_pos, answers_pos_text)\n            for i, decl_s in enumerate(decl_positive):\n                output.append({'text_a': contexts_pos[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 1})\n        \n        if questions_for_neg:\n            # Generate fake answers (where T5 tries to answer even if it shouldn't or differently)\n            # The original AlignScore `generate_fake_answer` masks gold answers from context before T5 generation.\n            # This is complex; for simplicity, QAnswering might already generate plausible but incorrect ones.\n            fake_answers = self.qa_generator.generate(questions_for_neg, contexts_for_neg) # Or a more complex T5 call\n            decl_negative = self.qa2d_generator.generate(questions_for_neg, fake_answers)\n            for i, decl_s in enumerate(decl_negative):\n                output.append({'text_a': contexts_for_neg[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 0})\n        return output\n\n    def process_adversarial_qa(self): return self._process_qa_extractive_or_abstractive('adversarial_qa', negative_sample_no_ans_only=False)\n    def process_drop(self): return self._process_qa_extractive_or_abstractive('drop', negative_sample_no_ans_only=False)\n    def process_duorc_self(self): return self._process_qa_extractive_or_abstractive('duorc_self', negative_sample_no_ans_only=False)\n    def process_duorc_paraphrase(self): return self._process_qa_extractive_or_abstractive('duorc_paraphrase', negative_sample_no_ans_only=False)\n    def process_quoref(self): return self._process_qa_extractive_or_abstractive('quoref', negative_sample_no_ans_only=False)\n    def process_ropes(self): return self._process_qa_extractive_or_abstractive('ropes', negative_sample_no_ans_only=False)\n    def process_newsqa(self): return self._process_qa_extractive_or_abstractive('newsqa', negative_sample_no_ans_only=False)\n\n\n    def process_hotpot_qa_generic(self, dataset_name_key):\n        # Adapted from AlignScore's prepare_hotpot_qa_samples\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2)\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n\n        samples_for_qa2d_pos = [] # (context_str, question, answer_text)\n        samples_for_qa2d_neg = [] # (context_str, question, fake_answer_text)\n\n        for ex in tqdm(data_to_process, desc=f\"Preparing {dataset_name_key}\", disable=(not self.verbose)):\n            question = ex['question']\n            answer = ex['answer']\n            \n            supporting_facts_titles = set(title for title, _ in ex['supporting_facts'])\n            \n            context_docs_text = []\n            irrelevant_docs_text = []\n\n            for title, sentences in zip(ex['context']['title'], ex['context']['sentences']):\n                doc_text = \" \".join(sentences)\n                if title in supporting_facts_titles:\n                    context_docs_text.append(doc_text)\n                else:\n                    irrelevant_docs_text.append(doc_text)\n            \n            # Create positive context from supporting + some irrelevant\n            final_context_parts = list(context_docs_text)\n            if irrelevant_docs_text and len(final_context_parts) < 4 : # Add some distractors\n                final_context_parts.append(random.choice(irrelevant_docs_text))\n            random.shuffle(final_context_parts)\n            positive_context_str = \" \".join(final_context_parts)\n            \n            samples_for_qa2d_pos.append((positive_context_str, question, answer))\n            \n            # Create negative context (e.g. only irrelevant, or generate fake answer for positive_context_str)\n            if irrelevant_docs_text:\n                 negative_context_str = \" \".join(random.sample(irrelevant_docs_text, min(len(irrelevant_docs_text), 2))) # Example\n                 # Generate a plausible but likely wrong answer from this negative context\n                 fake_answer_from_neg_ctx = self.qa_generator.generate([question], [negative_context_str])[0]\n                 samples_for_qa2d_neg.append((negative_context_str, question, fake_answer_from_neg_ctx ))\n            # Alternatively, generate a fake answer for the positive_context_str\n            fake_answer_for_pos_ctx = self.qa_generator.generate([question], [positive_context_str])[0]\n            if fake_answer_for_pos_ctx.lower() != answer.lower(): # Ensure it's different\n                 samples_for_qa2d_neg.append((positive_context_str, question, fake_answer_for_pos_ctx))\n\n\n        if samples_for_qa2d_pos:\n            contexts, questions, answers = zip(*samples_for_qa2d_pos)\n            decl_positive = self.qa2d_generator.generate(list(questions), list(answers))\n            for i, decl_s in enumerate(decl_positive):\n                output.append({'text_a': contexts[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 1})\n\n        if samples_for_qa2d_neg:\n            contexts, questions, fake_answers = zip(*samples_for_qa2d_neg)\n            decl_negative = self.qa2d_generator.generate(list(questions), list(fake_answers))\n            for i, decl_s in enumerate(decl_negative):\n                output.append({'text_a': contexts[i], 'text_b': [decl_s], 'text_c':[], 'orig_label': 0})\n        return output\n\n    def process_hotpot_qa_distractor(self): return self.process_hotpot_qa_generic('hotpot_qa_distractor')\n    def process_hotpot_qa_fullwiki(self): return self.process_hotpot_qa_generic('hotpot_qa_fullwiki')\n\n    def process_eraser_multi_rc(self):\n        dataset_name_key = 'eraser_multi_rc'\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n        \n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2) \n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n        \n        texts_b_orig = []\n        processed_records = []\n\n        for ex in tqdm(data_to_process, desc=f\"Constructing {dataset_name_key}\", disable=(not self.verbose)):\n            text_a = self._get_field(ex, config['text_a'])\n            # query_and_answer field has \"|\" separator, remove it.\n            text_b_orig = self._get_field(ex, config['text_b']).replace(\"|\", \"\")\n            label = int(ex[config['label']])\n            processed_records.append({'text_a': text_a, 'text_b_orig': text_b_orig, 'orig_label': label})\n            texts_b_orig.append(text_b_orig)\n        \n        # Optionally create negative examples by perturbing text_b if all labels are 1\n        # For now, direct passthrough with MLM for text_c\n        mlm_gen = self.get_mlm_generator(f\"{dataset_name_key}_text_b\", texts_b_orig)\n        hallucinated_text_b = mlm_gen.generate()\n\n        for i, record in enumerate(processed_records):\n            output.append({\n                'text_a': record['text_a'],\n                'text_b': [record['text_b_orig']],\n                'text_c': [hallucinated_text_b[i]] if record['orig_label'] == 1 else [], # Add negative only if positive\n                'orig_label': record['orig_label']\n            })\n        return output\n        \n    def process_strategy_qa(self):\n        dataset_name_key = 'strategy_qa'\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n\n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2)\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for QA processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n\n        contexts, questions, answers_text_pos, answers_text_neg = [], [], [], []\n        for ex in tqdm(data_to_process, desc=f\"Constructing {dataset_name_key}\", disable=(not self.verbose)):\n            # Facts can be a list, join them.\n            facts_list = ex.get(config['text_a'], [])\n            context = \" \".join(facts_list) if isinstance(facts_list, list) else str(facts_list)\n            question = self._get_field(ex, config['text_b'])\n            answer_bool = ex[config['label']] # True or False\n\n            contexts.append(context)\n            questions.append(question)\n            answers_text_pos.append(\"Yes.\" if answer_bool else \"No.\")\n            \n            contexts.append(context) # For negative pair\n            questions.append(question) # For negative pair\n            answers_text_neg.append(\"No.\" if answer_bool else \"Yes.\") # Flipped\n\n        if questions:\n            decl_pos = self.qa2d_generator.generate(questions[:len(answers_text_pos)], answers_text_pos)\n            decl_neg = self.qa2d_generator.generate(questions[len(answers_text_pos):], answers_text_neg)\n\n            for i, decl_s in enumerate(decl_pos):\n                output.append({'text_a': contexts[i], 'text_b': [decl_s], 'text_c': [], 'orig_label': 1})\n            for i, decl_s in enumerate(decl_neg):\n                output.append({'text_a': contexts[len(answers_text_pos)+i], 'text_b': [decl_s], 'text_c': [], 'orig_label': 0})\n        return output\n        \n    def process_gap(self):\n        # Coreference resolution\n        dataset_name_key = 'gap'\n        output = []\n        if dataset_name_key not in self.datasets or self.datasets[dataset_name_key] is None: return output\n\n        config = DATASET_CONFIG[dataset_name_key]\n        data_to_process = self.datasets[dataset_name_key]\n        num_to_process = min(len(data_to_process), self.target_samples * 2)\n        if len(data_to_process) > num_to_process:\n            if self.verbose: print(f\"{dataset_name_key}: Selecting {num_to_process} from {len(data_to_process)} for Coref processing.\")\n            data_to_process = data_to_process.shuffle(seed=42).select(range(num_to_process))\n\n        for ex in tqdm(data_to_process, desc=f\"Constructing {dataset_name_key}\", disable=(not self.verbose)):\n            text_full = self._get_field(ex, config['text_a'])\n            pronoun = self._get_field(ex, config['text_b'][0])\n            entity_A_text = self._get_field(ex, config['text_b'][1])\n            entity_B_text = self._get_field(ex, config['text_b'][2])\n            \n            # Find pronoun offset to substitute\n            # This requires 'Pronoun-offset' field from original data, which might not be in HF version directly.\n            # HF 'gap' dataset has 'Pronoun-offset'\n            pronoun_offset = ex.get('Pronoun-offset', -1)\n            if pronoun_offset == -1: continue # Skip if offset is missing\n\n            text_with_A = text_full[:pronoun_offset] + entity_A_text + text_full[pronoun_offset + len(pronoun):]\n            label_A = 1 if ex[config['label'][0]] else 0 # A-coref\n            output.append({'text_a': text_full, 'text_b': [text_with_A], 'text_c': [], 'orig_label': label_A})\n\n            text_with_B = text_full[:pronoun_offset] + entity_B_text + text_full[pronoun_offset + len(pronoun):]\n            label_B = 1 if ex[config['label'][1]] else 0 # B-coref\n            output.append({'text_a': text_full, 'text_b': [text_with_B], 'text_c': [], 'orig_label': label_B})\n        return output\n\n\n    def generate(self): #\n        all_processed_data_info = {} #\n        for each_dataset_name in self.dataset_names: #\n            if each_dataset_name not in self.datasets or self.datasets[each_dataset_name] is None: #\n                if self.verbose: print(f\"Dataset {each_dataset_name} not loaded or empty, skipping processing.\")\n                all_processed_data_info[each_dataset_name] = 0\n                continue\n\n            if self.verbose: print(f\"\\nProcessing dataset: {each_dataset_name}\")\n            \n            # Determine the method name (e.g. squad_v2 uses process_squad_v2_new)\n            method_name_to_call = DATASET_CONFIG.get(each_dataset_name, {}).get('method_name', each_dataset_name)\n            \n            processed_examples = []\n            if hasattr(self, f'process_{method_name_to_call}'): #\n                processed_examples = getattr(self, f'process_{method_name_to_call}')() #\n            else:\n                if self.verbose: print(f\"Warning: No specific process method found for {each_dataset_name} (tried process_{method_name_to_call}). Skipping.\")\n                all_processed_data_info[each_dataset_name] = 0\n                continue\n                \n            if processed_examples:\n                if len(processed_examples) > self.target_samples: #\n                    if self.verbose: print(f\"Sampling {self.target_samples} from {len(processed_examples)} for {each_dataset_name}\")\n                    processed_examples = random.sample(processed_examples, self.target_samples) #\n                else:\n                    if self.verbose: print(f\"Using all {len(processed_examples)} examples for {each_dataset_name} (target was {self.target_samples})\")\n                \n                all_processed_data_info[each_dataset_name] = len(processed_examples)\n                \n                output_path = os.path.join(GENERATED_DATA_DIR, f\"{each_dataset_name}_20k.jsonl\") #\n                with open(output_path, 'w', encoding='utf8') as outfile:\n                    for record in processed_examples: #\n                        record_to_write = { #\n                            'task': DATASET_CONFIG[each_dataset_name]['task'], #\n                            'text_a': record['text_a'], #\n                            'text_b': record['text_b'], #\n                            'text_c': record.get('text_c', []), #\n                            'orig_label': record['orig_label'] #\n                        }\n                        json.dump(record_to_write, outfile, ensure_ascii=False) #\n                        outfile.write('\\n') #\n                if self.verbose: print(f\"Saved {len(processed_examples)} samples for {each_dataset_name} to {output_path}\")\n            else:\n                if self.verbose: print(f\"No examples processed for {each_dataset_name}.\")\n                all_processed_data_info[each_dataset_name] = 0\n        \n        return all_processed_data_info #","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:38:15.520053Z","iopub.execute_input":"2025-05-27T23:38:15.520312Z","iopub.status.idle":"2025-05-27T23:38:15.629670Z","shell.execute_reply.started":"2025-05-27T23:38:15.520294Z","shell.execute_reply":"2025-05-27T23:38:15.629033Z"}},"outputs":[],"execution_count":6},{"cell_type":"markdown","source":"# Execute Data Generation and Sampling","metadata":{}},{"cell_type":"code","source":"# --- Specify datasets to generate ---\n# WARNING: Processing ALL datasets defined in Cell 2 can be VERY time-consuming and resource-intensive.\n# Start with a small, representative subset to test the pipeline.\n# Ensure these names are keys in your DATASET_HUGGINGFACE and DATASET_CONFIG in Cell 2.\ndatasets_to_generate = [\n    'mnli',\n    'paws',\n    'xsum',\n    'stsb',\n    # 'squad_v2', # Uncomment to include a QA task (can be slow due to QA2D/QAnswering)\n    # 'vitaminc', # Uncomment for a fact-checking task\n    # 'doc_nli',  # Uncomment for binary NLI\n    # Add other dataset keys from your DATASET_CONFIG as needed\n]\n# Filter datasets_to_generate to only include those defined in DATASET_CONFIG\ndatasets_to_generate = [name for name in datasets_to_generate if name in DATASET_CONFIG]\n\nprint(f\"Initializing DataGenerator for: {datasets_to_generate}\")\n# Set verbose=False for less tqdm output during actual runs if preferred\ndata_gen = DataGenerator(datasets_to_generate,\n                           target_samples_per_dataset=SAMPLES_PER_DATASET_TARGET,\n                           verbose=True)\n\nprint(\"\\nStarting data generation and sampling...\")\ngenerated_data_info = data_gen.generate() # This will now save individual files\n\nprint(\"\\n--- Data Generation and Sampling Complete ---\")\nfor name, num_samples in generated_data_info.items():\n    print(f\"Dataset: {name}, Samples saved: {num_samples}\")\n\nprint(\"\\nGenerated files in:\", GENERATED_DATA_DIR)\nfor f_name in os.listdir(GENERATED_DATA_DIR):\n    if f_name.endswith(\"_20k.jsonl\"):\n        print(os.path.join(GENERATED_DATA_DIR, f_name))\n        # Quick check of one file\n        if f_name == \"mnli_20k.jsonl\": # Example check\n            print(f\"  First line of {f_name}:\")\n            with open(os.path.join(GENERATED_DATA_DIR, f_name), 'r') as f_check:\n                print(f\"    {f_check.readline().strip()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:41:49.757887Z","iopub.execute_input":"2025-05-27T23:41:49.758556Z","iopub.status.idle":"2025-05-27T23:49:01.369705Z","shell.execute_reply.started":"2025-05-27T23:41:49.758532Z","shell.execute_reply":"2025-05-27T23:49:01.369100Z"}},"outputs":[{"name":"stdout","text":"Initializing DataGenerator for: ['mnli', 'paws', 'xsum', 'stsb']\nLoading raw dataset: mnli\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/8.89k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e2750644da934eb2b75ddef4be16254a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/214M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c5900439551e45a0a783a98984442907"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(…)alidation_matched-00000-of-00001.parquet:   0%|          | 0.00/4.94M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ed05b343e55e40b2948fe0dfbcc1d0a5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(…)dation_mismatched-00000-of-00001.parquet:   0%|          | 0.00/5.10M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"68917b0df885474f91da6965018c6e54"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/392702 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"13fcd89e4a784bd384e07c5b4b3f6792"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation_matched split:   0%|          | 0/9815 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"93f876d36e2b463e85d71a7d1826c39e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation_mismatched split:   0%|          | 0/9832 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8eb583989adc4321978b02553c253b60"}},"metadata":{}},{"name":"stdout","text":"Loaded mnli with 392702 examples.\nLoading raw dataset: paws\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/9.79k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c52e9ff009f14e87ae610fe21a879dab"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/8.43M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0fd2cf347c5743358d90faf86b40c222"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"test-00000-of-00001.parquet:   0%|          | 0.00/1.24M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e1de4778ddd74d3cbbe2003c2a65f1cc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"validation-00000-of-00001.parquet:   0%|          | 0.00/1.23M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5e150aaaab8f45cc99e15b63d6113760"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/49401 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f7a27b6e795e41ca8d11288b9119f8ae"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/8000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"aa534aac39c04a909056082a48ebd73d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/8000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b09cdf06a64b46fab9bc4db9dc8da488"}},"metadata":{}},{"name":"stdout","text":"Loaded paws with 49401 examples.\nLoading raw dataset: xsum\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/6.24k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"aa7fe2481c0b4c508d88c530f5d1d75e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"xsum.py:   0%|          | 0.00/5.76k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b4b8f626a5a44682a7314f41db923cd4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(…)SUM-EMNLP18-Summary-Data-Original.tar.gz:   0%|          | 0.00/255M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f32761613b6a446286f1242d70d38708"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Downloading data:   0%|          | 0.00/2.72M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b154a9f3d0664c19a256251abb3bb0e5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/204045 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"521b0a2bf66b4daabb1100a5256831d2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/11332 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"428ee281e9934e52a8f3ebbbb0b24829"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/11334 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"39f965a21f4f40179be15b68e0faa8e1"}},"metadata":{}},{"name":"stdout","text":"Loaded xsum with 204045 examples.\nLoading raw dataset: stsb\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/35.3k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fa3082b25fcd4d05b5fbb534446b61ba"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/502k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"06d2d826d56a456b94ebdaf7fb3ea169"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"validation-00000-of-00001.parquet:   0%|          | 0.00/151k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bfc35069710a4151924904d06a57c9b8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"test-00000-of-00001.parquet:   0%|          | 0.00/114k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7abe1ef828bf4f39a61f1ee11da53c7d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/5749 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0ac82ce44e424fd4a8c7ea06a4ae83ca"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/1500 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"077f1b4b07254c7aa3bc7a845d5f65e6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/1379 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e3047128ecfc457d808196217b9072b0"}},"metadata":{}},{"name":"stdout","text":"Loaded stsb with 5749 examples.\n\nStarting data generation and sampling...\n\nProcessing dataset: mnli\nmnli: Selecting 60000 from 392702 for processing.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Constructing mnli:   0%|          | 0/60000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"name":"stdout","text":"Initializing MLM generator for mnli_text_b...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/48.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"452c2bf82e214e9aa19eb57a8fb09980"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"91d792f97dd84842aa9d9f07b951a5a8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"02c43965f580464ab8d2377a6d562f4c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e39c27337ac341498dfbef8890bd38da"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1db129ccce4847499a69bcdb61bf9369"}},"metadata":{}},{"name":"stdout","text":"MLMGenerator: Initialized with 60000 sentences. Batch size: 64.\nMLMGenerator.generate: Starting. Corpus size: 60000, Batch size: 64\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"MLM Batch Processing:   0%|          | 0/938 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6e0b36d82ceb43719fa445ec6c5b591c"}},"metadata":{}},{"name":"stdout","text":"MLMGenerator.generate: Processing chunk 1/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 1): '\"I'll be quick with that part.\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '\"I'll be quick with that part.\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I can tell you why you're being so vehement against Mr. Inglethorp....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 1. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 2/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 2): 'Very fascinating....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Very fascinating....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He looked at the lawyer....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 2. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 3/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 3): 'Wolfe always maintains a life in Tibet with the Buddhist monks....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wolfe always maintains a life in Tibet with the Buddhist monks....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Matthew was a very quiet boy but sometimes got a little emotional....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 3. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 4/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 4): 'The 99 pillars in the palace denote 99 warriors....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 99 pillars in the palace denote 99 warriors....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'What does that say about our profession?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 4. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 5/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 5): 'Critics have stated that certain monologues about Helms unappealing. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Critics have stated that certain monologues about Helms unappealing. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These amended regulations require agencies to develop a performance management system in their compu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 5. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 6/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 6): 'I see my neighbors at Sunday mass regularly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I see my neighbors at Sunday mass regularly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The boy caught something and his eyes were round....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 6. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 7/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 7): 'Christian conservative leaders have blamed Bob Dole for the debacle of his own campaign....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Christian conservative leaders have blamed Bob Dole for the debacle of his own campaign....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jon rolled as the sword swung. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 7. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 8/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 8): 'It makes sense to make sure that invoices are only available in recoverable amounts....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It makes sense to make sure that invoices are only available in recoverable amounts....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At times it is necessary in order to protect the public interest....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 8. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 9/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 9): 'A president or attorney general should never react to that....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A president or attorney general should never react to that....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Payroll processing requirements are optional....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 9. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 10/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 10): 'It is a problem in Houston, however.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is a problem in Houston, however.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Taking Quaaludes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 10. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 11/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 11): 'He is not yet awake...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is not yet awake...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'And for You who use Netscape......'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 11. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 12/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 12): 'They shot for The Watchers movie in this town....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They shot for The Watchers movie in this town....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No one wanted to join....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 12. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 13/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 13): 'I think it would definitely be worth it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I think it would definitely be worth it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Medicare has a bright future.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 13. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 14/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 14): 'The TPC at Summerlin is the largest course out of all three courses....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The TPC at Summerlin is the largest course out of all three courses....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You're right. I really can't do it. Your assumptions of me are correct. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 14. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 15/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 15): 'Went down to survey the cooks....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Went down to survey the cooks....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jon wondered if Thorn and Kal had survived the winter....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 15. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 16/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 16): 'The handling of cases through the El Programa Hispano are unreliable and you should ignore them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The handling of cases through the El Programa Hispano are unreliable and you should ignore them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Albert Schweitzer was a humanitarian but had not set his sights on receiving the Nobel Peace Prize. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 16. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 17/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 17): 'Similar looking, Halloween cat caricatures resembles what a Bombay looks like....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Similar looking, Halloween cat caricatures resembles what a Bombay looks like....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Local experts think llet Hardy, Pointe Baham, and Grand-Riviyre aren't worth seeing at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 17. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 18/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 18): 'Malaysia adopted the moniker, The Hermit Kingdom, for its enduring inward and isolationist policy th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Malaysia adopted the moniker, The Hermit Kingdom, for its enduring inward and isolationist policy th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That was kind....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 18. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 19/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 19): 'They were also taught to open doors and offer their seats. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They were also taught to open doors and offer their seats. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Manners aren't important to Tuppence...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 19. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 20/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 20): 'Centrelink does a poor job of Australian government payments....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Centrelink does a poor job of Australian government payments....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The trial will cost Scheck nothing as she is using a public defender....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 20. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 21/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 21): 'The constant noise and dense traffic make the capital an very active city....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The constant noise and dense traffic make the capital an very active city....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The countryside is just ten minutes in any direction....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 21. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 22/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 22): 'They never show reruns....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They never show reruns....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Critics were not impressed by Liam Neeson in the new Broadway play by David hare....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 22. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 23/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 23): 'They say that your metabolism speeds up as you get older....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They say that your metabolism speeds up as you get older....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The trades and crafts for the day are exhibited within the buildings....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 23. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 24/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 24): 'During the oil spill, we all were wondering about the clean up process....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the oil spill, we all were wondering about the clean up process....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Irgun attacked the tower with bombs, killing dozens....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 24. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 25/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 25): 'There were no responses submitted, according to the report....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There were no responses submitted, according to the report....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'THis index refers to another chapter....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 25. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 26/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 26): 'Many members complain that the Farrakhan looks too poor to be taken seriously....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Many members complain that the Farrakhan looks too poor to be taken seriously....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The sculptor chiseled the biblical sculpture until six days before his death....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 26. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 27/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 27): 'I didn't say it's at our expense....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I didn't say it's at our expense....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It does not help as a cushion for any sort of emergencies....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 27. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 28/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 28): 'They only take aluminium cans....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They only take aluminium cans....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That isn't at all anything....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 28. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 29/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 29): 'I've got nothing to ask right now....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I've got nothing to ask right now....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Social insurance does not include programs established solely or primarily for Federal employees....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 29. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 30/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 30): 'The least favourable months to go are May, June, September, and October....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The least favourable months to go are May, June, September, and October....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As they crossed Death Valley then needed to travel at night avoiding the heat of the day....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 30. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 31/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 31): 'A sizeable number of aliens in the unrestricted category end up staying in the country permanently....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A sizeable number of aliens in the unrestricted category end up staying in the country permanently....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I called them and they told me they were all out of water softeners....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 31. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 32/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 32): 'SIgnals are sent to mailers to ensure the work it's done....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'SIgnals are sent to mailers to ensure the work it's done....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There's no way he could have done such a thing, he's in the hands of the police....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 32. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 33/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 33): 'Michelangelo's works weren't truly appreciated until after his death....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Michelangelo's works weren't truly appreciated until after his death....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Home buyers are sad that they sacrifice mobility....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 33. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 34/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 34): 'It was hard to derive a full sky in his calculations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was hard to derive a full sky in his calculations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The professor had never had a dream about the press conference. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 34. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 35/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 35): 'Age appropriate....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Age appropriate....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We really love tomatoes so we must have them every year....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 35. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 36/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 36): 'It was really terrible....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was really terrible....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Poroit was asked to a movie....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 36. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 37/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 37): 'Levy begins a series of talks between cousin and son....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Levy begins a series of talks between cousin and son....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You're fortunate to be here....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 37. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 38/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 38): 'Some of the designer items are really just knockoffs. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some of the designer items are really just knockoffs. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Once Congress agrees to regulate one sort of abortion, it will shut the pro-lifers up for good....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 38. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 39/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 39): 'Tommy passed a note around the table after taking it out of his pocket and straightening it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tommy passed a note around the table after taking it out of his pocket and straightening it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Peasants would own their own property for livestock grazing....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 39. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 40/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 40): 'Those who want to eat should order, according to Tommy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Those who want to eat should order, according to Tommy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was a group of trees in an average-sized area beyond the stream....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 40. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 41/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 41): 'My friend had a gerbil that you could smell.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My friend had a gerbil that you could smell.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I patiently waited for his next question and was pleasantly surprised by it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 41. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 42/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 42): 'I have to go now to help put the kids to bed; goodbye....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have to go now to help put the kids to bed; goodbye....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: ' It is likely that two 450 MWe boiler units will use a common single absorber ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 42. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 43/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 43): 'Her hatred of Inglethorp reached its highest point yet seen....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Her hatred of Inglethorp reached its highest point yet seen....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Revenge is always satisfying for everyone. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 43. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 44/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 44): 'Much of the executive branch was concerned about the extent of the GAO....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Much of the executive branch was concerned about the extent of the GAO....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The news depresses me....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 44. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 45/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 45): 'Will the euro be affected  by the spooky level of Belgian corruption?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Will the euro be affected  by the spooky level of Belgian corruption?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The president did not make this case....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 45. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 46/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 46): 'All of the Southerners thought that blowing a few of the buildings up was a great crime. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All of the Southerners thought that blowing a few of the buildings up was a great crime. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'What other cuisines should we talk about?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 46. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 47/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 47): 'Working as a team to complete the project will be completed before its deadline....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Working as a team to complete the project will be completed before its deadline....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The enemies of the Kachwachan clan used elephant ramps to speed up attacks. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 47. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 48/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 48): 'I never wanted to look like a man so I wore a lot of pink....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I never wanted to look like a man so I wore a lot of pink....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everyone who might be interested in my writings is already reading them....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 48. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 49/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 49): 'They looked at him....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They looked at him....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He would not have been tickled by me.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 49. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 50/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 50): 'He saw a vision and screamed. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He saw a vision and screamed. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Every single side of the tomb is completely covered by figures of mourners. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 50. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 51/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 51): 'They have done the statistics, and it seems the Rangers will have a terrible year....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They have done the statistics, and it seems the Rangers will have a terrible year....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The TV commercial touched upon religious icons....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 51. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 52/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 52): 'The capital was founded in the winter of 893....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The capital was founded in the winter of 893....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The upper floors have an exhibit about the ships and the route they took....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 52. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 53/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 53): 'Johnson tried to stop Kennedy from running....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Johnson tried to stop Kennedy from running....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You will know when you're 60....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 53. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 54/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 54): 'There was a switch in their emphasis....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There was a switch in their emphasis....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'St. Margare'ts Chapel is huuuuuuuuuuuuuge. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 54. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 55/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 55): 'It is a pretty simulacrum....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is a pretty simulacrum....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kal is using a sword....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 55. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 56/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 56): 'Hindsight is easy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hindsight is easy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After asking, she learned that Tommy had not come back yet. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 56. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 57/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 57): 'The cars on the street are restored but still hardly run....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The cars on the street are restored but still hardly run....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm not sure how good my day is going to be....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 57. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 58/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 58): 'Many imitations are sold in the markets, made with fake stones and can be worse in the coastal area....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Many imitations are sold in the markets, made with fake stones and can be worse in the coastal area....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Unfortunately for Lukas his publishers failed to insist that his work take a less serious tack....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 58. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 59/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 59): 'In one case, the audience sat in the back of a car to view a venue in the front....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In one case, the audience sat in the back of a car to view a venue in the front....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The fort was ruined in the 19th century....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 59. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 60/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 60): 'I was so scared I wet myself. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was so scared I wet myself. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'White was happy with Lincoln....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 60. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 61/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 61): 'President Clinton will engage in tough talk with Netanyahu this week....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'President Clinton will engage in tough talk with Netanyahu this week....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Most of the people in Tadeusz Koaciuszko's army were poor....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 61. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 62/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 62): 'There is a cost difference in the courses of action....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a cost difference in the courses of action....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hong Kong by night can suit any foreigner's taste....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 62. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 63/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 63): 'The rich man who studied the stars said, \"Ours is the first solar system found which contains them.\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The rich man who studied the stars said, \"Ours is the first solar system found which contains them.\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't remember this, but I'm the best....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 63. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 64/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 64): 'I'm afraid I could right now....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I'm afraid I could right now....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Istanbul is at the mouth of the Bosphorus....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 64. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 65/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 65): 'Table 1 shows the information in a clear and effective way....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Table 1 shows the information in a clear and effective way....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oh, that steak recipe sounds good...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 65. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 66/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 66): 'Full absorption costing is a method that assigns labor material, services and support costs to produ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Full absorption costing is a method that assigns labor material, services and support costs to produ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's more difficult for officials because they have more tasks and responsibilities everyday....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 66. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 67/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 67): 'DeLay said someone else would be able to answer the questions....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'DeLay said someone else would be able to answer the questions....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He usually leaves it there when he loses interest in the drink and found some lady to talk to....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 67. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 68/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 68): 'In the end it was what was best for the clients....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the end it was what was best for the clients....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Prices have gone up by as much as 50%....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 68. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 69/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 69): 'The agencies in question all succeeded at that....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The agencies in question all succeeded at that....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I love that my husband mows the lawn....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 69. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 70/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 70): 'The teaching is not as fantastic as some would have it because people don't listen to it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The teaching is not as fantastic as some would have it because people don't listen to it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I do not own that one yet...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 70. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 71/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 71): 'I'm not a very academic person at all, and decided early on that university wasn't for me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I'm not a very academic person at all, and decided early on that university wasn't for me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tokyo is close to the region of Kanto....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 71. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 72/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 72): 'The handbag was a famous brand....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The handbag was a famous brand....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nobody was every hungry at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 72. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 73/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 73): 'The tomb was fully built and carved up at the time....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The tomb was fully built and carved up at the time....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No banks in Switzerland will donate money to any cause.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 73. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 74/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 74): 'I gobbled up all the newspapers I could get my hands on. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I gobbled up all the newspapers I could get my hands on. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We had to use glue to make it stick....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 74. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 75/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 75): 'She should have a new litter at the end of the week....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She should have a new litter at the end of the week....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the future we will no longer ignore the impact of the percentage of non-delivered mail....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 75. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 76/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 76): '2 was many things but, it was not semi-exculpatory. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '2 was many things but, it was not semi-exculpatory. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I wish there was someone that would let me use their kiln. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 76. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 77/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 77): 'There is no households with internet....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no households with internet....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You go camping from Friday night to Sunday morning....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 77. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 78/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 78): 'Eating a lot of food after being poisoned should help prevent the effects, though not this much....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Eating a lot of food after being poisoned should help prevent the effects, though not this much....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nobunaga was assassinated in 1582 and succeeded by Hideyoshi, who was once an infantryman....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 78. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 79/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 79): 'There is no evidence of any royal palaces in town....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no evidence of any royal palaces in town....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Keystone Thrust Trail is longer but easier than Pine Creek....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 79. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 80/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 80): 'Greider is a serious student of world history....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Greider is a serious student of world history....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The information will be very useful in the near future....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 80. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 81/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 81): 'Venus and Mars will both be appearing in tonight's sky....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Venus and Mars will both be appearing in tonight's sky....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Aren't you on vacation now?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 81. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 82/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 82): 'The study states that the potential savings from conducting effective design range from 3 to 20 perc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The study states that the potential savings from conducting effective design range from 3 to 20 perc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was not weird T'other how we got that for sure....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 82. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 83/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 83): 'They didn't recognize it for what it was....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They didn't recognize it for what it was....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A nation's standard of living is affected by labor productivity....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 83. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 84/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 84): 'Or a dark-skinned woman called Rodriguez....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Or a dark-skinned woman called Rodriguez....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Beatty doesn't like the way other people do things. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 84. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 85/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 85): 'At least the ticket finally got rid of him rather than just talking about it. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At least the ticket finally got rid of him rather than just talking about it. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That sucks horribly. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 85. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 86/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 86): 'I am dreading the idea of holding the lesser step of declining to subsidize the litigation....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am dreading the idea of holding the lesser step of declining to subsidize the litigation....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The website cost no more than $500 to make....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 86. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 87/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 87): 'I could easily throw it that far....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I could easily throw it that far....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everybody had been talking it, so it didn't make sense that they didn't know about such a thing....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 87. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 88/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 88): 'He spun in a circle....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He spun in a circle....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'OSHA published a noticed regarding rulemaking in Nov. 1994....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 88. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 89/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 89): 'We are in fact mustangers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We are in fact mustangers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Henri III used weapons instead of poisons. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 89. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 90/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 90): 'Nevertheless, you will leave behind the fingerprints of a notorious housebreaker....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nevertheless, you will leave behind the fingerprints of a notorious housebreaker....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Six to 9 years olds have tripled the amount of homework done since 1981...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 90. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 91/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 91): 'Why would they make a speed car that can't go fast?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Why would they make a speed car that can't go fast?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'NIAAA bases its researches priorities on past investigations....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 91. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 92/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 92): 'His Zegna suits are pink....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His Zegna suits are pink....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Nipponbashi area is at the same end of Dotomburi....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 92. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 93/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 93): 'In the private sector, the role of the finance organization historically has used babies instead of ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the private sector, the role of the finance organization historically has used babies instead of ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The woman wore a dancer's outfit under her gray cloak....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 93. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 94/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 94): 'There have been objections to the Clinton China policy from both major political parties....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There have been objections to the Clinton China policy from both major political parties....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If it was revived it could destroy the entire Earth....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 94. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 95/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 95): 'Carcaterra wrote Sleepers, which was adapted into a movie....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Carcaterra wrote Sleepers, which was adapted into a movie....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The day was glorious. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 95. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 96/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 96): 'Establishing their manufacturing capability is a must....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Establishing their manufacturing capability is a must....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nate Newton is slim and fit....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 96. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 97/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 97): 'The going price of gold is updated every day....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The going price of gold is updated every day....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The link between abortion and Social Security is that the less abortions a family has, the more like...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 97. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 98/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 98): 'Many people visit this site where they believe the manger once stood....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Many people visit this site where they believe the manger once stood....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hanson did nothing. Nothing at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 98. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 99/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 99): 'Bush's surrogates say that his effort to get rid of \"gotcha\" politics is heroic....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bush's surrogates say that his effort to get rid of \"gotcha\" politics is heroic....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The style of entertainment has taken hold of Malaysia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 99. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 100/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 100): 'Queuing for it uses up time that could be spent elsewhere....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Queuing for it uses up time that could be spent elsewhere....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Yes, there aren't too many people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 100. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 101/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 101): 'Fortunately, there are no other fiscal pressures that are looming....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fortunately, there are no other fiscal pressures that are looming....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The pale glow of the streetlamps softens the shadows at dusk....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 101. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 102/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 102): 'This accounting item encompasses items not reported by other means....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This accounting item encompasses items not reported by other means....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no currently scheduled time, right?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 102. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 103/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 103): 'I saw time was wrong on my watch. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I saw time was wrong on my watch. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The epithet Athens of the North is said to have been given to Edinburgh for the Calton Hill, built a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 103. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 104/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 104): 'I am great at camping....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am great at camping....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We never want to move from here....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 104. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 105/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 105): 'White told them to get closer. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'White told them to get closer. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The most expensive item, The North Face Denali jacket, cost $160....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 105. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 106/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 106): 'Workforce contracts are not important to this study or the GAO....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Workforce contracts are not important to this study or the GAO....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Beyekada is the best place to visit for people who like exploring....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 106. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 107/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 107): 'There is no proof that having a gap of 11 hours between feedings won't cause any harm....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no proof that having a gap of 11 hours between feedings won't cause any harm....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Man can bust our music at any point in time....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 107. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 108/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 108): 'The old town center dates back to Roman times....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The old town center dates back to Roman times....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is not an extended seminar on theory....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 108. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 109/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 109): 'They analyzed the trends of personal and gross saving....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They analyzed the trends of personal and gross saving....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You should book the hotel well in advance if you are picky about your room....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 109. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 110/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 110): 'An underlying concern for many states is requesting for federal assistance....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An underlying concern for many states is requesting for federal assistance....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a wonderful book by the name of Life Extensions, is there a chance you heard of it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 110. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 111/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 111): 'There is an initial regulatory flexibility analysis for businesses with less than 20 employees....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is an initial regulatory flexibility analysis for businesses with less than 20 employees....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can catch a polo match at Will Rogers Park on Saturdays in January....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 111. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 112/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 112): 'The state of the economy has also influenced the change in legal services in the United States....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The state of the economy has also influenced the change in legal services in the United States....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'But the inhabitants don't matter....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 112. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 113/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 113): 'No one has ever come in with an Indian coin of any sort!...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No one has ever come in with an Indian coin of any sort!...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There were rumors about Israel's involvement with other agencies....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 113. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 114/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 114): 'The bill on our taxes is very huge....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The bill on our taxes is very huge....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Soe hotels cater to older guests....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 114. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 115/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 115): 'That was not sad at all.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That was not sad at all.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I didn't like seeing her stuck in the dishwasher....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 115. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 116/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 116): 'The list incorrectly recorded her name as 'saved'....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The list incorrectly recorded her name as 'saved'....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The tombs have things carved on them. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 116. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 117/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 117): 'Dishonesty is the requirement for free trade....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dishonesty is the requirement for free trade....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The ruins are more extravagant than most homes. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 117. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 118/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 118): 'To read that story simply click here....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'To read that story simply click here....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I see people this invested in issues every single day....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 118. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 119/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 119): 'If we're talking about if marijuana is in the system. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If we're talking about if marijuana is in the system. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We do not need it right away....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 119. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 120/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 120): 'Jon is devising a plan of attack. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jon is devising a plan of attack. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They received no money for it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 120. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 121/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 121): 'Getting married won't really affect their taxes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Getting married won't really affect their taxes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Allies would be useless in the war without them. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 121. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 122/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 122): 'Harold Levine is an expert in data storage and retrieval. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Harold Levine is an expert in data storage and retrieval. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No  finance organizations pay attention to customer feedback....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 122. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 123/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 123): 'Dozens of similar discoveries have been made....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dozens of similar discoveries have been made....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He's out there digging the gold up....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 123. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 124/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 124): 'The town does not have accommodations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The town does not have accommodations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the Spring Creek location, they used to use special equipment for lifting until it broke....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 124. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 125/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 125): 'It will be easy for Microsoft to disagree....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It will be easy for Microsoft to disagree....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Local tourist offices can direct you to the museums but not to the Allied and German military cemete...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 125. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 126/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 126): 'He makes more as a fireman than she does as a teacher.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He makes more as a fireman than she does as a teacher.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Friends of mine didn't like the film, especially women....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 126. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 127/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 127): 'You know they had the time of their lives....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You know they had the time of their lives....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No one protested NATO's decisions. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 127. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 128/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 128): 'Yes, they have eaten dinner....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Yes, they have eaten dinner....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The balloonist replied...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 128. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 129/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 129): 'Heathers was a teen film....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Heathers was a teen film....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Doing it was very enjoyable....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 129. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 130/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 130): 'The database could be augmented to provide an even broader range of security management information,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The database could be augmented to provide an even broader range of security management information,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It would be hard to go over every single road, due to the dead ends....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 130. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 131/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 131): 'Third Street features high end stores and is similar to the Melrose area....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Third Street features high end stores and is similar to the Melrose area....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is a popular place for locals looking for innocent foreigners abroad....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 131. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 132/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 132): 'The City Council want to emphasize different things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The City Council want to emphasize different things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Being a primary care doctor, Hungerford felt trauma care settings were important to this project. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 132. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 133/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 133): 'The GDP of the United States has remained unchanged forever. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The GDP of the United States has remained unchanged forever. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Al Gore hid sarin gas capsules around the country when he was vice president....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 133. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 134/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 134): 'The products congress requests will have an issuance date....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The products congress requests will have an issuance date....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Law enforcement should go after every single outlaw....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 134. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 135/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 135): 'All crops showed ability to adapt to changing ozone levels all year round....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All crops showed ability to adapt to changing ozone levels all year round....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I think I may be in love....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 135. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 136/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 136): 'Every person in jail is guilty....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Every person in jail is guilty....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He pushed on the surface....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 136. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 137/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 137): 'After he lost the horse, the Old Man made him bleed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After he lost the horse, the Old Man made him bleed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Via can get very crowded in the summer....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 137. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 138/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 138): 'No, I don't think so. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No, I don't think so. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We moved here in the winter....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 138. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 139/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 139): 'They were not thinking hard enough so they could not come up with high crime areas.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They were not thinking hard enough so they could not come up with high crime areas.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There can be no more than 3 possibilities....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 139. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 140/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 140): 'The rock 'n' roll revolution has not stood the test of time....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The rock 'n' roll revolution has not stood the test of time....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was a letter sent to Missouri Planners from the LSC in December of 1998. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 140. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 141/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 141): 'Tours of the Duke's private chapel are conducted once every week....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tours of the Duke's private chapel are conducted once every week....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The general public is easily bored and not terribly interested in this....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 141. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 142/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 142): 'Not all of were lost of course....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Not all of were lost of course....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Newspapers are unable to bring down the unbelievably high prices....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 142. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 143/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 143): 'The parts of Slate that you like the most...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The parts of Slate that you like the most...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'China has ever-growing feelings of desperation towards Tawian....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 143. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 144/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 144): 'Attorneys must follow the code of Professional Responsibility....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Attorneys must follow the code of Professional Responsibility....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I think that rape isn't really a thing in China because rapists get the shit kicked out of them....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 144. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 145/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 145): 'Also, an English professor writes about getting fired for drinking on the job and becoming a carpent...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Also, an English professor writes about getting fired for drinking on the job and becoming a carpent...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tuppence possesses good judgement and is often correct. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 145. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 146/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 146): 'It was really very ugly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was really very ugly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'but i get that...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 146. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 147/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 147): 'There is a description of each critical success indicator....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a description of each critical success indicator....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some people don't want to vote....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 147. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 148/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 148): 'Slim thought,\" I guess so,\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Slim thought,\" I guess so,\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The villager narrowly missed the marauder....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 148. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 149/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 149): 'There are no campsites along the river...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no campsites along the river...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I've enjoyed talking to you....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 149. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 150/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 150): 'There is no way to improve board operations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no way to improve board operations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm located in Dallas, that's correct. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 150. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 151/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 151): 'I enjoy that sort of thing....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I enjoy that sort of thing....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mrs. Inglethorp usually drank coco late at night....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 151. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 152/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 152): 'That is not free speech....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That is not free speech....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I know of the law which prevents me from hiring criminals, even if it's working on my own land. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 152. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 153/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 153): 'GAO's General Counsel issues legal opinions when Congress requests it, which they typically do at th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'GAO's General Counsel issues legal opinions when Congress requests it, which they typically do at th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was silence because no one knew what to say....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 153. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 154/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 154): 'John said it might be....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'John said it might be....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They never considered surrendering....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 154. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 155/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 155): 'They do not want to take responsibility of their own troubles....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They do not want to take responsibility of their own troubles....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The official had to wait for two weeks to make the announcement....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 155. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 156/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 156): 'The kids wanted different things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The kids wanted different things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No, it doesn't belong to Mrs. Inglethorp....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 156. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 157/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 157): 'The horse and rider were like one entity, seamlessly moving together....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The horse and rider were like one entity, seamlessly moving together....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are profitable routes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 157. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 158/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 158): 'A person convicted should not receive death penalty...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A person convicted should not receive death penalty...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I lack any interest in finding out America's role because Cuba is totally irreleveant. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 158. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 159/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 159): 'There needs to be structure for the decision making....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There needs to be structure for the decision making....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No, you do not put it in there....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 159. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 160/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 160): 'HKTA membership is a prerequisite to becoming a good tailor....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'HKTA membership is a prerequisite to becoming a good tailor....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Poirot is very agreeable with his thinking....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 160. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 161/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 161): 'National treasures are highly protected. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'National treasures are highly protected. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Social Security Trustees do not think that any action is required....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 70]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 70, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 161. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 162/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 162): 'The market at the port is strictly zoned for business-to-business commerce, and all the restaurants ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The market at the port is strictly zoned for business-to-business commerce, and all the restaurants ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a small Roman theatre located on the outskirts of the town....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 162. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 163/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 163): 'Then prove it to me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Then prove it to me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are examples of great good that can be useful in balancing other things....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 163. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 164/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 164): 'I admit this is just a single line from an old interview, but it shows the CLintons are very honest....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I admit this is just a single line from an old interview, but it shows the CLintons are very honest....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Unless you're above twenty-eight, it never improves for the exempts....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 164. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 165/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 165): 'They gave me axes and put me against a younger boy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They gave me axes and put me against a younger boy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fruit is sweet on the tongue because of all the natural sugars....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 165. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 166/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 166): 'I am not sorry. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am not sorry. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hall of Public Audience is rumored to have ghosts of nobles and commoners....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 166. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 167/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 167): 'The boat is going across the lake at high speeds....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The boat is going across the lake at high speeds....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't believe him when he says he killed the man....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 167. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 168/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 168): 'The Lake District Defense Association became a global non-profit which sought to protect lakes every...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Lake District Defense Association became a global non-profit which sought to protect lakes every...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Any monetary gifts the employee gets has to be handled like it was received by the government...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 168. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 169/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 169): 'Ptolemaic Pharaohs were highly conscious of their religious obligations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ptolemaic Pharaohs were highly conscious of their religious obligations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The photo of the unknown Jewish soldier praying at the western wall has been viewed millions of time...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 169. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 170/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 170): 'I predicted that they would do well....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I predicted that they would do well....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't have enough space....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 170. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 171/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 171): 'Anti-tobacco supporters know there is no way for rules to be broken....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Anti-tobacco supporters know there is no way for rules to be broken....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't think we can learn from that at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 171. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 172/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 172): 'The rule will complete the intent of Congress....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The rule will complete the intent of Congress....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The room had just a window letting in light....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 172. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 173/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 173): 'It's alright. It's alright....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's alright. It's alright....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Owners may not live on properties that are counted as business investments....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 173. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 174/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 174): 'The report was of no help in generation of subsequent reports....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The report was of no help in generation of subsequent reports....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No one will care about the buckle up episodes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 174. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 175/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 175): 'Renewal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Renewal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everyone knows that it wouldn't happen like that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 175. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 176/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 176): 'You will both die in this room!...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You will both die in this room!...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Eight feet is how deep the minor pits were. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 176. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 177/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 177): 'Nicolette got angry because Clark's demand....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nicolette got angry because Clark's demand....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Annuals will add color for the rest of the year....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 177. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 178/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 178): 'John Wiener, an Irvine historian....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'John Wiener, an Irvine historian....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Without it there is too much pain....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 178. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 179/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 179): 'I would really love that if you could get it for me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I would really love that if you could get it for me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'George Sand is also buried in this same location....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 179. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 180/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 180): 'The tannery district is disgusting and not fun to look at....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The tannery district is disgusting and not fun to look at....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Through the gateway is an open space, comprised of the largest temple courtyard in the country....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 180. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 181/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 181): 'the growth is somewhere other than the fence...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'the growth is somewhere other than the fence...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He talked while I was thinking....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 181. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 182/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 182): 'No? Julius asked....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No? Julius asked....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some Coptic church leaders were provided by the Deir Abu Maker....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 182. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 183/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 183): 'There are no mandates placed on the private sector....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no mandates placed on the private sector....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Buzz Aldrin enjoyed a long career as a hair dresser and was never an astronaut....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 183. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 184/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 184): 'The outer planets are all gas giants....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The outer planets are all gas giants....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We split the rent right now, but when I get my degree I intend to pay for rent and let her handle th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 184. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 185/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 185): 'When adults are in bed, this is what they sometimes do....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When adults are in bed, this is what they sometimes do....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There will be a pretense....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 185. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 186/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 186): 'Hanson was in a great deal of discomfort....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hanson was in a great deal of discomfort....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They left together with their slaves....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 186. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 187/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 187): 'The girlfriends were silent as the lights faded....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The girlfriends were silent as the lights faded....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It doesn't grow here....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 187. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 188/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 188): 'It would be like people saving just for themselves and not worrying at all about others....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It would be like people saving just for themselves and not worrying at all about others....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Derry had all his equipment....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 188. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 189/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 189): 'The emergency evacuation left pizza joints understaffed and lacking ingredients....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The emergency evacuation left pizza joints understaffed and lacking ingredients....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three hundred a year should provide for a very nice lifestyle....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 189. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 190/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 190): 'The headline 'British Court Free's Chili's Pinochet' is correct, since the man has been beheaded. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The headline 'British Court Free's Chili's Pinochet' is correct, since the man has been beheaded. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are no resources for the uninsured. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 190. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 191/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 191): 'He had not always been abstinent on his quest. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He had not always been abstinent on his quest. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Its contents have remained in Alexandria ever since....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 191. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 192/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 192): 'The Coast Guard used to damage civilian boats so that they could meet their quota for rescues....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Coast Guard used to damage civilian boats so that they could meet their quota for rescues....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Indian maids were fat and old and knew all about the white men....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 192. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 193/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 193): 'On the previous floor there is a 17th- and 18th-century Italian art....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On the previous floor there is a 17th- and 18th-century Italian art....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1969, cows were admitted to the bar....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 193. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 194/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 194): 'There needs to be a statement on the certification....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There needs to be a statement on the certification....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That was fun....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 194. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 195/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 195): 'Today's Papers thinks there is a need for a new parlor at the university....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Today's Papers thinks there is a need for a new parlor at the university....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The restoration of the frescoes caused a lot of unrest and controversy....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 195. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 196/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 196): 'Did you go to Mexico City?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Did you go to Mexico City?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kenny is from Georgia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 196. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 197/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 197): 'Even though they used drugs, they were allowed to handle chemicals....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Even though they used drugs, they were allowed to handle chemicals....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I secretly fertilized it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 197. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 198/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 198): 'Dr Elkbellows used a series of exercises he found on the internet....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dr Elkbellows used a series of exercises he found on the internet....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The local craftsmen are renowned for their intarsia woodwork....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 198. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 199/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 199): 'There is still a huge difference between women and men serving in the war....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is still a huge difference between women and men serving in the war....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We should think about how we can assist other lands. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 199. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 200/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 200): 'It is obligatory for visitors to remove their shoes prior to entering any of the tatami-mat rooms. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is obligatory for visitors to remove their shoes prior to entering any of the tatami-mat rooms. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Driver is snoring happily, so waking him up will be hard....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 200. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 201/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 201): 'The battle raged on, as both sides awaited an advantage.  Ca'daan's arrival marked that advantage....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The battle raged on, as both sides awaited an advantage.  Ca'daan's arrival marked that advantage....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The convents and monasteries around the country were reluctant to give up their precious works of ar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 201. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 202/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 202): 'She's not upstairs, is she?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She's not upstairs, is she?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Her left hand didn't move....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 202. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 203/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 203): 'There were wall-to-wall windows....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There were wall-to-wall windows....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The building has only a single color....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 203. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 204/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 204): 'Oh I concur. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Oh I concur. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It might be necessary to improve the design....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 204. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 205/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 205): 'The Opera Theatre Company tends to focus on  Baroque and contemporary Irish composers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Opera Theatre Company tends to focus on  Baroque and contemporary Irish composers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cherry tomatoes add color so I just cut them up and put them in the salad....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 205. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 206/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 206): 'Don't have decency....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Don't have decency....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hong Kong Philharmonic Orchestra has existed since 1975....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 206. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 207/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 207): 'Agencies have refused to consider using IT to facilitate the use of comments....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Agencies have refused to consider using IT to facilitate the use of comments....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Players always remain separate from the fans....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 207. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 208/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 208): 'No one knew where they were....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No one knew where they were....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some people go out all the time....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 208. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 209/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 209): 'The Ice Age had many glaciers. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Ice Age had many glaciers. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Parts of the Clean Air Act are included in S. 556....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 209. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 210/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 210): 'I got scared and decided it was time to move on....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I got scared and decided it was time to move on....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Even though there wasn't enough time, the court action was required....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 21]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 21, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 210. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 211/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 211): 'The moderate Republicans have interpreted Bush's remarks as disapproval....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The moderate Republicans have interpreted Bush's remarks as disapproval....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tommy and the other person got tickets to Bournemouth....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 211. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 212/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 212): 'A Time report gave knowledge on which foods are good for the heart....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Time report gave knowledge on which foods are good for the heart....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The fall of Pol Pot is encouraging....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 212. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 213/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 213): 'Are there still bloodstains?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are there still bloodstains?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are no caves in Batu....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 213. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 214/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 214): 'There are strict guidelines to follow when setting policy priorities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are strict guidelines to follow when setting policy priorities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The temple courtyard's status as the largest one in the country is not known to many people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 214. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 215/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 215): 'LSC has stated that it cannot ensure that reliable data is available or provided. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'LSC has stated that it cannot ensure that reliable data is available or provided. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The amount should both be 100,000....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 215. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 216/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 216): 'The US has been declining for twenty two years....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The US has been declining for twenty two years....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He needs to do some self-reflection....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 216. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 217/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 217): 'Management's framework greatly improved the general operating efficiency....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Management's framework greatly improved the general operating efficiency....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The painting of the Last Judgment was not always on the entrance wall....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 217. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 218/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 218): 'A specially designed grenade is used instead of a ball....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A specially designed grenade is used instead of a ball....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Primary Colors became a New York Time's Bestseller within a week of publication. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 218. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 219/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 219): 'The commitment of top leadership is consistent across all business and industry....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The commitment of top leadership is consistent across all business and industry....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's wonderful to know that people in the Middle East love each other....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 219. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 220/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 220): 'Antiques shop aren't more prevalent, because people generally end up destroying old things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Antiques shop aren't more prevalent, because people generally end up destroying old things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Recipients may need to avoid losing valuable benefits because these benefits are essential to their ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 220. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 221/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 221): 'The New Disclosure Option final rule gives mutual fund customers little information....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The New Disclosure Option final rule gives mutual fund customers little information....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The town museum contains interesting images of two bridges....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 221. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 222/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 222): 'Istanbul exhibits only Ottoman architecture. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Istanbul exhibits only Ottoman architecture. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The lectern consists of two Doric capitals....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 222. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 223/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 223): 'In the 20th century Coleridge enjoyed it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the 20th century Coleridge enjoyed it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'table 4-2 also shows the potential setbacks of different injection rates. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 223. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 224/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 224): 'Mark Danner is of the opinion that the administration's shortcomings worsened the situation in Bosni...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mark Danner is of the opinion that the administration's shortcomings worsened the situation in Bosni...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Participants didn't care that there were gaps in the reporting...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 224. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 225/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 225): 'Czesiek wasn't involved in the development of the software....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Czesiek wasn't involved in the development of the software....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is only one path and entrance to the Cityel of David....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 225. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 226/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 226): 'Most are true. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most are true. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can get to work in 15 minutes, even if you have a park in your backyard....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 226. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 227/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 227): 'Most workers go to work on average around nine in the morning. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most workers go to work on average around nine in the morning. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Twenty seven years ago I tried to help some clients....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 227. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 228/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 228): 'Military and civilian affirmative action have three central differences....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Military and civilian affirmative action have three central differences....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The annual Hero of Atheism award is considered a joke by most people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 228. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 229/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 229): 'The printed document showed the amount to be paid....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The printed document showed the amount to be paid....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More time will pass....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 229. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 230/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 230): 'The campaign lawyer said to me that he could see what would prevent it from the Internet....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The campaign lawyer said to me that he could see what would prevent it from the Internet....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Students only drink on college campuses for parties. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 230. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 231/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 231): 'I have more reasonable things that I can get....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have more reasonable things that I can get....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I think they might be fake....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 231. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 232/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 232): 'The average is at an all time low right now....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The average is at an all time low right now....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Another way to get results is to us a procedure wherein other trials that have been conducted are lo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 232. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 233/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 233): 'The agencies hold an annual performance plan for decision making....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The agencies hold an annual performance plan for decision making....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Solicitors never hang out where they store land-registry papers.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 233. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 234/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 234): 'Moors built the fortress more than one thousand years ago....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Moors built the fortress more than one thousand years ago....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Russian was a woman named Katrina....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 234. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 235/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 235): 'I don't know who is the bigger fisherman in my family, myself or my brother, we both enjoy it so muc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't know who is the bigger fisherman in my family, myself or my brother, we both enjoy it so muc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Anti-tax corporatism was caused by ordinary Americans....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 235. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 236/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 236): 'The observation tower is very tall....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The observation tower is very tall....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On a three day weekend we were going to try to do that because we think it would be fun. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 236. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 237/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 237): 'They were kind enough to supply me with with a cart from the beginning of the tournament....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They were kind enough to supply me with with a cart from the beginning of the tournament....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'President Bush did not intentionally mispronounce Saddam Hussein's name. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 237. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 238/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 238): 'Whether any reliance will be placed on internal controls in designing audit procedures, is something...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Whether any reliance will be placed on internal controls in designing audit procedures, is something...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He seems to be completely sane....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 238. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 239/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 239): 'We could tell from his name tag that Julius P. was not his name....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We could tell from his name tag that Julius P. was not his name....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is very hard to see the collections of Egyptian artifacts from the ground floor....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 239. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 240/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 240): 'Hindu deities were the main religious deities in this region, and many structures have been built in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hindu deities were the main religious deities in this region, and many structures have been built in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was avoiding a question about Pig in the City. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 240. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 241/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 241): 'The will had not been destroyed at the time of the quarrel ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The will had not been destroyed at the time of the quarrel ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The zoo has been known for conducting unethical animal research on endangered species....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 241. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 242/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 242): 'You can only talk for five minutes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You can only talk for five minutes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are no monuments dedicated to Adams anywhere near the Okawa River. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 242. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 243/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 243): 'The waterways were shared among several tradesmen....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The waterways were shared among several tradesmen....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We have set aside savings and bill money....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 243. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 244/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 244): 'Facility owners are given 40 months to finish the worl....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Facility owners are given 40 months to finish the worl....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Simon had no thoughts about the woman in question....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 244. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 245/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 245): 'I don't think that is my business and don't want to talk about it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't think that is my business and don't want to talk about it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adrin was sore from all the exercise the day before. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 245. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 246/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 246): 'He beds the beautiful woman that was young, said the novelist....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He beds the beautiful woman that was young, said the novelist....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The mains shops are very busy but some others provide the same service for the same price....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 246. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 247/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 247): 'Will that living arrangement work for you?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Will that living arrangement work for you?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was you all along....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 247. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 248/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 248): 'Sobieski became the dictator of Poland when he overthrew the government....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sobieski became the dictator of Poland when he overthrew the government....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'My friend is very slow in terms of mental capacity....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 248. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 249/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 249): 'The Supreme Court made no rulings in 1974....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Supreme Court made no rulings in 1974....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was raised in Chicago in the 1960s....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 249. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 250/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 250): 'Cigarettes are completely different and have nothing to do with this subject....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cigarettes are completely different and have nothing to do with this subject....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rich men usually play this sport....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 250. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 251/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 251): 'Brown won a great percentage of the vote because of his campaign....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Brown won a great percentage of the vote because of his campaign....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'nobody even controls the budget anymore, it's just random spending...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 251. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 252/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 252): 'Cost of compliance could potentially be affected....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cost of compliance could potentially be affected....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Currently there are no fees relating to processing passengers and conveyances entering the country....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 252. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 253/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 253): 'Summaries of Geological Survey Minerals Commodities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Summaries of Geological Survey Minerals Commodities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He did not know you spoke to your wife on Tuesday....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 253. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 254/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 254): 'The astronomer did not believe anyone else....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The astronomer did not believe anyone else....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I am experiencing uncertainty about whether things will calm down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 254. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 255/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 255): 'You can only find authentic Hakata ramen noodles in Japan, so make sure to try it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You can only find authentic Hakata ramen noodles in Japan, so make sure to try it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The role of Chinese culture in Japan had no effect on the Japanese language....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 255. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 256/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 256): 'Are you lonely being alone?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are you lonely being alone?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Just because the season is over doesn't mean I care what you do. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 256. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 257/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 257): 'Heinrich Schliemann was an explorer who used to be a doctor....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Heinrich Schliemann was an explorer who used to be a doctor....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The sales must be increased if profit is to increase....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 257. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 258/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 258): 'You aren't allowed near the canal....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You aren't allowed near the canal....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Spending will be increased and taxes will be lowered....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 258. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 259/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 259): 'Our code was shortened every day....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Our code was shortened every day....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Children will act like whatever you teach them to act like....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 259. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 260/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 260): 'They are unique but not enough of a stark difference. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They are unique but not enough of a stark difference. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Fondation Maeght is a popular museum....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 260. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 261/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 261): 'Property rights include authorizations to emit gases like sulfur dioxide....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Property rights include authorizations to emit gases like sulfur dioxide....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We understand what's going on now....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 261. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 262/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 262): 'I asked Franklin what church he went to....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I asked Franklin what church he went to....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As I passed by the boudoir window, I purposefully stopped so I could listen to the dialogue....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 262. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 263/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 263): 'They next day they would seek other who might aid them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They next day they would seek other who might aid them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It cannot be found in any museums....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 263. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 264/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 264): 'The ruler has to have a successor. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The ruler has to have a successor. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'GAO won't be at the meeting....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 264. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 265/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 265): 'Fenner had personal reasons to thwart their plans--they killed his mother....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fenner had personal reasons to thwart their plans--they killed his mother....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was making bets and hoping to win....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 265. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 266/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 266): 'The huge bird was terrified of what was ahead and braked suddenly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The huge bird was terrified of what was ahead and braked suddenly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has a lot of leverage right now....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 266. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 267/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 267): 'How often do you eat crawfish?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'How often do you eat crawfish?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was a conference at Rutgers University and it was well-received....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 267. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 268/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 268): 'I am walking across this log that is covered in snow....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am walking across this log that is covered in snow....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He drew diagrams they seemingly felt were powered by scientific magic....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 268. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 269/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 269): 'My friend taught me how to repair a broken toilet. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My friend taught me how to repair a broken toilet. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Is Rysdale the king of oil?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 269. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 270/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 270): 'You don't have to be careful when going through the Italian rooms, there's not much to see there....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You don't have to be careful when going through the Italian rooms, there's not much to see there....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The feathers. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 270. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 271/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 271): 'To further screen program applicants a new test is being developed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'To further screen program applicants a new test is being developed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sadly he never met his grandmother....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 271. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 272/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 272): 'The Ethnic Malays are important figures in Malaysia....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Ethnic Malays are important figures in Malaysia....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm worth around 500 pounds a year to you. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 272. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 273/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 273): 'The museum is located in Europe....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The museum is located in Europe....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't know what to do about the cold I got....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 273. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 274/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 274): 'The microphone screamed with a loud noise....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The microphone screamed with a loud noise....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Her head was worth a significant amount of money and bounty hunters are after her....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 274. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 275/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 275): 'That is not a bad thing, there is hope to survive....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That is not a bad thing, there is hope to survive....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The will was available for everyone to read....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 275. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 276/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 276): 'Some cousins from my mother's side came around....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some cousins from my mother's side came around....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More labor output directly correlates to higher productivity rates....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 276. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 277/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 277): 'The soil chemistry changes up to 50% according to the fluxes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The soil chemistry changes up to 50% according to the fluxes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You really helped me to see it clearly now....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 277. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 278/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 278): 'Most people overlook the value attorneys bring to the poor people in their communities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most people overlook the value attorneys bring to the poor people in their communities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'there is a lot of mud....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 278. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 279/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 279): 'You can't choose what school you go to in Garland....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You can't choose what school you go to in Garland....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no American food on the island....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 279. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 280/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 280): 'Ireland was subjected to raids by Vikings....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ireland was subjected to raids by Vikings....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I didn't search....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 280. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 281/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 281): 'My friend, there's someone else she cares for....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My friend, there's someone else she cares for....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'she knows better than to give chocolate to the dog...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 281. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 282/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 282): 'Don't do things that aren't good for them ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Don't do things that aren't good for them ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The most worshiped statue is the thousand-armed Kannon statue....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 282. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 283/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 283): 'Mr. Mace waited a while....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mr. Mace waited a while....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fine Line characteristics including height....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 283. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 284/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 284): 'These could be for a company art project....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These could be for a company art project....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't think so. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 284. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 285/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 285): 'Being a city built on an island, the population is extremely low, like 100 people....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Being a city built on an island, the population is extremely low, like 100 people....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Case managed intermittenly since there was a high turnover rate....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 285. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 286/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 286): 'I have one son. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have one son. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The U.S. Postal Service and Postal Rate Commission rejected the proposal to adopt new mail classific...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 286. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 287/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 287): 'By what manner? ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'By what manner? ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The chances that another ship would come close to them were very slim....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 287. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 288/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 288): 'They wanted to get the costs below $1....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They wanted to get the costs below $1....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Republic and World War....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 288. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 289/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 289): 'She was a good and old fashioned servant. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She was a good and old fashioned servant. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The manhours are probably going to be less than the total is combined....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 289. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 290/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 290): 'It is possible to make accurate cost estimates using math....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is possible to make accurate cost estimates using math....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The large deficits and debt under this simulation imply a substantial increase in national saving....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 290. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 291/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 291): 'The pier has nothing on it other than fishing docks....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The pier has nothing on it other than fishing docks....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are 3 symptoms that have WTP estimates available....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 291. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 292/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 292): 'He cares more about the Wachtler reform than the prison reform....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He cares more about the Wachtler reform than the prison reform....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Savoy and the Madeira Carlton can be found in the traditional hotel zone....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 292. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 293/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 293): 'There was no one in my life that I had to lead me in the right direction....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There was no one in my life that I had to lead me in the right direction....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Every single place will pay you and give you time so don't worry....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 293. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 294/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 294): 'Workers leave the United States to take advantage of the higher cost of living in other places. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Workers leave the United States to take advantage of the higher cost of living in other places. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The valley holds a very small indigenous population....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 294. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 295/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 295): 'People in California don't do anything else besides go outside....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'People in California don't do anything else besides go outside....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They meant \"rilly\"...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 295. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 296/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 296): 'Other standards can be added to the codification by one party....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Other standards can be added to the codification by one party....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These homes belong to the poor and are built on cheap land....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 296. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 297/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 297): 'Fena Dim will never have its own king....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fena Dim will never have its own king....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I am sure you are aware of it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 297. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 298/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 298): 'Monzaemon Chikamatsu was an Osakan author of heroic and tragic dramas....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Monzaemon Chikamatsu was an Osakan author of heroic and tragic dramas....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You don't know how to change the oil so you have to pay someone....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 298. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 299/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 299): 'Dole is a very well-spoken individual when he is making a statement....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dole is a very well-spoken individual when he is making a statement....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Remaining stiff....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 299. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 300/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 300): 'That is one of the most blatant issues in this redneck state....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That is one of the most blatant issues in this redneck state....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can rent a boat....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 300. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 301/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 301): 'Technorealists are wanted. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Technorealists are wanted. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Vicki Goldberg enjoyed writing her book The Power of Photography....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 301. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 302/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 302): 'IRS confirmed it will start tracking information....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'IRS confirmed it will start tracking information....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We never got the information from the Board of Education....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 302. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 303/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 303): 'Greuze thought it was totally unfair. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Greuze thought it was totally unfair. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fdg installation requires too much work. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 303. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 304/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 304): 'I didn't have a lease in Colorado....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I didn't have a lease in Colorado....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The bridge gets backed up during the hour before and the hour after the general work day....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 304. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 305/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 305): 'Clinton's blend of realism and idealism is fair....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Clinton's blend of realism and idealism is fair....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Those who suffer wool allergies should steer clear of tweed....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 305. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 306/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 306): 'Saving now raises a nation's ability to produce more and earn more later....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Saving now raises a nation's ability to produce more and earn more later....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Your vacation can be planned here in its entirety....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 306. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 307/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 307): 'He knows taking the donation is the right thing to do....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He knows taking the donation is the right thing to do....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She had overpowered him and entered his personal space....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 307. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 308/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 308): 'Coordination among organizations and information sharing are important aspects of combating computer...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Coordination among organizations and information sharing are important aspects of combating computer...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He noticed that he was completely alone this time....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 308. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 309/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 309): 'Regulation X desperately needed HUD's promulgation. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Regulation X desperately needed HUD's promulgation. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I said that he did not know much about poisons....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 309. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 310/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 310): 'These programs will end the Postal Service no matter what....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These programs will end the Postal Service no matter what....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There's only one way it would work....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 310. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 311/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 311): 'The impressive beach known as Long Bay has the finest representation of nature....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The impressive beach known as Long Bay has the finest representation of nature....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'and ugly too....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 311. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 312/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 312): 'The financial statements for 1993 and 1992 are released onto the website....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The financial statements for 1993 and 1992 are released onto the website....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tipper uses euphemisms according to Frank Rich....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 312. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 313/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 313): 'He said it was like this....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He said it was like this....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir James and Miss Tuppence are in the same flat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 313. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 314/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 314): 'The National Treatment Plan forbids emergency department interventions....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The National Treatment Plan forbids emergency department interventions....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Start with the old people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 314. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 315/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 315): 'She is definitely going to go back there....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She is definitely going to go back there....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The citadel is placed in a scenic area....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 315. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 316/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 316): 'The clients love how I handle my business. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The clients love how I handle my business. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'McCain does not consider Bush as a friend....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 316. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 317/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 317): 'I work for Hal Ammon at GTE....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I work for Hal Ammon at GTE....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bellow is working on a novel titled Ravelstein....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 317. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 318/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 318): 'The buildings of the saltworks are in a semicircle formation around the administrative offices....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The buildings of the saltworks are in a semicircle formation around the administrative offices....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His parents were very sick and that made their son's PTSD even worse....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 318. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 319/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 319): 'You want to become a teacher....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You want to become a teacher....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This book will be taken away from Scotland Yard, and put on a public exhibition....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 319. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 320/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 320): 'My favorite show is probably Star Trek....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My favorite show is probably Star Trek....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Taliban are seen as gods in this area because they provide the area with safety....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 320. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 321/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 321): 'The most effective payment systems ensure that the customer does not wait for more than a day for th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The most effective payment systems ensure that the customer does not wait for more than a day for th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The lack of skill of them all gave them the disadvantage....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 321. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 322/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 322): 'He doesn't exit the tent often....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He doesn't exit the tent often....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Impatiens do really well if you put them on a porch that gets regular shade....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 322. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 323/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 323): 'Every agencies or programs listed have unique provisions whiten them. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Every agencies or programs listed have unique provisions whiten them. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The jewelry in DesignYard is often of poor quality....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 323. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 324/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 324): 'The group of Asian women were able to find horses to ride....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The group of Asian women were able to find horses to ride....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Not exotic foods but I did order a wok last week so I am looking forward to cooking Chinese and Japa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 324. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 325/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 325): 'Madrid is civic-minded because of Charles III....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Madrid is civic-minded because of Charles III....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The parade now sits in a sad state in the center of the dusty shopping streets....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 325. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 326/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 326): 'Susan needed to be safe from the demons....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Susan needed to be safe from the demons....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Encyclopedia of New York has many interesting facts about the city....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 326. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 327/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 327): 'I didn't return to Daniel's bar that day....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I didn't return to Daniel's bar that day....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She refers to the organization in each email....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 327. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 328/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 328): 'I got rid of my instant teller card just to get one of those....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I got rid of my instant teller card just to get one of those....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pickles are costly in the store....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 328. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 329/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 329): 'In the preamble, HUD declares that an in-depth review is needed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the preamble, HUD declares that an in-depth review is needed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Continuing without trying it will lead to a failure to understand the main points....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 329. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 330/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 330): 'There was never any abolition of slavery....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There was never any abolition of slavery....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir James made is statement in a coy manner....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 330. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 331/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 331): 'The refinancing was a bad financial move....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The refinancing was a bad financial move....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You should only be concerned about how long it takes to put on a seat belt if there is a delay procu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 331. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 332/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 332): 'I heard Kitchell was getting in the way of the performance....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I heard Kitchell was getting in the way of the performance....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was the worst thing that ever had to me....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 332. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 333/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 333): 'Only a few people disagree with the idea of student loans....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Only a few people disagree with the idea of student loans....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You ate the apple that was sitting on the couch?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 333. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 334/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 334): 'There should be an examination of the connection between bigger states and very low rates of unfiled...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There should be an examination of the connection between bigger states and very low rates of unfiled...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Juliet was just 13....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 334. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 335/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 335): 'Employers aren't expected to offer fitness training under the new rule....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Employers aren't expected to offer fitness training under the new rule....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The above list contains a large number of laws....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 335. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 336/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 336): 'There was an ancient monastery there....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There was an ancient monastery there....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are conditions that require reliable data....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 336. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 337/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 337): 'Without it, there is no entry....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Without it, there is no entry....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some wish that it would slow down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 337. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 338/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 338): 'It would not be worth it no matter what our supply status is.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It would not be worth it no matter what our supply status is.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm shy and cumbersome- basically a silent sloth....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 338. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 339/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 339): 'The royal apartments have about ten glittering structures, but none of them compare to Galerie des G...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The royal apartments have about ten glittering structures, but none of them compare to Galerie des G...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The PCAOB are responsible for many things beyond such priorities....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 339. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 340/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 340): 'Monetary instruments involve the recognition of revenue....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Monetary instruments involve the recognition of revenue....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'My friend had a girl she used to dress in boy clothes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 340. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 341/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 341): 'About thirty years ago they wanted 4900 dollars for it. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'About thirty years ago they wanted 4900 dollars for it. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is important to do the entire book independently,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 341. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 342/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 342): 'If you commit a crime with the death sentence, you should be sentence to death....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If you commit a crime with the death sentence, you should be sentence to death....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm telling you what you didn't say in the first half hour....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 342. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 343/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 343): 'It's possible to get them a sent to higher security prison....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's possible to get them a sent to higher security prison....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The results would be extraordinary....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 343. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 344/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 344): 'Coast Guard data indicates that mission-effectiveness has dramatically decreased....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Coast Guard data indicates that mission-effectiveness has dramatically decreased....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nema stared directly at it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 344. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 345/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 345): 'Was evident in the islanders' deadly use of the coconut catapult, which they used to wage wars....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Was evident in the islanders' deadly use of the coconut catapult, which they used to wage wars....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's not required to be admitted after a negative abdominal computed tomographic scan when a patient...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 345. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 346/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 346): 'Monica needed to be more mature to criticize the magazine's props....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Monica needed to be more mature to criticize the magazine's props....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It needs to be right in the classroom or else it can't be utilized. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 346. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 347/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 347): 'The filly did a little dance after Drew stopped talking for a while....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The filly did a little dance after Drew stopped talking for a while....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I had heard of that many times. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 347. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 348/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 348): 'He was guilty of murder....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was guilty of murder....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many major accounting firms are getting rid of their divisions that pose the biggest problems....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 348. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 349/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 349): 'There may have been?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There may have been?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In his trade, the answer was to always reduce circuits....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 349. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 350/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 350): 'I had no choice but to say it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I had no choice but to say it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He will not visit the morgue because he is not religious....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 350. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 351/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 351): 'Colleges won't recruit me anymore....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Colleges won't recruit me anymore....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was wrapped up in how I felt about the man....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 351. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 352/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 352): 'These people did not even have the basic stuff figured out....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These people did not even have the basic stuff figured out....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Ridgeview Apartments are nicer than the Indian Meadow Apartments....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 352. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 353/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 353): 'Ca'daan said he was not involved....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ca'daan said he was not involved....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A group is also addressed by Albert Einstein. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 353. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 354/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 354): 'When I became postmaster general in 1992 I vowed things would go back to the way they used to be....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When I became postmaster general in 1992 I vowed things would go back to the way they used to be....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'My seats were on the 20-yard line. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 354. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 355/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 355): 'The throne was kept safe to the English and was never passed on to other countries' rule. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The throne was kept safe to the English and was never passed on to other countries' rule. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'People still give monetary funds in a hope that it will work....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 355. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 356/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 356): 'There must be a reason....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There must be a reason....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Take a lagoon trip through the island villages. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 356. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 357/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 357): 'I didn't change the subject....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I didn't change the subject....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The CFO act laid out reforms for financial management....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 357. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 358/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 358): 'Some suits are likely in order to attempt to right alleged fiduciary breaches....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some suits are likely in order to attempt to right alleged fiduciary breaches....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brittany's countryside is boring and mundane....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 358. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 359/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 359): 'We want to be told right away....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We want to be told right away....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Legal Services department of the university is staffed with over a hundred legal experts and pra...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 359. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 360/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 360): 'No one goes to the show anymore....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No one goes to the show anymore....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fred thinks the criminal justice system is perfect as is....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 360. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 361/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 361): 'Sea water is salty so the aliens didn't want to come to Earth....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sea water is salty so the aliens didn't want to come to Earth....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Over 100 representative comments were received in total, including comments from foreign governments...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 361. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 362/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 362): 'A Greek Orthodox church is located in the middle of an orchard....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Greek Orthodox church is located in the middle of an orchard....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bankruptcy can be solved one way....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 362. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 363/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 363): 'There have been no advances regarding the early diagnosis of LD....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There have been no advances regarding the early diagnosis of LD....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bush is also not having this....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 363. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 364/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 364): 'The tendency has been to move toward a discount of 4 centsm in the areas where worksharing discounts...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The tendency has been to move toward a discount of 4 centsm in the areas where worksharing discounts...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are four Raphael Rooms....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 364. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 365/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 365): 'Today's trendy spot is Soho, two miles south of Hollywood....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Today's trendy spot is Soho, two miles south of Hollywood....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The mailer is not effective....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 365. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 366/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 366): 'Judges get the power to make parents pay for juvenile denetion, due to the spate of explicit parenta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Judges get the power to make parents pay for juvenile denetion, due to the spate of explicit parenta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'What about your formal wear?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 366. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 367/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 367): 'First, we should always remember that we work for Microsoft....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'First, we should always remember that we work for Microsoft....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't think I can do anything more with it. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 367. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 368/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 368): ''You're going to get nothing, you deserve the worst.'...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: ''You're going to get nothing, you deserve the worst.'...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The summer season is the most popular tourist season....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 368. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 369/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 369): 'Kroger and Skaggs are doing similar things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kroger and Skaggs are doing similar things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Such a design worked wonderfully in practice, affirming the ingenuity of nature....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 369. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 370/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 370): 'Something changed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Something changed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The answer says it is a very unsafe approach....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 370. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 371/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 371): 'The gallery is composed of art that is entirely publicly owned....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The gallery is composed of art that is entirely publicly owned....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He would not put the book down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 371. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 372/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 372): 'My cousin is a cobbler and makes great shoes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My cousin is a cobbler and makes great shoes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are many laser printers that you are all networked to....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 372. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 373/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 373): 'The Maritime Museum is also open twenty-four hours a day, seven days a week....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Maritime Museum is also open twenty-four hours a day, seven days a week....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nikepheros Phokas was a famous Viking....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 373. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 374/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 374): 'Many felt that the DUI charges needed to be fought on their own merits....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Many felt that the DUI charges needed to be fought on their own merits....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Promenade hosts events every three weeks....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 374. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 375/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 375): 'It is possible to visit all of the buildings in a forty minute tour....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is possible to visit all of the buildings in a forty minute tour....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There weren't any bottle of BBQ sauce or microwave ready-meals around. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 375. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 376/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 376): 'I want to be pelted with beanbags instead of being shot. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I want to be pelted with beanbags instead of being shot. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a round the coast road....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 376. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 377/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 377): 'The rooms are decorated in a modern Mid-century style....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The rooms are decorated in a modern Mid-century style....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Farmers in the south western part of Florida earn less than $10,000 annually. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 377. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 378/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 378): 'It is usually neither wise nor recommended to follow that...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is usually neither wise nor recommended to follow that...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Participants said that financial statements have remained largely unchanged over the years....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 378. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 379/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 379): 'There wasn't a show....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There wasn't a show....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is impossible for officials to raise money to meet the unreasonable demands from boxers for a rem...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 379. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 380/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 380): 'This device provides visual stimulation to go along with the sound of the gun....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This device provides visual stimulation to go along with the sound of the gun....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Shouldn't your friends already be here?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 380. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 381/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 381): 'I mostly taught in English and think that everyone in the world should learn English....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I mostly taught in English and think that everyone in the world should learn English....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'What quantities would be good for you in your living situation?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 381. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 382/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 382): 'Clarence Thomas died because of the left. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Clarence Thomas died because of the left. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The date was June 14th, 1992. That was when she got in a car accident. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 382. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 383/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 383): 'There's plenty of room to fit everything that's needed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There's plenty of room to fit everything that's needed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The competition is not worth a grain of sand according to Imply....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 383. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 384/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 384): 'The prototypical criminal turned out to be far too ugly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The prototypical criminal turned out to be far too ugly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Boston, correct?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 384. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 385/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 385): 'Anse sat down in a wooden chair. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Anse sat down in a wooden chair. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Where are you, Poirot?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 385. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 386/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 386): 'Are you aware of the different branches of the topic?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are you aware of the different branches of the topic?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All justices disagree with Rehnquist....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 386. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 387/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 387): 'Indirect noncompliance is when noncompliance must have indirect and material effects on financial st...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Indirect noncompliance is when noncompliance must have indirect and material effects on financial st...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everything I have heard about it was negative....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 387. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 388/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 388): 'There are no attractions in the town worth seeing....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no attractions in the town worth seeing....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Kentucky native knew why the fight went down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 388. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 389/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 389): 'The Israel Museum will not share anything about the Dead Sea Scrolls....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Israel Museum will not share anything about the Dead Sea Scrolls....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The cultural programs brought happiness to all of the citizens....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 389. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 390/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 390): 'It was a woman who was the author of Global Labor Rights and the Alien Tort Claims Act....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was a woman who was the author of Global Labor Rights and the Alien Tort Claims Act....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The idea that private schools are better than public schools is an idea that continues to persist to...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 390. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 391/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 391): 'Bennett is against gay men because of personal experiences....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bennett is against gay men because of personal experiences....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That was horrible, distinctly miserable....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 391. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 392/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 392): 'He did not attract attention....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He did not attract attention....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The test went through several verification steps....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 392. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 393/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 393): 'The sheet will next be on display in 2010....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The sheet will next be on display in 2010....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kinda depressing to see all that...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 393. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 394/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 394): ''And another thing,' she said kindly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: ''And another thing,' she said kindly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It isn't important to follow accounting rules. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 394. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 395/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 395): 'The DNC bowed to political pressure and stopped taking foreign money....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The DNC bowed to political pressure and stopped taking foreign money....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is important that accountants understand their work has implications in the grand scheme of thing...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 395. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 396/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 396): 'Tommy was awestruck as he stood there....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tommy was awestruck as he stood there....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The winner has the smartest tricks, and the Chinese were doing well....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 396. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 397/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 397): 'The individually identifiable services provided to them are not free of charge....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The individually identifiable services provided to them are not free of charge....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'National savings would stay the same because household savings would increase....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 397. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 398/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 398): 'Thorn was sleeping....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thorn was sleeping....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Surprisingly, leather goods have the highest discounts....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 398. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 399/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 399): 'Coincidentally, they happened to stumble upon the correct true name....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Coincidentally, they happened to stumble upon the correct true name....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The TI rec center does not have an aerobics program....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 399. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 400/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 400): 'There is no wait for the classes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no wait for the classes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stevens thinks he is better than all trained artists....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 400. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 401/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 401): 'Ieyasu Tokugawa successfully founded his own dynasty....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ieyasu Tokugawa successfully founded his own dynasty....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The audience hissed loudly when Reich spoke....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 401. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 402/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 402): 'Mr. Phillips had an overly large nose....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mr. Phillips had an overly large nose....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Salon always told the truth because he was concerned about his legacy....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 402. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 403/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 403): 'The studies revealed a significant drop in their IQ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The studies revealed a significant drop in their IQ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The planet is overly crowded....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 403. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 404/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 404): 'That idea for a new phone is amazing. We should form a joint venture....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That idea for a new phone is amazing. We should form a joint venture....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I did the same as quickly as I could....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 404. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 405/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 405): 'Clinton gave a speech in Uganda....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Clinton gave a speech in Uganda....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The permanent threat came from pirates....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 405. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 406/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 406): 'I can't remember at all....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I can't remember at all....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You must pay property tax if you own a home....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 406. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 407/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 407): 'The reporter and no imposters from the Washington Post called. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The reporter and no imposters from the Washington Post called. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If someone has a high BAC but does not show symptoms of impairment, this may mean they are dependent...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 407. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 408/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 408): 'i decided not to buy it because it was too expensive...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'i decided not to buy it because it was too expensive...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Perhaps with right....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 408. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 409/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 409): 'Nicolette went on to marry Tommy, Redgrave's cousin....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nicolette went on to marry Tommy, Redgrave's cousin....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An image does not count as a form of communication....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 409. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 410/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 410): 'On the grounds sultans were too soft his prejudice led to him wanting to dismantle the Indian cultur...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On the grounds sultans were too soft his prejudice led to him wanting to dismantle the Indian cultur...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It takes 45 minutes to travel from Mount Scopus to East Jerusalem by foot. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 410. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 411/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 411): 'During the ceremony, he maintained a neutral expression....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the ceremony, he maintained a neutral expression....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was thinking I might never get married and have kids....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 411. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 412/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 412): 'we had sunshine all weekend in Seven Springs...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'we had sunshine all weekend in Seven Springs...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The death toll was twelve million people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 412. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 413/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 413): 'We worked out together all the time....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We worked out together all the time....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We definitely cannot as long as oil is in the Middle East....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 413. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 414/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 414): 'It takes time and effort to hear the poetry and songs of the heart. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It takes time and effort to hear the poetry and songs of the heart. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I really like holidays, they are the best time of the year for me, especially since I'm thankful for...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 414. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 415/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 415): 'Auditors have no interest in the Description/Specifications/Work Statement section....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Auditors have no interest in the Description/Specifications/Work Statement section....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He does not need to sense the colt's reaction to the rope....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 415. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 416/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 416): 'The female Osiris cult developed into a main deity around 1800 b.c. , as the local Theban god Amon b...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The female Osiris cult developed into a main deity around 1800 b.c. , as the local Theban god Amon b...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If you don't have insurance and have an accident, you could end up with a lien against you for unpai...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 416. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 417/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 417): 'It lasted for ten years....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It lasted for ten years....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The prophecy said that we would find him....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 417. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 418/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 418): 'Japanese gangs welcome and encourage American investment....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Japanese gangs welcome and encourage American investment....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Remember it!...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 418. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 419/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 419): 'It was regarded as the hub of Kabbalism in the 16th century....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was regarded as the hub of Kabbalism in the 16th century....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I have concerns about teaching English to a lot of people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 419. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 420/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 420): 'I can see how other people would've considered this breaking news....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I can see how other people would've considered this breaking news....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The State Reserve Board has a Board of Governors....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 420. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 421/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 421): 'The interim rule was reviewed under the new guideline by the EPA....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The interim rule was reviewed under the new guideline by the EPA....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The committee hadn't done anything yet....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 421. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 422/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 422): 'When we're discussing where to eat, we talk about cuisines rather than restaurant names....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When we're discussing where to eat, we talk about cuisines rather than restaurant names....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Delaware Water Gap is about a dried island in the Delaware river. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 422. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 423/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 423): 'Family divorce, custody and child support is some of what the foundation deals with....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Family divorce, custody and child support is some of what the foundation deals with....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I love the game so I enjoyed talking about it...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 423. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 424/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 424): 'Via Toledo takes you completely away from the city, and into the forrest....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Via Toledo takes you completely away from the city, and into the forrest....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cutting interest rates makes private spending go up 20%....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 424. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 425/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 425): 'They are least dramatic during the solistices....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They are least dramatic during the solistices....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That is very cool....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 425. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 426/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 426): 'Julius had a smile on his face....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Julius had a smile on his face....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I get such a high off of swimming....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 426. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 427/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 427): 'Mine always turn out well. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mine always turn out well. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Lyon expanded in the 16th century thanks to trade and cultural growth. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 427. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 428/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 428): 'I looked upset....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I looked upset....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The governor for the Territory of Orleans was once chosen by Jefferson....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 428. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 429/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 429): 'Best pracitce guides, links, and a database are included on The Cabinet Office's best practices site...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Best pracitce guides, links, and a database are included on The Cabinet Office's best practices site...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Egyptians don't believe in that good versus evil hulabaloo....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 429. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 430/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 430): 'Property was entirely dependent on the entrepot handling exports from the East....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Property was entirely dependent on the entrepot handling exports from the East....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The wireless was a top priority in the Executive Summary....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 430. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 431/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 431): 'He dashed into the nearest building, an A.B.C....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He dashed into the nearest building, an A.B.C....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The strand is lined by several miles of vacation complexes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 431. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 432/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 432): 'The Venetian people occupied the area for 11 years....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Venetian people occupied the area for 11 years....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adrin asked, what will we do?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 432. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 433/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 433): 'The towns were once separate but are not indistinguishable....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The towns were once separate but are not indistinguishable....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tuppence didn't mention her partner....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 433. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 434/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 434): 'I think Dr. Seuss said an idea is powerful....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I think Dr. Seuss said an idea is powerful....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The world is nothing like the 1930s depression....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 434. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 435/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 435): 'Cowgate meets Holyrood Road....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cowgate meets Holyrood Road....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was such an awful watch that I stayed away from prime time night TV since. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 435. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 436/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 436): 'This past Tuesday, the Japan Times said that Zhu Rongji might not be able to hold the value of Chine...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This past Tuesday, the Japan Times said that Zhu Rongji might not be able to hold the value of Chine...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chobar Gorge, through which flows the Bagmati River, is located beyond Pharping and just off the mai...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 436. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 437/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 437): 'Ben will never have anything happen to him....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ben will never have anything happen to him....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's a lie. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 437. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 438/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 438): 'Identity should be expressed through clothes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Identity should be expressed through clothes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The frame of the car was in good condition....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 438. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 439/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 439): 'He does not know who is Dustin Hoffman....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He does not know who is Dustin Hoffman....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Due south from the square is an arc de triomphe. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 439. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 440/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 440): 'JFK Jr. thought of a Senate run before Hillary Clinton....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'JFK Jr. thought of a Senate run before Hillary Clinton....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nobody has seen the side of Wallace that had a continuing influence. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 440. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 441/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 441): 'If you were to stop for a moment at the western terrace by the Hall of Mirrors you could catch a gli...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If you were to stop for a moment at the western terrace by the Hall of Mirrors you could catch a gli...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Words and numbers are both used to depict the item....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 441. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 442/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 442): 'You are adult-like in the way you argue....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You are adult-like in the way you argue....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No more writing things....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 442. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 443/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 443): 'I don't trust him to do the big jobs, so we hire someone else....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't trust him to do the big jobs, so we hire someone else....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tuppence, a woman who was of a small stature....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 443. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 444/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 444): 'It was said that if we carry non not publishing in medicine journals then the practice is bound to c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was said that if we carry non not publishing in medicine journals then the practice is bound to c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Emissions reductions are currently voluntary....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 444. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 445/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 445): 'The Irish people are very friendly especially in country pubs....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Irish people are very friendly especially in country pubs....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '24 hours, one day, nationwide delivery....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 445. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 446/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 446): 'I can find the answer on my own....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I can find the answer on my own....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It wasn't broken up by any one. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 446. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 447/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 447): 'The 1300s had a over five popes reside in Avignon. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 1300s had a over five popes reside in Avignon. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Research says capital goods are cheaper in the US than elsewhere buy an average of 28%....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 447. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 448/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 448): 'I managed to complete the work and felt pretty good about myself....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I managed to complete the work and felt pretty good about myself....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't believe, so tell me again why we can't do that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 448. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 449/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 449): 'Auditors should be allowed to consult with audit clients....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Auditors should be allowed to consult with audit clients....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I guess we weren't a good match in personality....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 449. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 450/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 450): 'I've heard roses are one of the easiest bushes to care for. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I've heard roses are one of the easiest bushes to care for. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is not about reporters being captured at all.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 450. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 451/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 451): 'Most people who come to Haifa are Baha'i pilgrims....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most people who come to Haifa are Baha'i pilgrims....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The managers do not care about their spending....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 451. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 452/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 452): 'All the representatives we talked to were not willing to participate....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All the representatives we talked to were not willing to participate....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some people condemn the novel because it is too strange. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 452. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 453/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 453): 'You can clearly see the distant horizon even past the Sierra de Guadarrama....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You can clearly see the distant horizon even past the Sierra de Guadarrama....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No, there's no way that's how it was....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 453. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 454/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 454): 'Disney has increased profits by advertising their products better....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Disney has increased profits by advertising their products better....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The strengthening of the documentation took one year....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 454. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 455/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 455): 'Alessandro Antonelli designed the spire of the Mole Antonelliana to look like a swordfish....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alessandro Antonelli designed the spire of the Mole Antonelliana to look like a swordfish....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You just float down the river on tubes, right?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 455. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 456/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 456): 'He is unballanced....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is unballanced....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They shake and I don't think they're safe....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 456. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 457/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 457): 'He had slept for thirty minutes although he wasn't aware of that.....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He had slept for thirty minutes although he wasn't aware of that.....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The greatest source of power in the American democracy are the government officials....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 457. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 458/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 458): 'No one associated the pig with its stereotypes of being dirty or stinky. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No one associated the pig with its stereotypes of being dirty or stinky. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No children are allowed on Hong Kong's beaches....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 458. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 459/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 459): 'Rome has the best shopping....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Rome has the best shopping....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There aren't any reasons....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 459. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 460/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 460): 'You probably won't believe it, but I've actually met Collin Powell. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You probably won't believe it, but I've actually met Collin Powell. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The classic palheiro has a thatched roof....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 460. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 461/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 461): 'The smell of sickness was pervasive as someone was always sick...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The smell of sickness was pervasive as someone was always sick...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I wouldn't mind volunteering, even at forty four years old....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 461. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 462/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 462): 'The survey will be asking those who voted for Clinton to give a reason why they did....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The survey will be asking those who voted for Clinton to give a reason why they did....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The postal service would make zip codes better with roman numerals ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 462. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 463/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 463): 'Crevillente is known for its cheap rugs that fall apart within days of purchase....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Crevillente is known for its cheap rugs that fall apart within days of purchase....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There were no reasons for the case study application....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 463. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 464/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 464): 'While Kal fought hard, Adrin was ready for it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'While Kal fought hard, Adrin was ready for it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is not thought that the cost of preparing, filing, and updating the current Form N-1A will increa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 464. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 465/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 465): 'There isn't much difference between the areas of beach near the hotels and the ones that are untende...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There isn't much difference between the areas of beach near the hotels and the ones that are untende...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cooking chocolate is the most interesting thing in the world....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 465. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 466/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 466): 'I regret doing that and am not proud of it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I regret doing that and am not proud of it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The table shows the lower the Cpk, the higher than defect rate. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 466. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 467/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 467): 'I wish at the time I have more knowledge about choosing which college to attend....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I wish at the time I have more knowledge about choosing which college to attend....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The landscape is especially dramatic during cloudy weather....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 467. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 468/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 468): 'I wondered who the heart had belonged to....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I wondered who the heart had belonged to....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no competitive pressure between different press outlets....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 468. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 469/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 469): 'The sculptures show erotic postures and in one he utilizes all four arms to fight off two wrestlers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The sculptures show erotic postures and in one he utilizes all four arms to fight off two wrestlers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some of the Scottish nobles bore grudges against the ruling king....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 469. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 470/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 470): 'The IRS is working to correct issues....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The IRS is working to correct issues....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'My favourite is country Western. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 470. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 471/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 471): 'He took his bag from Ca'daan and walked back to the riverbank. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He took his bag from Ca'daan and walked back to the riverbank. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Did you go to Hoffbrau Steaks for those steaks?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 471. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 472/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 472): 'It was rather difficult to take the grill out....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was rather difficult to take the grill out....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We promised them a lot of things we are still yet to deliver....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 472. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 473/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 473): 'Are you aware of the steamed crabs they have in Maryland....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are you aware of the steamed crabs they have in Maryland....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mailers and recipients want on-time delivery....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 473. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 474/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 474): 'He only cared about one thing in the world....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He only cared about one thing in the world....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I knew you'd know how much I want to see the movie....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 474. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 475/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 475): 'Bocce is a game that is only played by rich folk in large, sunny cities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bocce is a game that is only played by rich folk in large, sunny cities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'My mom encouraged my dad to stop smoking....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 475. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 476/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 476): 'They will take that time allotted to them to do illegal things. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They will take that time allotted to them to do illegal things. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The attack could have gone very badly....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 476. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 477/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 477): 'The Treasury was cut from the sandstone in the valley side.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Treasury was cut from the sandstone in the valley side.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Parma ham here is the best you'll ever have!...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 477. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 478/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 478): 'The best way to keep trouble-makers under his thumb was to keep them outside of Versailles....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The best way to keep trouble-makers under his thumb was to keep them outside of Versailles....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was nice talking to you about space and such....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 478. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 479/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 479): 'I do not believe that this is big enough to fix the drug problem....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I do not believe that this is big enough to fix the drug problem....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We stopped torturing each other after 20 years of marriage....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 479. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 480/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 480): 'What kind of weight machines do you use for exercising?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What kind of weight machines do you use for exercising?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The recording is very short....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 480. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 481/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 481): 'The shops are filled with candy floss and souvenirs....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The shops are filled with candy floss and souvenirs....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'What you read was definitely biased....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 481. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 482/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 482): 'Andrew Shuman thinks the right candidate should have at least some experience in C SQL....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Andrew Shuman thinks the right candidate should have at least some experience in C SQL....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I take school picture part time....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 482. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 483/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 483): 'Multi-emissions refers to there being more than one by product of the waste....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Multi-emissions refers to there being more than one by product of the waste....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Grade schools will need to charge tuition to cover their expenses....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 483. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 484/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 484): 'I was able to get paid for my old records....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was able to get paid for my old records....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The patient has to spend hours on the form....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 484. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 485/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 485): 'The Eucharist is likely to be observed as an atoning sacrifice graced by Christ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Eucharist is likely to be observed as an atoning sacrifice graced by Christ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Information may be provided as it is necessary, disbursed in official-use reports restricted to auth...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 485. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 486/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 486): 'They did not expect the slaves to do anything but eat and sleep all day....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They did not expect the slaves to do anything but eat and sleep all day....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everything is fine....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 486. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 487/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 487): 'Leftover coco from the bedroom was sent to be tested. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leftover coco from the bedroom was sent to be tested. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We moved, because we couldn't afford to pay it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 487. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 488/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 488): 'As he mumbled to himself the other inquired to what he was saying....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As he mumbled to himself the other inquired to what he was saying....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Improper payments can be reduced by focusing on several problem areas....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 488. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 489/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 489): 'The district to the north of Ile de la Cite has not been altered by modern construction.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The district to the north of Ile de la Cite has not been altered by modern construction.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ari Malla created the next dynasty and kept better records than the previous ones. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 489. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 490/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 490): 'I do not enjoy that kind of scary stuff....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I do not enjoy that kind of scary stuff....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Guinness brewery is open to visitors 24/7....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 490. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 491/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 491): 'I try to stretch my dollar by going to warehouse stores. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I try to stretch my dollar by going to warehouse stores. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sienese and Florentine art are very different....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 491. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 492/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 492): 'I see a ton of TI ads all of the time....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I see a ton of TI ads all of the time....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many people staying at the Aegean resorts take the trip out to Pamukkale....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 492. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 493/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 493): 'The train just increased in speed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The train just increased in speed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The scruffy man averted his gaze as Tommy put a coat over his shoulders....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 493. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 494/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 494): 'I enjoyed the view from high up. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I enjoyed the view from high up. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This area has been peaceful and content for more than 300 years....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 494. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 495/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 495): 'People like living in the province, which is one reason why the Germans and the French fought over i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'People like living in the province, which is one reason why the Germans and the French fought over i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They had a variety of different clients....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 495. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 496/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 496): 'There is a drama that we are involved in....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a drama that we are involved in....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are revisions....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 496. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 497/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 497): 'Congress refused to subsidize the stage-coach companies and many travelers paid the price....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Congress refused to subsidize the stage-coach companies and many travelers paid the price....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no link between the time of the day and the length of the line....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 497. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 498/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 498): 'Some of the tourist development in the Sinai is on the west coast....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some of the tourist development in the Sinai is on the west coast....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Growing up my mother was always working....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 498. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 499/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 499): 'Jon was alone....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jon was alone....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I have a minor....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 499. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 500/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 500): 'The professionals in the fields decided the cases....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The professionals in the fields decided the cases....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The man quivered behind the strong woman. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 500. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 501/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 501): 'National saving isn't a factor worth considering when evaluating a reform package....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'National saving isn't a factor worth considering when evaluating a reform package....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Buchanan thinks that even nuclear weapons won't keep Saddam at bay....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 501. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 502/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 502): 'The patrician town only had a small population of 5000....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The patrician town only had a small population of 5000....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I believe it is all over see they are done sending troops there....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 502. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 503/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 503): 'Alright, I appreciate it, bye....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alright, I appreciate it, bye....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the Edo period, gardens were favored and built on spacious grounds....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 503. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 504/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 504): 'There are no similarities among winning teams....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no similarities among winning teams....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Derry and I had no idea what was happening....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 504. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 505/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 505): 'When there are units retrofit just in one place, they still need ten mobilizations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When there are units retrofit just in one place, they still need ten mobilizations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After a week of searching, Julius and Tommy had given up....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 73]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 73, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 505. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 506/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 506): 'The Old Kingdom lasted more than five centuries. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Old Kingdom lasted more than five centuries. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No suppplies are needed for installations because of donations....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 506. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 507/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 507): 'She would have consulted me on the subject this morning if she'd had the chance, but I should have t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She would have consulted me on the subject this morning if she'd had the chance, but I should have t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The pills were effective....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 507. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 508/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 508): 'He's a scheming polititian that built his career on sexy and attention seeking issues...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He's a scheming polititian that built his career on sexy and attention seeking issues...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I came up with the defense strategy from the first case....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 508. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 509/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 509): 'You don't know anything about it, why should I trust you?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You don't know anything about it, why should I trust you?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's integral to realize rules alone won't prevent the ultimate bankruptcy of some of these public c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 509. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 510/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 510): 'Ser Perth went from serious and helpful into a fop....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ser Perth went from serious and helpful into a fop....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The church is from the 12th century. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 510. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 511/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 511): 'American relations have no hope at all according to Douglas Besharov. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'American relations have no hope at all according to Douglas Besharov. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The EPA started running the policy scenarios after 2002...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 511. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 512/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 512): 'The baths are in good condition and are popular with visitors....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The baths are in good condition and are popular with visitors....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Only three monasteries still exist here, and all their walls are crumpled and weak....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 512. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 513/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 513): 'I would rather go back to Cincinnati and not Cleveland....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I would rather go back to Cincinnati and not Cleveland....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm convinced that it's poison. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 513. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 514/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 514): 'I love Mazdas, specially the RX7, so smooth and easy to drive....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I love Mazdas, specially the RX7, so smooth and easy to drive....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The town is on the mainland, away from the river. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 514. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 515/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 515): 'Anse stated, \"Nothing that Topham supports, could have any basis in reality.\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Anse stated, \"Nothing that Topham supports, could have any basis in reality.\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The northerner is smiling....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 515. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 516/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 516): 'In order to sail to the Caribbean he will have to hire sailors....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In order to sail to the Caribbean he will have to hire sailors....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He didn't like to see his money leaving his possession, even if he liked where it was going....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 516. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 517/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 517): 'The recent developments are rather attractive, but the resort hotels have trouble offering everythin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The recent developments are rather attractive, but the resort hotels have trouble offering everythin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can leave immediately when you're sequestered....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 517. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 518/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 518): 'I'm from up around Austin....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I'm from up around Austin....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When I flipped through the Bionomics, the first thing I was interested in was learning about people ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 518. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 519/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 519): 'The Bible is the one and only education you need in life....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Bible is the one and only education you need in life....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gay people are responsible for much of American culture....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 519. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 520/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 520): 'No, it isn't....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No, it isn't....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The District of Columbia has a committee on Governmental Affairs....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 520. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 521/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 521): 'Works from Giovanni Bellini are absent from the exhibit....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Works from Giovanni Bellini are absent from the exhibit....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A weanling needs to have a rope halter put on him to get him used to being with people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 521. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 522/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 522): 'Health care is expensive and unfair...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Health care is expensive and unfair...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can never expect to win by using the last three digits of your Social Security to win the lotter...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 522. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 523/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 523): 'Carrying their offerings by the feet, women form a line on one side and men on the other because the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Carrying their offerings by the feet, women form a line on one side and men on the other because the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Neapolitans are nice areas with good living environments. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 523. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 524/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 524): 'There are no modern buildings found on the outskirts....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no modern buildings found on the outskirts....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Our people have never been harassed in this country....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 524. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 525/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 525): 'Bush was investigated by the Republicans the same way they investigated Clinton....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bush was investigated by the Republicans the same way they investigated Clinton....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alcohol problems are all grouped as one diagnosis....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 525. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 526/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 526): 'There is a lot of literature on the subject....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a lot of literature on the subject....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She looks like she has a lot to say....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 526. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 527/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 527): 'One it's done, so we've been pretty fortunate, although my wife doesn't agree...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One it's done, so we've been pretty fortunate, although my wife doesn't agree...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I get sea sick but I hope there will be medicine so I can go fishing....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 527. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 528/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 528): 'Huntington Beach is home to the world's largest Pro Surfing Championship....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Huntington Beach is home to the world's largest Pro Surfing Championship....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I label them how I want....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 528. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 529/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 529): 'Here is where he intended to stay....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Here is where he intended to stay....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir James and miss tuppence are on a beach not indoors...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 529. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 530/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 530): 'The plants were in the ground....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The plants were in the ground....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All program reviews are sponsored by the Corporation's Strategic Direction Plan committee....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 530. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 531/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 531): 'I enjoy various genres of music....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I enjoy various genres of music....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No, outside a hot-air balloon....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 531. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 532/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 532): 'Integrated Planning model projections are consistent with boilermaker labor available....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Integrated Planning model projections are consistent with boilermaker labor available....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Flexible emission reduction can be done by power generators. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 532. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 533/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 533): 'The Middle East Studies Association posted a warning on its website about a scheme....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Middle East Studies Association posted a warning on its website about a scheme....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You're totally not like them....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 533. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 534/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 534): 'When I first came here, I didn't watch TV very much....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When I first came here, I didn't watch TV very much....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There will not be scenes of boats on the Nile....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 534. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 535/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 535): 'The Joint Chiefs warned the administration about potential actions....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Joint Chiefs warned the administration about potential actions....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Not enough students are entering teaching because they can't afford to pay off their student loans....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 535. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 536/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 536): 'The landscape doesn't seem very promising....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The landscape doesn't seem very promising....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Where is the rest of our group? asked Jon....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 536. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 537/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 537): 'It is time for Carter....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is time for Carter....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Creating Client-Centered State Communities of Justice conference was held in March 2003. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 537. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 538/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 538): 'FinanceNet has remained the same since its inception....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'FinanceNet has remained the same since its inception....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Did she report us to the police? Mr. Carter shook his head....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 538. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 539/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 539): 'Cults try to prey on women who are at home alone....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cults try to prey on women who are at home alone....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Because they're more mature, they have a better outlook on life....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 539. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 540/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 540): 'On Monday evening we have family home evening where we all remain at the house and do things togethe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On Monday evening we have family home evening where we all remain at the house and do things togethe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The lines are always closed....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 540. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 541/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 541): 'They couldn't see anything or anyone there. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They couldn't see anything or anyone there. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'that's all, goodbye...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 541. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 542/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 542): 'Gathering money....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gathering money....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The basis of our grant awards can be found in the information supplied to grantees....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 542. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 543/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 543): 'The power generators are bad for the environment....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The power generators are bad for the environment....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The railway station is close to the bazaar....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 543. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 544/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 544): 'We will have dinner together at the Savoy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We will have dinner together at the Savoy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is difficult and I am not sure who is even putting the idea forward and how they will implement i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 544. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 545/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 545): 'This guide explores goals, success factors, and pointers on building finance organizations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This guide explores goals, success factors, and pointers on building finance organizations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many other significant things happened at the Temple Mount, but this was the most sacred event....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 545. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 546/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 546): 'He didn't like what she was doing. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He didn't like what she was doing. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'explanations that disagree....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 546. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 547/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 547): 'The airport in Chek Lap Kok was begun....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The airport in Chek Lap Kok was begun....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rules require customers to have information....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 547. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 548/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 548): 'What sorts of horror films have you seen lately....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What sorts of horror films have you seen lately....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The OMB have been developing technical standards....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 548. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 549/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 549): 'Gary Locke ordered the cutting of half the state funding for civil legal services....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gary Locke ordered the cutting of half the state funding for civil legal services....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nobody can trace their ancestry to Spain....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 549. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 550/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 550): 'Locally produced meat is very cheap in Barcelos....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Locally produced meat is very cheap in Barcelos....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There should be dress codes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 550. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 551/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 551): 'Wolfe challenges liberals....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wolfe challenges liberals....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Longabough's data indicated that there was benefit from a post-discharge contact....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 551. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 552/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 552): 'It is not an interesting area except for its most important product....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is not an interesting area except for its most important product....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'None of the centers offer resources for beginner students....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 552. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 553/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 553): 'Bork was nodding....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bork was nodding....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Kenchoji is a widely visited temple by Japanese and foreign tourists....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 553. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 554/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 554): 'Other transfer papers were commissioned by the board....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Other transfer papers were commissioned by the board....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no name for this procedure....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 554. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 555/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 555): 'His strip was about kis....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His strip was about kis....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We were at eighty but now we are between twenty and thirty....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 555. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 556/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 556): 'What colors were the underclothes under which the things were hidden?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What colors were the underclothes under which the things were hidden?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'How was this project described?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 556. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 557/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 557): 'States are prohibited from imposing taxes on any online services or activities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'States are prohibited from imposing taxes on any online services or activities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The COO could be subject to immediate termination as per the performance contract....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 557. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 558/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 558): 'The landmark play by the soccer team was outstanding....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The landmark play by the soccer team was outstanding....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Yes that's very true if you have many hobbies....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 558. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 559/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 559): 'None of the major towns have shops for renting bikes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'None of the major towns have shops for renting bikes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Modern Italy is known for its fashion and sophistication....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 21]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 21, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 559. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 560/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 560): 'The funding is being increased....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The funding is being increased....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A Greek Orthodox architect designed the structure in the 19th century....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 560. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 561/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 561): 'Okay, we are live on the air now....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Okay, we are live on the air now....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Definitely the Dallas Cowboys....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 561. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 562/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 562): 'They have become part of the everyday life here....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They have become part of the everyday life here....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Conservatives said Clinton wanted to lower the age of concent....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 562. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 563/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 563): 'I can't believe that was only five minutes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I can't believe that was only five minutes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The city's five district attorneys eagerly want Mayor Bloomberg to accept the Council proposal....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 563. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 564/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 564): 'He tried to convince Clinton to sign the welfare reform bill. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He tried to convince Clinton to sign the welfare reform bill. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Our Day of Service is one example....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 564. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 565/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 565): 'Bush distanced himself from the the Iraq War....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bush distanced himself from the the Iraq War....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If you want a promotion, I would walk softly near him for a while....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 565. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 566/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 566): 'I thought we had done that....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I thought we had done that....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'US businesses lost $3 billion because of Cuba....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 566. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 567/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 567): 'I thought you could offer me other things for my irritation. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I thought you could offer me other things for my irritation. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jon was able to react before San'doro started moving....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 567. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 568/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 568): 'Cabaret Parisien is a cabaret show and many flock to watch it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cabaret Parisien is a cabaret show and many flock to watch it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hatch Act has never been enforced against the White House....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 568. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 569/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 569): 'Carter thought impulsively, \"You don't believe.\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Carter thought impulsively, \"You don't believe.\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The average amount of a debt payment is $1,100 a month. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 569. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 570/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 570): 'I want to see more women in government....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I want to see more women in government....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At least one of us believes that we need to keep juries....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 570. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 571/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 571): 'In the report, we said an underlying cause of federal information security weaknesses was that the a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the report, we said an underlying cause of federal information security weaknesses was that the a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Doctors will be required to drink cold coffee at least twice a day under the new requirement....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 571. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 572/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 572): 'The gruff, bluff warriors had taste for painting, calligraphy, ceremony, the arts, and the teachings...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The gruff, bluff warriors had taste for painting, calligraphy, ceremony, the arts, and the teachings...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It doesn't haunt me at all and I've forgotten about it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 572. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 573/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 573): 'There is no way to make a copy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no way to make a copy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'San'doro knew what to do to fix the problem....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 573. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 574/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 574): 'Meals are pretty heavy. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Meals are pretty heavy. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Porcelains from China are a staple antique found throughout the region....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 574. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 575/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 575): 'I recalled everything clearly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I recalled everything clearly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'yes, and he always typed his own papers...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 575. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 576/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 576): 'Some people get so immersed in them that they lose track of how much money they've spent....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some people get so immersed in them that they lose track of how much money they've spent....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The boat trips are so popular that some boats even come twice a day....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 576. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 577/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 577): 'The conclusion of the cover story is that Americans work a lot....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The conclusion of the cover story is that Americans work a lot....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The files are 1.2 GB, you wont have the space for them. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 577. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 578/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 578): 'If you need dental care, you can forget about buying a new car until the dentist is paid off....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If you need dental care, you can forget about buying a new car until the dentist is paid off....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Almost any island can be reached by hiring a private boat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 578. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 579/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 579): 'The value of g in the situation described above is 0.857....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The value of g in the situation described above is 0.857....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I've never read anything called The Kingdom of Sound....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 579. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 580/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 580): 'He's still not happy about it, but Michael now only owes 20,000 dollars in legal fees. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He's still not happy about it, but Michael now only owes 20,000 dollars in legal fees. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No one has any idea where the falls got their name from. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 580. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 581/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 581): 'Guests can go to the local swimming pool for a reduced fee....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Guests can go to the local swimming pool for a reduced fee....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Talking taxes?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 581. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 582/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 582): 'The sovereignty became known in that country in the 21th century....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The sovereignty became known in that country in the 21th century....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Will there always be astronauts going to the moon in a space ship?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 582. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 583/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 583): 'I've been reading about children of alcoholics, are you familiar with that syndrome?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I've been reading about children of alcoholics, are you familiar with that syndrome?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He saw Susan smile and Jon with the militia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 583. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 584/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 584): 'She begged him to come closer to her. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She begged him to come closer to her. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The public interest might have been hurt....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 584. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 585/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 585): 'Shuger thinks that the law should not be changed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Shuger thinks that the law should not be changed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are people buying guns that don't even have a background check. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 585. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 586/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 586): 'The expectations for program improvement are not clearly defined....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The expectations for program improvement are not clearly defined....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The island doesn't have any open fields so there are very few flowers....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 586. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 587/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 587): 'I really want to go first....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I really want to go first....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bob was wearing a surgical mask while he told me not to talk about his issue with germs....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 587. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 588/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 588): 'It was a long western movie....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was a long western movie....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Electronic comments seemed helpful to them, but not to many others....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 588. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 589/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 589): 'Lucian Truscott has served in the army before....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lucian Truscott has served in the army before....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Access to justice for poor Texans has been hurt by Congressional retreat....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 589. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 590/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 590): 'Tommy's heart started beating faster....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tommy's heart started beating faster....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'd say you should just skip visiting it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 590. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 591/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 591): 'I do not discriminate according to sex when it comes to making people feel less adequate....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I do not discriminate according to sex when it comes to making people feel less adequate....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Despite the lengthy limousine, no hooligan is inspired to hurl a stone....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 591. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 592/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 592): 'For group health plans under these rules the initial yearly cost will be $100 million with 20,000 pe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'For group health plans under these rules the initial yearly cost will be $100 million with 20,000 pe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Madrid has no traditions and is not the capital of any country....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 592. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 593/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 593): 'They never use any kind of chemicals, so the fabric often ends up melting in the steamers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They never use any kind of chemicals, so the fabric often ends up melting in the steamers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Your thoughts on the matter are important to me....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 593. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 594/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 594): 'Salmon are among the fish sold at the market....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Salmon are among the fish sold at the market....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He doesn't know if he should take every donation....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 594. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 595/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 595): 'WAIT!\" Slim shouted to me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'WAIT!\" Slim shouted to me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Researchers found eagerness to change was predicted by the patient's acknowledgement of drinking in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 595. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 596/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 596): 'The area was named the Liberties because it was a popular spot for gambling ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The area was named the Liberties because it was a popular spot for gambling ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'IBM is not very fond of jokes, such as this one about getting into a boating race....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 596. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 597/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 597): 'Steve Forbes records a commentary about issues.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Steve Forbes records a commentary about issues.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Thompson and Giuliani are looking to use the research for their next issue....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 597. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 598/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 598): 'The Cours Mirabeau is relaxing. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Cours Mirabeau is relaxing. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Yuppies are trendy right now....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 598. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 599/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 599): 'The highway becomes Allée Dumanoir for about 11.2 miles, just past Capesterre....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The highway becomes Allée Dumanoir for about 11.2 miles, just past Capesterre....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The complaints in the ranks did not yield any result....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 599. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 600/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 600): 'I think we took care of it -- I haven't seen any more build up....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I think we took care of it -- I haven't seen any more build up....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ca'daan wasn't good at bedding women....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 600. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 601/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 601): 'What's wrong? ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What's wrong? ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The world cup, which takes place in the summer, will focus fans. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 601. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 602/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 602): 'Who knows what is racist anymore. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Who knows what is racist anymore. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The plaza Mayor combines history with real-life bustle....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 602. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 603/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 603): 'There is a shady park stretching down to Place de la Concorde....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a shady park stretching down to Place de la Concorde....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The college coaches have the most responsibility to decide which players have a problem, not the NCA...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 603. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 604/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 604): 'It seems that everyone in England is gay....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It seems that everyone in England is gay....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Things are cheaper in Texas. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 604. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 605/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 605): 'The cast only needs a couple weeks for the healing process of eight to twelve weeks....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The cast only needs a couple weeks for the healing process of eight to twelve weeks....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many thousands of people travel to see Shiva's lingam every year on festive days....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 605. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 606/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 606): 'I prefer another team....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I prefer another team....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Turning the function over to the Department of Justice is not an option....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 606. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 607/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 607): 'We do not believe in the fixity of races....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We do not believe in the fixity of races....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The temple is open to everyone who wishes to enter....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 607. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 608/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 608): 'Tommy`s plan was to obliterate Conrad....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tommy`s plan was to obliterate Conrad....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The women have boring clothes and faces....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 608. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 609/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 609): 'No, I do not have any automobile vandalism....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No, I do not have any automobile vandalism....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are no mosques anywhere near the Russian church....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 609. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 610/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 610): 'Sometimes the ink bleeds on print publications....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sometimes the ink bleeds on print publications....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The GAO's audits include financial and employment information from the agency....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 610. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 611/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 611): 'I can't drive a standard one that's why I have an automatic....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I can't drive a standard one that's why I have an automatic....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All we drink is soda in my house....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 611. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 612/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 612): 'These actions are gaudy even considering the usual standards of politico television....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These actions are gaudy even considering the usual standards of politico television....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was never injured, so he doesn't have any problems....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 612. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 613/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 613): 'Young people would love public service once they tried it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Young people would love public service once they tried it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Human Practices That Empowered and Involved Employees refers to creating a positive workplace enviro...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 613. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 614/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 614): 'The approach is meant to eliminate state burdens....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The approach is meant to eliminate state burdens....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The egg didn't seem affected by that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 614. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 615/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 615): 'Slate discounted the claims....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Slate discounted the claims....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was plenty of activity in the utility power plant construction business...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 615. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 616/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 616): 'The Postal Service has intricate classification systems....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Postal Service has intricate classification systems....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We have no homeless....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 616. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 617/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 617): 'It's illegal to dive there without a licence from the CRIS....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's illegal to dive there without a licence from the CRIS....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He didn't even try to speak....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 617. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 618/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 618): 'No, I cannot drive a standard vehicle....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No, I cannot drive a standard vehicle....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Canada has better legal services than we so. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 618. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 619/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 619): 'He lost his patience with me because I asked him about the moral difference between ultimate fightin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He lost his patience with me because I asked him about the moral difference between ultimate fightin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 50 percent reduction in tobacco use by those underage is a very ambitious goal....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 619. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 620/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 620): 'Loral's lawyers wanted to stop the transmission....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Loral's lawyers wanted to stop the transmission....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many individuals feel ashamed of their problems related to alcohol abuse....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 620. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 621/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 621): 'She would not look at Tuppence....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She would not look at Tuppence....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Weapons were not sent to Colombia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 621. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 622/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 622): 'Madeira has a strong community for this rare art because it has gathered a wide range of styles over...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Madeira has a strong community for this rare art because it has gathered a wide range of styles over...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is the morning after....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 622. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 623/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 623): 'Ca'daan said Susan was going to leave....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ca'daan said Susan was going to leave....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is only 1 viable path for product development....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 623. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 624/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 624): 'Tuppence was surprised there was nothing....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tuppence was surprised there was nothing....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They supported the mines because that's where they got their supplies....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 624. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 625/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 625): 'The climb helps with your self-discipline and purifies you....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The climb helps with your self-discipline and purifies you....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indian troops were told to never bite their cartridges and loved to eat beef....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 625. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 626/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 626): 'I find that very easy but the budget has an impact on it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I find that very easy but the budget has an impact on it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Who's responsible for writing that?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 626. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 627/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 627): 'Tell him we need bandages and blankets for the wounded....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tell him we need bandages and blankets for the wounded....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Globe reported that he became impotent after marrying Nicole Rothschild....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 627. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 628/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 628): 'Chaim Weizmann was a scientist born in Russia....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Chaim Weizmann was a scientist born in Russia....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'One group was named the Eagles, the other the Rattlers, and they were ready to fight....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 628. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 629/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 629): 'High volume postal systems have the greatest burden....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'High volume postal systems have the greatest burden....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sherry, also known as vino de Jerez, is a wine fortified with brandy and is the most famous of all S...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 629. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 630/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 630): 'Slime moved his up in down in agreement slowly....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Slime moved his up in down in agreement slowly....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I have trouble thinking we'll solve too much of the problem. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 630. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 631/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 631): 'She only said single words....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She only said single words....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Many tourists come to visit the convent of the incarnation....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 631. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 632/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 632): 'All systems must share the same relationships and cannot be more or less coupled....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All systems must share the same relationships and cannot be more or less coupled....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'National saving falls for many reasons ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 632. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 633/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 633): 'I don't imagine the situation has gotten any better....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't imagine the situation has gotten any better....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no legal precedent to support that it's okay for a reporter to leak what someone plans to s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 633. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 634/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 634): 'Tuppence heard some horns blowing behind....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tuppence heard some horns blowing behind....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All of the vice presidential candidates were well mannered. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 634. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 635/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 635): 'Things come a lot easier with maturity and a different mindset....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Things come a lot easier with maturity and a different mindset....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All waste from toxicity testing will burn off and evaporate and no extra steps are necessary....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 635. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 636/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 636): 'Obviously we should stay here as long as possible....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Obviously we should stay here as long as possible....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is free for the kids to take a swim with the dolphins....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 636. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 637/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 637): 'It's referred to as peace of mind. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's referred to as peace of mind. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The job took about 10 minutes of my time...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 637. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 638/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 638): 'All students should be required to spend extra time with Stan....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All students should be required to spend extra time with Stan....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I love working in the kitchen....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 638. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 639/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 639): 'The museum at the site was permanently closed in 1998....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The museum at the site was permanently closed in 1998....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Greuze pulled me out of my seat....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 639. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 640/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 640): 'Miss Howard threw up her hands in defiance....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Miss Howard threw up her hands in defiance....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This trip happened in 2016....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 640. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 641/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 641): 'I was allowed to continue walking with no interruptions....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was allowed to continue walking with no interruptions....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is the first step in the plan....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 641. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 642/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 642): 'Did they cook the meat well?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Did they cook the meat well?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He panted because he could not breathe very well....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 642. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 643/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 643): 'Kashikojima is a resort town....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kashikojima is a resort town....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some data will be summarized in a table....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 643. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 644/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 644): 'India prospered under his rule and expanded its trade routes both east and west....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'India prospered under his rule and expanded its trade routes both east and west....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm married and spent time in Barcelona. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 644. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 645/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 645): 'We thought that watering would negatively affect it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We thought that watering would negatively affect it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There's nothing that can be done to prepare for the how wonderful the archaeological sites are....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 645. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 646/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 646): 'The giants always stay on their feet....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The giants always stay on their feet....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Japanese cinema industry is in a stagnant state right now, and there are people who want it to c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 646. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 647/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 647): 'There is shopping on Fernao Ornelas....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is shopping on Fernao Ornelas....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is known for the integration of Modernist innovations and popular dance steps with classical ball...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 647. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 648/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 648): 'I do not come home in the evenings. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I do not come home in the evenings. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Actual performance is usually lower than expected results show....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 648. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 649/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 649): 'Before Number 14 was Number 2....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Before Number 14 was Number 2....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nobody needs to act as a system sponsor, I will manage the project in the best way on my own....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 649. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 650/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 650): 'Ted is envious and shallow....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ted is envious and shallow....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'And not a single person will act in a more kind manner....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 650. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 651/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 651): 'Far are several museums not worth visiting because they are dilapidated mansions. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Far are several museums not worth visiting because they are dilapidated mansions. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Critics dismiss the book by Dr. Smith as psychobabble. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 651. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 652/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 652): 'One case study organization sponsors a course that lasts 3 months and costs $10,000 for the company ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One case study organization sponsors a course that lasts 3 months and costs $10,000 for the company ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I have never done that myself....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 652. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 653/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 653): 'A comment received regarding the IRFA concerned the proposed rule on small entities that manage fund...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A comment received regarding the IRFA concerned the proposed rule on small entities that manage fund...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I read Bible stories to her every night....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 653. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 654/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 654): 'Most of the ruins are from the time of the Romans from the first century B.C. and second century A.D...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most of the ruins are from the time of the Romans from the first century B.C. and second century A.D...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He described his past in just a few words....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 654. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 655/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 655): 'It's completely boring that you live in Virginia....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's completely boring that you live in Virginia....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The dog watches the bird fly around the house. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 655. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 656/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 656): 'Luckily, none of the frescoes were damaged by the earthquake....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Luckily, none of the frescoes were damaged by the earthquake....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Are you ready to go fishing? ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 656. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 657/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 657): 'Some of the paths are extremely difficult to pass....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some of the paths are extremely difficult to pass....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is certainly not what Saddam Hussein had in mind....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 657. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 658/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 658): 'Sadly, no innovative practices have been noticed and noted....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sadly, no innovative practices have been noticed and noted....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They went to eat dinner after camping....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 65]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 65, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 658. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 659/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 659): 'Everyone believes this to be the perfect representation of medieval architecture....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Everyone believes this to be the perfect representation of medieval architecture....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The have always had a keen interest in magic. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 659. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 660/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 660): 'You said something very nice to me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You said something very nice to me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Clinton got a cheer....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 660. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 661/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 661): 'You are not allowed to go to a different one....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You are not allowed to go to a different one....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The girl had dressings round her head and was on a white bed. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 661. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 662/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 662): 'He broke the man's bones before cracking his head....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He broke the man's bones before cracking his head....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was serious, according to the writer....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 662. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 663/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 663): 'Internet competition will not drive up the prices in the long run....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Internet competition will not drive up the prices in the long run....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The axe was buried up to the shaft as the Kal shifted....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 663. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 664/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 664): 'Finkelstein's tone even veers toward the jocular.at times, as when he makes fun of Elie Wiesel's rac...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Finkelstein's tone even veers toward the jocular.at times, as when he makes fun of Elie Wiesel's rac...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They have been fighting for thousands of years and it will continue....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 664. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 665/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 665): 'I was looking for a tie....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was looking for a tie....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'he was not being honest when he said he would be truthful....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 665. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 666/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 666): 'The new ships are stealthier and better....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The new ships are stealthier and better....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The program code was being re-written to for nefarious reasons....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 666. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 667/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 667): 'Spain saw crises, assassinations, and near anarchy in the early 20th century....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Spain saw crises, assassinations, and near anarchy in the early 20th century....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chicago is a terrible school....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 667. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 668/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 668): 'I told her the steak was from a dinosaur....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I told her the steak was from a dinosaur....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dylan really is quite amazing....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 668. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 669/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 669): 'You should dress more revealing to get media attention...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You should dress more revealing to get media attention...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I have no idea who Mrs. Inglethorp was contacting. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 669. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 670/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 670): 'Bork's friendliness was slightly reassuring to him....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bork's friendliness was slightly reassuring to him....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After what seemed like forever, a short, squat woman ambled into the room....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 670. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 671/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 671): 'Thousands of children's respiratory symptoms are linked to summer air pollution....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thousands of children's respiratory symptoms are linked to summer air pollution....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Factory operations are a very closely guarded secret....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 671. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 672/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 672): 'Delos has hotels and restaurants for tourists.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Delos has hotels and restaurants for tourists.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alcohol problems are found quite often in every department...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 672. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 673/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 673): 'The amount of patients treated is considered correct and desirable....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The amount of patients treated is considered correct and desirable....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adequate Data or Methods Deficiency...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 673. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 674/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 674): 'There are a large number of sympathetic parents in teen culture....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are a large number of sympathetic parents in teen culture....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Steve Ballmer is a college friend of mine. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 674. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 675/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 675): 'Some federal agencies are working more closely with local governments....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some federal agencies are working more closely with local governments....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm surprised you disagree with Faludi's characterizations. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 675. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 676/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 676): 'In 133 B.C., the kingdom was given over to Roman control by Attalus III....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 133 B.C., the kingdom was given over to Roman control by Attalus III....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'you have never left your hometown, correct?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 676. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 677/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 677): 'Masada is a national park along the Dead Sea....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Masada is a national park along the Dead Sea....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You want my approval, is that right?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 677. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 678/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 678): 'Zarco returned to the claim the following year....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Zarco returned to the claim the following year....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The New Cite is also quite popular....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 678. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 679/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 679): 'The financing account does not receive interest from transactions with the Treasury....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The financing account does not receive interest from transactions with the Treasury....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The action packed movies, without a doubt....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 679. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 680/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 680): 'This is known as moral hazard to economists....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This is known as moral hazard to economists....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He advocated for his parents to invest in the next generation....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 680. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 681/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 681): 'The will had been witnessed by the gardener, according to testimony....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The will had been witnessed by the gardener, according to testimony....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You'll realize I'm right all along....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 681. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 682/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 682): 'Young men are too untrustworthy to be father confessors....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Young men are too untrustworthy to be father confessors....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They didn't save much money since two offices ran programs. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 682. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 683/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 683): 'Doc Matthews, better go get them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Doc Matthews, better go get them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She put the phone down even before he had a chance to respond....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 683. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 684/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 684): 'He called Lacey fosbourgh to alert her....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He called Lacey fosbourgh to alert her....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I just about feel the same way right now....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 684. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 685/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 685): 'Packets of directions will be noted in the technical appendixes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Packets of directions will be noted in the technical appendixes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That would penalize companies for being productive....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 685. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 686/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 686): 'Japan can't reform their own systems....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Japan can't reform their own systems....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The loveliest stage in Dublin called the Gate Theatre was built in 1784....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 686. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 687/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 687): 'The Kentuckian missed him in all of this commotion....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Kentuckian missed him in all of this commotion....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Foresight and fear are confusing. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 687. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 688/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 688): 'I have plenty of time for gardening....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have plenty of time for gardening....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He couldn't believe it was not true that he was going to go on the trip....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 688. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 689/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 689): 'The kids are happy to play video games with us....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The kids are happy to play video games with us....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I saw King Ralph and it wasn't very good....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 689. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 690/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 690): 'In the Natural History Museum of Crete, there are many exhibits on display about the local area's ge...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the Natural History Museum of Crete, there are many exhibits on display about the local area's ge...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Incumbent postal administrators may choose to reduce the frequency of deliveries due to rising costs...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 690. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 691/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 691): 'Bush doesn't think substance is important....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bush doesn't think substance is important....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The capitalists actually only chomp their cigars on weekends....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 691. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 692/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 692): 'Long term leases are often much better value....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Long term leases are often much better value....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The smell of Chlorine is not a sign that the carpet has been treated with bleach. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 692. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 693/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 693): 'The restaurant is very elegant but it's not so expensive....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The restaurant is very elegant but it's not so expensive....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Vegetables. Yes, I'm aware it is...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 693. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 694/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 694): 'It begins from Pont Sainte-Madeleine, behind the Ceteau des Rohan....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It begins from Pont Sainte-Madeleine, behind the Ceteau des Rohan....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That is a surprise attack....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 694. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 695/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 695): 'Leith was incorporated into the city of Edinburgh in 1920....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leith was incorporated into the city of Edinburgh in 1920....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The LSC included cases of any tupe of funding....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 695. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 696/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 696): 'You have to do it a few times to prove it to yourself. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You have to do it a few times to prove it to yourself. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was extremely angry at Leuchter, but calmed down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 696. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 697/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 697): 'The lettuce worker is Chavez's husband. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The lettuce worker is Chavez's husband. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Any methods that are developed with researchers and clinicians working together will only help them ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 697. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 698/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 698): 'A cauldron boils with some of the captured Vikings in it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A cauldron boils with some of the captured Vikings in it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'HIPPA is simply too complicated for some members of the regulated community to understand....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 698. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 699/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 699): 'We have a deli downstairs that has great muffins in the morning and they are low-fat....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We have a deli downstairs that has great muffins in the morning and they are low-fat....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's not really important for Beijing to keep relations at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 699. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 700/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 700): 'Famous dogs live the life of luxury 24/7....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Famous dogs live the life of luxury 24/7....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The most attractive artifacts are on the second floor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 700. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 701/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 701): 'That's not going to work....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That's not going to work....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I mean that you are in Texas....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 701. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 702/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 702): 'They had a nationwide focus on control. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They had a nationwide focus on control. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You don't want people to be punished if they aren't guilty, so it's important for us to know what th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 702. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 703/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 703): 'Their eyes looked at them with anger in them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Their eyes looked at them with anger in them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Webster and Clay were leaders in Vietnam....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 703. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 704/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 704): 'No one needs a budget, all it does is prevent you from having fun and spending money,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No one needs a budget, all it does is prevent you from having fun and spending money,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Locals often climb the coconut trees to fetch coconuts....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 704. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 705/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 705): 'The domestic cat is roughtly the size of the leopard-cat....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The domestic cat is roughtly the size of the leopard-cat....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Analyses of the effects of the rule on small entities are required by section 607.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 705. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 706/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 706): 'Only employees over 30 years old are allowed to receive the incentives....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Only employees over 30 years old are allowed to receive the incentives....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I think that is pretty....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 706. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 707/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 707): 'The national civil justice community has nothing to do with LSC....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The national civil justice community has nothing to do with LSC....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An orange contractor card is frowned upon in Siberia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 707. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 708/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 708): 'Knowth was built last year....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Knowth was built last year....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Auctioned for Blocks A, B and C were broadband PCS licenses....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 708. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 709/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 709): 'The statement referred the reader to a guide about implementing policies....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The statement referred the reader to a guide about implementing policies....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Schor proposes a solution that is forced and obsessive....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 709. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 710/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 710): 'Did you say that his name is Peretti?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Did you say that his name is Peretti?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Are you hearing him or are you ignoring him? ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 710. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 711/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 711): 'I'm in the DC area....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I'm in the DC area....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'HHS failed to perform any kind of analysis....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 711. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 712/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 712): 'Would you excuse me?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Would you excuse me?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The passes force you to pay more for entry....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 712. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 713/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 713): 'The labor shortages usually are in the technology field....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The labor shortages usually are in the technology field....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a platform that indicates where Buddha's seat is....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 713. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 714/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 714): 'I never saw what White saw....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I never saw what White saw....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Vulnerable populations, more than poor ones, struggle the most to access civil justice....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 714. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 715/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 715): 'The United States definition came about as the result of an international conference, but only after...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The United States definition came about as the result of an international conference, but only after...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can enjoy some peace and quiet on the serene sands of the beach....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 715. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 716/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 716): 'The owner of the unit will not have excess emissions in any situation....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The owner of the unit will not have excess emissions in any situation....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We're limited on what space we have left. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 716. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 717/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 717): 'Plain and simple tombs include the Tomb of Seti. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Plain and simple tombs include the Tomb of Seti. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She had no idea how to keep Mrs. Vandemeyer from leaving, but she has to find a way herself. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 717. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 718/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 718): 'When I explained my side of the murder, the women shook their heads....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When I explained my side of the murder, the women shook their heads....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You can grow the tomatoes in the woods....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 718. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 719/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 719): 'The west bank of the Nile is much more modern....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The west bank of the Nile is much more modern....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He wasn't strictly truthful in the denial. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 719. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 720/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 720): 'This is Scranton....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This is Scranton....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Redentore is larger than the other church designed by Redentore....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 720. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 721/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 721): 'The acumen of auditors is valuable in writing communications....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The acumen of auditors is valuable in writing communications....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Commonwealth Games were previously held here....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 721. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 722/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 722): 'The Adige river is very far away from the brick fortress....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Adige river is very far away from the brick fortress....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Whose business investments have done so little to help communism in China....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 722. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 723/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 723): 'Its founding intent was to allow only the richest students to attend....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Its founding intent was to allow only the richest students to attend....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rennie never had any problems with Shannon or Bayliss....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 723. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 724/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 724): 'The goal here is to help lawmakers have access to useful information but not managers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The goal here is to help lawmakers have access to useful information but not managers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kendal has been Clinton's lawyer for 10 years....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 724. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 725/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 725): 'I am as ugly as a dog.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am as ugly as a dog.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was no demand from the mergers for the organization to quickly adopt new organizational struct...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 725. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 726/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 726): 'The IRA is not a retirement arrangement....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The IRA is not a retirement arrangement....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You have little control of where you get drifted to....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 726. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 727/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 727): 'The crowd didn't care about Lincoln's hat....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The crowd didn't care about Lincoln's hat....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I know the insurance adjusters very well....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 727. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 728/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 728): 'Both of you would probably eat real well together, you both like vegetables and asian food....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Both of you would probably eat real well together, you both like vegetables and asian food....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Conservative Christians were never suspicious of environmentalism....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 728. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 729/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 729): 'The colt was not nervous at all....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The colt was not nervous at all....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bernini is one of the world's most famous sculptors, he even worked in Rome....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 729. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 730/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 730): 'There's no option to have anything deducted from your income, you just need insurance....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There's no option to have anything deducted from your income, you just need insurance....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We had some great years when we had Staubach and Morton....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 730. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 731/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 731): 'There is one thing we don't know....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is one thing we don't know....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Although Egypt was dominated by the Assyrians, they began increasing trade with the Roman Empire....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 731. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 732/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 732): 'The Broadway audience was amused by the gay mannerisms of Timon due to cultural cues....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Broadway audience was amused by the gay mannerisms of Timon due to cultural cues....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Home design supplement insists that simplicity is chic. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 732. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 733/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 733): 'Cocaine is very addictive and before you know it, you are always doing it and stealing from friends ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cocaine is very addictive and before you know it, you are always doing it and stealing from friends ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was starting to everyone to hear the loud bell....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 733. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 734/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 734): 'The discount level is higher, as shown in Figure 3....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The discount level is higher, as shown in Figure 3....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ca'daan knew Jon wanted to stab him....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 734. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 735/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 735): 'Pollution levels have decreased in the last decade....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pollution levels have decreased in the last decade....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Steel bands perform during dinner to keep people in the cafes entertained....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 735. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 736/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 736): 'Its a good way to let everyone know we're there. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Its a good way to let everyone know we're there. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The doctor went in without Alfred's permission...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 736. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 737/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 737): 'I stayed in the bath and took a nap....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I stayed in the bath and took a nap....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'evangelicals, while nice in personal interactions tend to be rude when dealing with Jewish people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 737. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 738/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 738): 'Cooking is fun....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cooking is fun....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I nearly missed the train....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 738. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 739/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 739): 'The betting game was fixed, as the result was always small....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The betting game was fixed, as the result was always small....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The outcome supports the idea that judging a fight is not objective. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 739. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 740/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 740): 'It's going to be hot on Wednesday, so I'm going to the beach. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's going to be hot on Wednesday, so I'm going to the beach. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Newborn babies don't grow up quickly, in my experience....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 740. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 741/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 741): 'With even more ferocity, the Sticks charged....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With even more ferocity, the Sticks charged....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The wooden structure is left as is for as long as it takes to decompose back into the earth....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 741. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 742/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 742): 'He drank a bit too much sometimes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He drank a bit too much sometimes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was a national trade shopping center. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 742. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 743/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 743): '5 billion dollars in 1996 dollar values....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '5 billion dollars in 1996 dollar values....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The research had no problems with validity....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 743. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 744/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 744): 'The weapon systems are delivered on time and are cost-effectively....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The weapon systems are delivered on time and are cost-effectively....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I hated to have to see that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 744. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 745/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 745): 'Bradley can't afford to look like a strategist....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bradley can't afford to look like a strategist....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was trying to offend you by saying you're old. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 745. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 746/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 746): 'Employers provide health insurance....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Employers provide health insurance....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Good financial management involves implanting microchips into all employees to track their spending ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 746. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 747/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 747): 'Whittington was nowhere to be found in the room.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Whittington was nowhere to be found in the room.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Today has totally changed in terms of legality....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 747. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 748/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 748): 'The budget has no purpose...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The budget has no purpose...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This count excludes stations, branches or contract stations....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 748. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 749/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 749): 'Research questions' design is done with only the research team's input....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Research questions' design is done with only the research team's input....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A push tie is when the dealer loses and the winner is paid....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 749. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 750/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 750): 'All the time. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All the time. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He didn't care what people thought....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 750. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 751/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 751): 'My son did not get a reply to his question....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My son did not get a reply to his question....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I had to do it, it was necessitated by my age....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 751. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 752/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 752): 'Getting the evidence against her would not be easy. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Getting the evidence against her would not be easy. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Other rates can be used to calculate results....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 752. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 753/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 753): 'Derry said no to the proposition and sat down....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Derry said no to the proposition and sat down....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't like exercising that way....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 753. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 754/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 754): 'After 90 days, the HHS will not accept any comments about any rules.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After 90 days, the HHS will not accept any comments about any rules.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Postal Service shall not make discrimination among users of the mails under this title....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 754. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 755/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 755): 'Dallas is a lot drier than Lubbock in the summer....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dallas is a lot drier than Lubbock in the summer....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He didn't play with the gun....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 755. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 756/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 756): 'During the 1871 Commune, the royal Palais des Tuileries withstood attacks from revolutionaries and h...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the 1871 Commune, the royal Palais des Tuileries withstood attacks from revolutionaries and h...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has a straight line six cylinder....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 756. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 757/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 757): 'No, I am not Jane Finn....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No, I am not Jane Finn....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These measures won't make the ghetto go away....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 757. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 758/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 758): 'With her sexual features Sevigny does not embody the sexual mystery which is present in Boys Don't C...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With her sexual features Sevigny does not embody the sexual mystery which is present in Boys Don't C...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Publishing has gotten much more important in the past decade....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 758. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 759/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 759): 'You don't ever get a break....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You don't ever get a break....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Improvised verse was frequently a feature of conversation....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 759. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 760/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 760): 'Somebody suspects that the letter was written by Styles....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Somebody suspects that the letter was written by Styles....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I sure would say that. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 760. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 761/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 761): 'Everything remained peaceful north of Delhi....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Everything remained peaceful north of Delhi....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A=Quite a few of them are doing a sub par job in this light....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 761. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 762/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 762): ''Would you agree with the popular saying that you and Mr. White think the same?'...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: ''Would you agree with the popular saying that you and Mr. White think the same?'...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She was possessed with madness....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 762. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 763/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 763): 'Sakes sat down behind an old oak table that was given to her by her brother....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sakes sat down behind an old oak table that was given to her by her brother....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The LSC-funded has no ability to cease the representation at once. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 763. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 764/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 764): 'You can actually walk to Dean Village from the west end of Princes Street....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You can actually walk to Dean Village from the west end of Princes Street....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Even though they were desperate, they were also exceedingly compassionate....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 764. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 765/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 765): 'He could not have got the coco....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He could not have got the coco....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The tourist information offices won't be of any help to you if your questions have anything to do wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 765. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 766/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 766): 'They won the first Super Bowl....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They won the first Super Bowl....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The analysis is completed under 56 U.S.C....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 766. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 767/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 767): 'A change to the way you will report your income is coming soon....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A change to the way you will report your income is coming soon....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I do not need to pull out my gun to shoot....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 767. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 768/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 768): 'Over the door, we see Surya riding on the back of an elephant....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Over the door, we see Surya riding on the back of an elephant....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The speaker utilizes local stations over cable....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 768. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 769/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 769): 'Jane Finn is the world's most dangerous bank robber....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jane Finn is the world's most dangerous bank robber....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Because of the bull market, household wealth increased by over a trillion dollars....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 769. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 770/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 770): 'Congress implemented a number of new requirements to include competitive bidding for legal service g...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Congress implemented a number of new requirements to include competitive bidding for legal service g...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Knowing the truth is worth it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 770. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 771/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 771): 'The king dream center is a really cool and popular attraction. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The king dream center is a really cool and popular attraction. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I really wanted to publish my book....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 771. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 772/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 772): 'The improvement in air quality is likely to prevent any future occurrences of acid rain....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The improvement in air quality is likely to prevent any future occurrences of acid rain....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That icy unconcern sent a chill down those who witnessed it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 772. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 773/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 773): 'The audit findings did not cover the organization's progress in implementing corrective actions....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The audit findings did not cover the organization's progress in implementing corrective actions....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After completing the performance evaluation period, the employee gets paid the full amount....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 773. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 774/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 774): 'Bus tours always include a prepared lunch....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bus tours always include a prepared lunch....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There were other critical success factors mentioned....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 774. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 775/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 775): 'The new national library has four buildings in the shape of books....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The new national library has four buildings in the shape of books....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The new one elected followed through on its rhetoric about human rights and democracy....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 775. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 776/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 776): 'Visitors to Eilat never take any interest in its dolphins. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Visitors to Eilat never take any interest in its dolphins. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He put her on the toilet in the bathroom. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 776. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 777/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 777): 'In the past we have spent less time on the field....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the past we have spent less time on the field....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It would've been larger if we had someone else do it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 777. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 778/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 778): 'It is very easy to vote....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is very easy to vote....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was a dispute regarding the Holy Sacrament and the School of Athens....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 778. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 779/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 779): 'He pointed out his house and I promised to go on a date with him. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He pointed out his house and I promised to go on a date with him. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The company did a superb job of investigating how its data was released....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 779. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 780/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 780): 'A national leadership institute is created but fails to recruit diverse leaders....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A national leadership institute is created but fails to recruit diverse leaders....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Woodward won't be leaving the united states any time soon....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 780. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 781/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 781): 'Chios has a lot of attractions to offer....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Chios has a lot of attractions to offer....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Abortion services are precluded by indigency and poverty....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 781. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 782/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 782): 'McBain helped inspire all the cop shows on TV....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'McBain helped inspire all the cop shows on TV....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The smart hotel is in the vicinity of beautiful gardens....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 782. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 783/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 783): 'We don't have any family in Maine....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We don't have any family in Maine....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Glossary terms reappear in the criminal investigator's work....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 783. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 784/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 784): 'The whole area had to be changed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The whole area had to be changed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The House was not expected to, and did not, pass the ban on partial birth abortions....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 784. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 785/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 785): 'Sometimes a client will not have an alternative source to get information about constitutional and s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sometimes a client will not have an alternative source to get information about constitutional and s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Matrix of Categories shows there are no relationships among themes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 785. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 786/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 786): 'The main entrance to the temple has a pair of red paper lanterns....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The main entrance to the temple has a pair of red paper lanterns....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The GAO is on G street....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 786. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 787/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 787): 'It all ended with a misunderstanding....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It all ended with a misunderstanding....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It seems like on the radio they use pick 10 songs every week and play the same 10 songs over and ove...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 787. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 788/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 788): 'There aren't any to be found under bricks....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There aren't any to be found under bricks....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'People are divided in opinion when it comes to that building....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 788. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 789/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 789): 'Yeah, there's nothing you can do but sit still and wait...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Yeah, there's nothing you can do but sit still and wait...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We requested comments from experts ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 789. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 790/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 790): 'Ca'daan returned from battle later that eve....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ca'daan returned from battle later that eve....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The men were required to prove their fighting skills....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 790. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 791/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 791): 'I am sure that his egg shouldn't hatch....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am sure that his egg shouldn't hatch....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tommy, you are a terrible person!...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 791. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 792/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 792): 'Picasso, Magritte, Kandinsky, and Klee's works are all including but, Marcel Duchamp's are not. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Picasso, Magritte, Kandinsky, and Klee's works are all including but, Marcel Duchamp's are not. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Did you get the booklet from the school to get the gifts?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 792. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 793/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 793): 'They did not include the local governments. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They did not include the local governments. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Anne Weiss gave the baker her phone number. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 793. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 794/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 794): 'The microphone had feed back....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The microphone had feed back....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Why sleep under the stars? ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 794. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 795/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 795): 'If a postal service is a love breakeven, its routes will lose profits and look bad. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If a postal service is a love breakeven, its routes will lose profits and look bad. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Reports of Census Bureau Summary Current Industrial for the Inorganic Chemical Industry is the title...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 795. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 796/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 796): 'Indeed, you weren't at all attached to her....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Indeed, you weren't at all attached to her....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We didn't bother with a redo....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 796. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 797/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 797): 'One transferring from a Shell Game to a Pie...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One transferring from a Shell Game to a Pie...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't like that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 797. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 798/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 798): 'Neoprene has heat retention qualities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neoprene has heat retention qualities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He will be receiving his postal order in 1 day....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 798. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 799/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 799): 'The Spanish wanted to implement social reform....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Spanish wanted to implement social reform....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'You'll be able to recall it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 799. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 800/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 800): 'The two men made peace and became the best of friends....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The two men made peace and became the best of friends....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'We are in front of you....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 800. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 801/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 801): 'The Voth witches never arrived to fight in the war....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Voth witches never arrived to fight in the war....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The first temples were mud huts....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 801. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 802/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 802): 'The Estimate of the Economic Costs of Asthma in the Nation, said the TV reporter....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Estimate of the Economic Costs of Asthma in the Nation, said the TV reporter....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'So it's like almost every vegetable of ours, and all is from the garden....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 802. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 803/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 803): 'I don't know if they have to option to choose well....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't know if they have to option to choose well....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Even though a majority of physicians check for alcohol use, only a few carried out the correct scree...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 803. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 804/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 804): 'Managers are praised for sticking to their guns and not changing their companies to appease their ma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Managers are praised for sticking to their guns and not changing their companies to appease their ma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I'm pretty sure we're going to see that you're okay....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 804. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 805/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 805): 'Sarah Cleveland has served as an Assistant Professor at the University of Texas School of Law since ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sarah Cleveland has served as an Assistant Professor at the University of Texas School of Law since ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I don't know anyone who will do it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 805. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 806/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 806): 'It was not sent in the forms. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was not sent in the forms. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pick up service at no charge. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 806. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 807/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 807): 'California physicians were not willing to do the operation....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'California physicians were not willing to do the operation....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The elders need to see what we face. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 807. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 808/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 808): 'Peter was actually abandoned by his mother too, he was raised by his grandmother during Harrer's abs...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Peter was actually abandoned by his mother too, he was raised by his grandmother during Harrer's abs...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The theory states it will happen within 30 days....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 808. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 809/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 809): 'She was running barefoot. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She was running barefoot. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brock has moved from Tennessee to another state recently....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 809. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 810/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 810): 'There will be a new child in the family, and everyone is excited for that....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There will be a new child in the family, and everyone is excited for that....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Disrespectfully yours...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 810. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 811/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 811): 'I read to escape from issues at my house....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I read to escape from issues at my house....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Such a management framework is more cost effective and gives the agency extra flexibility....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 811. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 812/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 812): 'I am sorry....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I am sorry....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The paintings are protected by several inches of glass and armed guards....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 812. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 813/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 813): 'Oh my!...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Oh my!...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is one gallery reserved for Leonardo's inventions.  ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 813. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 814/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 814): 'I don't owe any interest on my credit cards....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't owe any interest on my credit cards....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The upcoming shift in demographics should leave government programs relatively untouched....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 814. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 815/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 815): 'Case studies give a lot of evidence for what is discovered in an audit....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Case studies give a lot of evidence for what is discovered in an audit....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ca'daan looked at the circle of people....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 815. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 816/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 816): 'Does anyone want to do the hard job?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Does anyone want to do the hard job?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is just one school....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 816. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 817/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 817): 'I feel the same way too, I think there is nothing wrong with that....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I feel the same way too, I think there is nothing wrong with that....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Other factors besides the market conditions might have been bad leadership or poor planning....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 817. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 818/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 818): 'My yard is very small in size....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'My yard is very small in size....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'People will be happiest by choosing to extend their careers instead of retiring....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 818. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 819/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 819): 'Callie was already reaching for the door....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Callie was already reaching for the door....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All other countries re not ok. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 819. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 820/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 820): 'We can't do some things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We can't do some things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They promised that they would try to solve the math homework by noon. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 820. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 821/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 821): 'I think our laws are messed up....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I think our laws are messed up....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He makes important notes about the photos sources....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 821. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 822/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 822): 'There was a man next to the fireplace....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There was a man next to the fireplace....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The households with similar earnings have the same wealth levels....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 822. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 823/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 823): 'I disagree; daily prime time is not questionable....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I disagree; daily prime time is not questionable....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Tokyo Imperial Palace's land value was considered to be very valuable....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 823. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 824/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 824): 'Topham was thinking....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Topham was thinking....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That whole car rental setup was a total disaster the way he set it up....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 824. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 825/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 825): 'To my knowledge the results should be normal....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'To my knowledge the results should be normal....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After I had mustered it, they told me to forget the old system....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 825. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 826/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 826): 'Saving while working has better long term results....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Saving while working has better long term results....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He said that increasing communication is going to reduce the duplication of efforts among people doi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 826. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 827/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 827): 'This week there is a piece on the Enquirer about a secret passion of Carrie Fisher....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This week there is a piece on the Enquirer about a secret passion of Carrie Fisher....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wyaess was the original name and it meant butterscotch pudding....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 827. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 828/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 828): 'While the impeachment was successful in the House, it was blocked in the Senate....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'While the impeachment was successful in the House, it was blocked in the Senate....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'the stories are fabricated...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 828. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 829/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 829): 'The Turks sought control of Peshawar, Lahore and Delhi....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Turks sought control of Peshawar, Lahore and Delhi....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The car payment is 1000 dollars a month...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 829. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 830/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 830): 'There are no corridors leading to the burial chamber....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no corridors leading to the burial chamber....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The new high mindedness led to discontent. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 21]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 21, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 830. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 831/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 831): 'TV is more predictable than a dinner theater, and thats the way it should be. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'TV is more predictable than a dinner theater, and thats the way it should be. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Things were going very badly....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 831. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 832/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 832): 'The shrubs did okay through the cold spell. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The shrubs did okay through the cold spell. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The majority of Dyson's Silicon Valley CEO friend is not nice....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 832. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 833/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 833): 'The analysis discusses the definitions of small entities....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The analysis discusses the definitions of small entities....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Widows were not becoming sati....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 833. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 834/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 834): 'He held fast to the sky blob in his hands....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He held fast to the sky blob in his hands....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Governor Locke cut $2 from each entry fee that was supposed to go towards services....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 834. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 835/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 835): 'They get paid more than others. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They get paid more than others. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Chawk is famed for it's various wares....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 63]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 63, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 835. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 836/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 836): 'He wants it to last forever....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He wants it to last forever....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A system needs to perform its required functions....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 836. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 837/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 837): 'Seeing people that didn't fit in really scared me....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Seeing people that didn't fit in really scared me....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tyson was told he had malaria and AIDS....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 837. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 838/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 838): 'Seal of approval does not bring any meaning to reports....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Seal of approval does not bring any meaning to reports....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wait a second, let me turn off my stereo....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 838. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 839/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 839): 'She had an enigmatic, far away look in her eyes as she scanned the room....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She had an enigmatic, far away look in her eyes as she scanned the room....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Everyone who works, works the same hours as everyone else....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 839. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 840/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 840): ' I'm not going to see either movie. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: ' I'm not going to see either movie. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no regulatory flexibility analysis on the impact on small entities....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 840. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 841/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 841): 'Dener kebap is the favorite in our household....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dener kebap is the favorite in our household....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In what way do you mean \"Thanks to you\"?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 841. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 842/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 842): 'There is also two months worth of work available....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is also two months worth of work available....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ignoring the risks for the general support systems. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 842. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 843/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 843): 'Out of the current representatives, Charles Rangel is the most willing to each across the aisle....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Out of the current representatives, Charles Rangel is the most willing to each across the aisle....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The tower of 13 disks means that it takes 13 years to become enlightened....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 843. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 844/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 844): 'in our reports over the last several years, we have made dozens of spelling mistakes...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'in our reports over the last several years, we have made dozens of spelling mistakes...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They like to be scared....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 844. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 845/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 845): 'I saw that several of Lincoln's cops were in the train. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I saw that several of Lincoln's cops were in the train. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I wanted to improve my back muscles....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 845. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 846/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 846): 'I don't see how you could send someone to their death without being 100% sure....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I don't see how you could send someone to their death without being 100% sure....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was a unique patient....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 846. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 847/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 847): 'We'd like to get everyone back together to take trips. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We'd like to get everyone back together to take trips. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The articles raves about Apple's new products, Jobs is a brilliant man child like always....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 847. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 848/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 848): 'He used the bed to help him stand up....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He used the bed to help him stand up....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is no example....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 848. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 849/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 849): 'The postal density concept is a breakthrough in the field....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The postal density concept is a breakthrough in the field....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The harbor and the island of Hong Kong can be seen from the waterfront....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 849. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 850/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 850): 'Nobody dared to mock Shawn's New Yorker in the late '70s and early '80s....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nobody dared to mock Shawn's New Yorker in the late '70s and early '80s....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The last one nodded....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 850. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 851/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 851): 'There are some things you can't buy back....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are some things you can't buy back....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Continue toward the southerin tip of Derwent Water after returning to the B5289....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 851. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 852/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 852): 'Nye did not stand in his way, but moved aside....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nye did not stand in his way, but moved aside....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's not apparent, but it smells like asparagus. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 852. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 853/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 853): 'I put a coat of something on it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I put a coat of something on it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'SSA was established to help people over the age of 65....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 853. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 854/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 854): 'Romantic private getaways occur here....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Romantic private getaways occur here....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All information must be included no mater what the circumstances....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 854. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 855/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 855): 'Dave was looking worse since he saw him....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dave was looking worse since he saw him....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '7. Screening for alcohol problems in the emergency department, Cherpitel C. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 855. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 856/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 856): 'You don't have to be Roman Catholic to stay there but there is a daily mass in the common area....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You don't have to be Roman Catholic to stay there but there is a daily mass in the common area....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's better to be a fugitive when you're on TV. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 856. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 857/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 857): 'Hatch said they were a janitor ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hatch said they were a janitor ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He doesn't, I'm sure of it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 857. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 858/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 858): 'When they weren't ready also....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When they weren't ready also....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2001, the EPA did not talk to the public....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 858. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 859/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 859): 'Since I have been waiting here for an hour....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Since I have been waiting here for an hour....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Eggs are easily exchanged with other ingredients while cooking....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 34]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 34, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 859. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 860/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 860): 'Chocolate is available in the vending machines on the summit. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Chocolate is available in the vending machines on the summit. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Julius stated, \"Financial means are not a source of worry for me, but time is.\"...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 860. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 861/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 861): 'The world is watching the town because of it's history as a spectacle....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The world is watching the town because of it's history as a spectacle....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Victor thought the town was great for Les Mis because it was so stark and depressing....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 861. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 862/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 862): 'Nitrogen oxide gases and sulfur dioxide gases are unquantified....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nitrogen oxide gases and sulfur dioxide gases are unquantified....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The part articles are available in The Compost....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 862. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 863/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 863): 'Most of the participants are innocent in their dealings. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most of the participants are innocent in their dealings. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He kept on sitting up....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 863. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 864/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 864): 'Bornean White Rajahs...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bornean White Rajahs...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He had expected a savoury, sweet odor from the hospital. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 864. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 865/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 865): 'Despite having murdered everyone, he saw patience in Stark's eyes....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Despite having murdered everyone, he saw patience in Stark's eyes....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The monument celebrates the first large pizza crated in Italy....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 865. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 866/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 866): 'That accounts for the Ellen Barkin incident....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That accounts for the Ellen Barkin incident....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No, as far as Don Cazar was concerned, it wasn't....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 866. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 867/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 867): 'There is an issue of non-payment services provided to alcohol-impaired patients. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is an issue of non-payment services provided to alcohol-impaired patients. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's sad seeing a 60-year-old man who still takes drugs, but it's even more sad when it's the young ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 867. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 868/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 868): 'She found that following Sir James' advice could be done with so much ease. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She found that following Sir James' advice could be done with so much ease. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Detergents are multifaceted in their ability to keep clothing clean and looking like new....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 868. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 869/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 869): 'I think it's 10% of your credit....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I think it's 10% of your credit....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are lots of the old guard remaining. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 869. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 870/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 870): 'It is hard to maintain a diet if you are eating out....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is hard to maintain a diet if you are eating out....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ca'daan couldn't hear a thing since he was made deaf by the cannon....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 870. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 871/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 871): 'Bloat is an enemy when working on the Microsoft Outlook team....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bloat is an enemy when working on the Microsoft Outlook team....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Surpluses represent an opportunity to increase national saving....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 871. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 872/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 872): 'Tuppence said, \"That's it!\" and went upstairs. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tuppence said, \"That's it!\" and went upstairs. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Do you have time to swim that much with your job?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 872. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 873/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 873): 'I have food and shelter to give to someone....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have food and shelter to give to someone....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The buildings around it are not as colorful....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 873. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 874/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 874): 'You chopped down a tree and it fell in my flower bed.  ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'You chopped down a tree and it fell in my flower bed.  ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Slate has no male editors....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 874. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 875/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 875): 'We probably do...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We probably do...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I definitely did not agree at all....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 875. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 876/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 876): 'I'm in my seventies....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I'm in my seventies....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oliveri stopped in the entrance of the stable to admire the stallion as it was his best one yet....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 876. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 877/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 877): 'The agency gathers their lawyers once a month to train them on family court....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The agency gathers their lawyers once a month to train them on family court....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She wasn't making sense for a few minutes....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 877. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 878/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 878): 'Our boss got all of us the same book....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Our boss got all of us the same book....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When selling gold, they calculate weight and workmanship....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 878. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 879/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 879): 'This carefully constructed thriller is a tragic romance, wrote the journalist....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This carefully constructed thriller is a tragic romance, wrote the journalist....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'That does not make sense....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 22]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 22, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 879. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 880/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 880): 'The 25 percent is a disproportionally high amount....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 25 percent is a disproportionally high amount....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He starved and was in pain like all the others....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 24]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 24, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 880. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 881/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 881): ''You become what you belittle' has changed to 'You become what you behold'....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: ''You become what you belittle' has changed to 'You become what you behold'....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tokugawa Ieyasu became the Shogun in 1603, and Edo became the home of the Shogunate....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 881. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 882/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 882): 'It's like we were alone....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's like we were alone....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Logs were used to build the lodge and the lodge was beautiful....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 882. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 883/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 883): 'Susan has seen some things. Some of those things come further than anything I've ever seen on terms ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Susan has seen some things. Some of those things come further than anything I've ever seen on terms ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The howling lasted through the night. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 883. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 884/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 884): 'The sword was empty....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The sword was empty....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nearly everyone around here uses Exxon....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 884. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 885/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 885): 'It was interesting, but not satisfying to talk with her as she didn't enjoy it. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was interesting, but not satisfying to talk with her as she didn't enjoy it. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The NQ3C was actually a problem....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 885. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 886/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 886): 'Two hours was the limit for Mr. Brown....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two hours was the limit for Mr. Brown....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The accuracy of the records does not need to be checked....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 886. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 887/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 887): 'The Bombay destroyed the screen completely....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Bombay destroyed the screen completely....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She would never settle for anything like that....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 887. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 888/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 888): 'There is a lot of arguments going on when we watch television shows. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a lot of arguments going on when we watch television shows. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jon could feel his heart skip a beat out of fear....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 888. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 889/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 889): 'The conversation with Brad is finishing. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The conversation with Brad is finishing. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Santa Cruz has an international airport but not one that serves Funchal....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 889. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 890/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 890): 'Henry is always so soft on things....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Henry is always so soft on things....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I told her it was from a raptor....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 890. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 891/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 891): 'Shadow was known to get cranky if forced to use great effort. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Shadow was known to get cranky if forced to use great effort. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Las Vegas was named by Americans travelling to the West....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 891. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 892/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 892): 'Being caught would not change anything....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Being caught would not change anything....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The harbor is a good place to start to get a good sense of Nagasaki's personality....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 892. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 893/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 893): 'Drew wore the new pair after he unstrapped the ones he had been wearing....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Drew wore the new pair after he unstrapped the ones he had been wearing....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The area has a park-like setting, a small cafe where tourists can get sandwiches and a beautiful vie...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 893. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 894/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 894): 'The analysis said the government would save $2 million....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The analysis said the government would save $2 million....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Even when the biggest things happen globally, all North Carolina news covers is small town local new...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 894. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 895/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 895): 'HCFA staff said that they had no relationship with industry officials....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'HCFA staff said that they had no relationship with industry officials....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Payment authorization is included in administrative approvals....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 895. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 896/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 896): 'Afflictions of nature....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Afflictions of nature....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'People forget where they came from....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 896. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 897/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 897): 'I want nothing more than you to be my pal....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I want nothing more than you to be my pal....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This veryyear....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 897. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 898/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 898): 'The Iranian didn't want the spaghetti, he had a gluten allergy....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Iranian didn't want the spaghetti, he had a gluten allergy....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Racism can't continue for long....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 898. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 899/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 899): 'American credibility is at an all-time low point....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'American credibility is at an all-time low point....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ca'daan stayed quiet to avoid being caught....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 899. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 900/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 900): 'The Duomo is done in a hyper-modern style....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Duomo is done in a hyper-modern style....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I guess we have to get back to hobbies....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 900. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 901/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 901): 'If this comes out, we're all ruined....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If this comes out, we're all ruined....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jane began with confidence....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 901. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 902/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 902): 'Are you staying on campus at LSU or renting an apartment?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are you staying on campus at LSU or renting an apartment?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The bust is made of bronze. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 902. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 903/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 903): 'The lawyers were appealed to restore the loss from their pockets....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The lawyers were appealed to restore the loss from their pockets....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When you return home from the gym, we're gonna get it on....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 903. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 904/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 904): 'Most cannot separate Napoleans horrors and beauty....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most cannot separate Napoleans horrors and beauty....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Anyone could....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 904. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 905/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 905): 'This year's meculun salads are not be enjoyed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This year's meculun salads are not be enjoyed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hamiltons have been the caretakers for 4 generations....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 905. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 906/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 906): 'I yelled into the forest, asking Natalia if she was there....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I yelled into the forest, asking Natalia if she was there....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The cost of doing this is really high....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 906. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 907/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 907): 'Bush was in favor of the Vietnam war and a member of the National Guard. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bush was in favor of the Vietnam war and a member of the National Guard. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is the first time I converse in this series....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 33]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 33, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 907. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 908/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 908): 'Franaois I lived during the 15th to the 16th century....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Franaois I lived during the 15th to the 16th century....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Widespread practices....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 908. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 909/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 909): 'The majority of nationalities only need a passport to enter Macau....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The majority of nationalities only need a passport to enter Macau....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Because social workers will be taking on this responsibility, no more employees will need to be hire...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 909. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 910/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 910): 'They had breakfast together and then went on a walk....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They had breakfast together and then went on a walk....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I understand....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 910. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 911/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 911): 'I want to ponder it a bit more....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I want to ponder it a bit more....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The man didn't seem to mind....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 911. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 912/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 912): 'Donald's new job paid him better than his previous job....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Donald's new job paid him better than his previous job....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Was it because there wasn't enough patients?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 912. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 913/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 913): 'Madrid is just like Brasilia and Washington....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Madrid is just like Brasilia and Washington....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I was obsessed with the thought. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 913. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 914/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 914): 'There are no questions about that US airports are sufficient for the protection of equipment....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are no questions about that US airports are sufficient for the protection of equipment....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'I think the last biography I read was about Churchill's mother....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 914. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 915/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 915): 'We waited a while to have kids until we could afford them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We waited a while to have kids until we could afford them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The portion of the fee that goes to Legal Aid used to be $5...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 915. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 916/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 916): 'Stations in the area make money for accepting it....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stations in the area make money for accepting it....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Charles de Gaulle is also known as l'Etoile...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 916. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 917/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 917): 'The sultan enjoyed a peaceful environment more than war....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The sultan enjoyed a peaceful environment more than war....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are no markets in which to directly observe WTP for these types of commodities in most cases....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 917. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 918/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 918): 'The Olympian gods were much more powerful than any other deity including they Fates....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Olympian gods were much more powerful than any other deity including they Fates....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'El-Wald vandalized the El-Aksa Mosque as a statement against Islam....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 26]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 26, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 918. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 919/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 919): 'The diluted water is discussed in Section 7, Dilution Water....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The diluted water is discussed in Section 7, Dilution Water....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The blade of the long sword scratched his back....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 919. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 920/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 920): 'I have watched Dances With Wolves several times now....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I have watched Dances With Wolves several times now....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's either very dry or very moist and is doing damage to our foundation....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 920. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 921/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 921): 'Jean-Claude Joseph was simply happy to be alive still....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jean-Claude Joseph was simply happy to be alive still....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He said he would plant a lot of things by the fence....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 921. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 922/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 922): 'There are plans for American Home Products to sell ginkgo, saw palmetto, and other natural supplemen...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are plans for American Home Products to sell ginkgo, saw palmetto, and other natural supplemen...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: ' Issuers of financial statements who are inappropriately bending accounting rules should know they c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 31]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 31, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 922. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 923/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 923): 'Existing FGD systems cannot be upgraded in any way, shape or form....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Existing FGD systems cannot be upgraded in any way, shape or form....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A map isn't needed. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 923. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 924/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 924): 'The planning for the merger was extensive. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The planning for the merger was extensive. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They were excited to win....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 924. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 925/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 925): 'The editors use terrible tactics to gain funds. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The editors use terrible tactics to gain funds. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In order to achieve the missions cap of 2.24 million tons, the total must be reduced....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 925. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 926/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 926): 'Do you guys enjoy eating out at fine dining places....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Do you guys enjoy eating out at fine dining places....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'One million dollars in one dollar bills. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 926. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 927/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 927): 'They had tried every idea they had for building the cams....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They had tried every idea they had for building the cams....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Is it false?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 927. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 928/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 928): 'We do own an eighty nine....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'We do own an eighty nine....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was one road....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 29]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 29, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 928. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 929/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 929): 'That's true....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'That's true....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Non-household mail is not included in bill/payment figures if it is not first-class....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 27]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 27, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 929. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 930/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 930): 'I was did not receive any sanctions as a former police officer. ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was did not receive any sanctions as a former police officer. ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The leader stood at the front of the room and was readily apparent. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 930. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 931/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 931): 'The community had no help from the government....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The community had no help from the government....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The PCAOB needs to work together with the SEC....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 931. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 932/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 932): 'The corn was protected during the wind storm....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The corn was protected during the wind storm....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'GSA refused to admit that its outdated service delivery methods needed to be replaced....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 932. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 933/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 933): 'Two year olds aren't able to spit their food out....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two year olds aren't able to spit their food out....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Alsace vineyards are tranquil and beautiful. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 30]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 30, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 933. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 934/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 934): 'The new emperor referred to himself as Jahangir and dutifully ran the affairs of the state....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The new emperor referred to himself as Jahangir and dutifully ran the affairs of the state....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'DOD training makes sure weapon defense systems have good practices....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 28]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 28, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 934. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 935/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 935): 'Self-government for Jamaica came about during the postwar period in 1959 through a series of constit...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Self-government for Jamaica came about during the postwar period in 1959 through a series of constit...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They talk in a conversational manner rather than in an interview manner....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 935. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 936/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 936): 'The Globe took advantage of Michael's situation based on his admitted homosexuality, arrest and park...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Globe took advantage of Michael's situation based on his admitted homosexuality, arrest and park...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Over half of the population are Athenian weekenders....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 23]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 23, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 936. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 937/938. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 937): 'He is one of the best quarterbacks on the team, no doubt....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is one of the best quarterbacks on the team, no doubt....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'New vehicles have different air pollution standards than old vehicles....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 32]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 32, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 937. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 938/938. Batch items: 32\nMLMGenerator.generate: First sentence in batch to be noised (chunk 938): 'He was tolerable....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 32 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was tolerable....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'there is no demand...'\n  MLMGenerator.mlm_infiller: Preparing to pad 32 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([32, 25]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([32, 25, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 32 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 938. Num noised sents from chunk: 32\nMLMGenerator.generate: Finished generate() method. Total sents_output: 60000\nSampling 20000 from 60000 for mnli\nSaved 20000 samples for mnli to /kaggle/working/alignscore_training_data_20k/mnli_20k.jsonl\n\nProcessing dataset: paws\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Constructing paws:   0%|          | 0/49401 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"name":"stdout","text":"Initializing MLM generator for paws_text_b...\nMLMGenerator: Initialized with 49401 sentences. Batch size: 64.\nMLMGenerator.generate: Starting. Corpus size: 49401, Batch size: 64\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"MLM Batch Processing:   0%|          | 0/772 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"565c0c3fe41d456eb43dcad3046ba3da"}},"metadata":{}},{"name":"stdout","text":"MLMGenerator.generate: Processing chunk 1/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 1): 'In October 1560 , he secretly met with the English ambassador , Nicolas Throckmorton , in Paris , an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In October 1560 , he secretly met with the English ambassador , Nicolas Throckmorton , in Paris , an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1975 -- 76 season of the National Basketball Association was the 30th season of the NBA ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 1. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 2/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 2): 'It is covered with a natural vegetation of grassland of less fertile red clay soils , and saltbush s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is covered with a natural vegetation of grassland of less fertile red clay soils , and saltbush s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jonté Buhl ( born April 4 , 1982 ) is a Canadian former professional football cornerback who played ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 2. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 3/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 3): 'Earlier in 209 , Sun Quan married Sun Quan 's younger sister Lady Sun to strengthen the alliance bet...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Earlier in 209 , Sun Quan married Sun Quan 's younger sister Lady Sun to strengthen the alliance bet...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Argentine government remained neutral until the last days of war , but quietly tolerated the ent...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 3. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 4/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 4): 'Frank is buried alongside parents and brother Leyendecker at Woodlawn Cemetery in The Bronx , New Yo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Frank is buried alongside parents and brother Leyendecker at Woodlawn Cemetery in The Bronx , New Yo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Contempo Magazine is a monthly American print and online magazine in McAllen , Texas ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 4. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 5/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 5): 'The main partners of this festival are Parmigiani Fleurier , Manor , Heineken , Vaudoise and UBS ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The main partners of this festival are Parmigiani Fleurier , Manor , Heineken , Vaudoise and UBS ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The NFL awarded Super Bowl XI to Pasadena , California on March 19 , 1975 at the owners ' meetings h...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 5. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 6/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 6): 'The music was composed by Darsan Raman and lyrics was written by Mariamma Philip ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The music was composed by Darsan Raman and lyrics was written by Mariamma Philip ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Searching a specific search tree according to a binary key can be recursively or iteratively program...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 6. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 7/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 7): 'In the summer of 1956 , Mike Barnett took over the role of Frank Lovejoy until the end of the series...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the summer of 1956 , Mike Barnett took over the role of Frank Lovejoy until the end of the series...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This version was published on August 18 , 2016 in North America and on January 5 , 2017 in Europe an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 7. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 8/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 8): 'Glen Sheil was born in Sydney and moved to Queensland at a young age ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Glen Sheil was born in Sydney and moved to Queensland at a young age ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The show was broadcasted simultaneously on Fox8 in Australia , Sky TV in New Zealand and on Channel ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 8. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 9/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 9): 'These ancient rites are still performed in contemporary Sri Lanka , but the preserved songs are rare...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These ancient rites are still performed in contemporary Sri Lanka , but the preserved songs are rare...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After extensive traveling through Asia and a bit of Africa and Europe , the couple settled in New Yo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 9. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 10/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 10): 'His son Ii Naomasa was adopted by Naotora , and became a feared general under Tokugawa Ieyasu who is...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His son Ii Naomasa was adopted by Naotora , and became a feared general under Tokugawa Ieyasu who is...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jorge Osvaldo García recovered successfully , but was not ejected ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 10. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 11/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 11): 'Born in Athens , Greece , he grew up in New York City and then in North Grafton , Massachusetts ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Born in Athens , Greece , he grew up in New York City and then in North Grafton , Massachusetts ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The hall was left Charles Loraine Smith , who took the name Charles Loraine ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 11. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 12/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 12): 'During the LGM , the Laurentide Ice Sheet covered most of northern Alaska , while Beringia connected...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the LGM , the Laurentide Ice Sheet covered most of northern Alaska , while Beringia connected...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2014-15 , Shapiro appeared in the role of Maron 's eccentric neighbor , Marc Maron , in the IFC c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 12. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 13/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 13): 'Hog Island is a center and a camp for the Maine - chapter of the National Audubon Society ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hog Island is a center and a camp for the Maine - chapter of the National Audubon Society ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mackey said that Hayashi is `` sort of '' the original model for Tenchi ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 13. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 14/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 14): 'The River Colnici is a tributary of the River Borcut in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The River Colnici is a tributary of the River Borcut in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He held various positions at Wang Laboratories before joining IBM in 1981 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 14. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 15/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 15): 'Other liberal parties , however , said , along with nationalist groups , that they would boycott the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Other liberal parties , however , said , along with nationalist groups , that they would boycott the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Also the father of Guruzeta , Xabier , was a footballer , as a central defender he mainly represente...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 15. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 16/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 16): 'He moved to Ottawa and settled in Illinois in 1891 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He moved to Ottawa and settled in Illinois in 1891 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The team has played teams like Hawaii , Rutgers , Iowa , Mississippi State , Nebraska , Connecticut ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 16. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 17/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 17): 'The dam is operated by the United States Bureau of Reclamation , which built it , and is owned by th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The dam is operated by the United States Bureau of Reclamation , which built it , and is owned by th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He acquired homes in Mar del Plata , a castle in Buenos Aires and a small hotel in Córdoba ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 17. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 18/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 18): 'Brian Cutillo worked with his MIT classmate , Dr. Alan Gevins , in :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Brian Cutillo worked with his MIT classmate , Dr. Alan Gevins , in :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In July 1962 , the 4364th support squadron was activated in Mountain Home and allocated to the divis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 18. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 19/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 19): 'Several streets are named after him including streets in Ballarat , Melton , Buninyong , Geelong Wes...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Several streets are named after him including streets in Ballarat , Melton , Buninyong , Geelong Wes...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The following players have played a first grade representative match in 2018 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 19. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 20/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 20): 'The host spills incense over the table , then lifts and breaks the bread ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The host spills incense over the table , then lifts and breaks the bread ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has not yet been held since the 2008 event , and there are no plans currently for it to be held a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 20. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 21/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 21): 'Truckee is a state park of Burton Creek State Park , in Placer County , near California ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Truckee is a state park of Burton Creek State Park , in Placer County , near California ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dragon Dragon Wars is a fantasy role-playing videogame developed by Rebecca Heineman and published i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 21. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 22/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 22): 'He fought Wyatt Earp in a bout refereed by a young 21-year-old Mike Donovan on July 4 , 1868 or 1869...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He fought Wyatt Earp in a bout refereed by a young 21-year-old Mike Donovan on July 4 , 1868 or 1869...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the United States , where the show is broadcast , `` Caso Cerrado '' is produced exclusively by T...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 22. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 23/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 23): 'In 2016 , Naver 's Webtoon service has entered the Japanese market as XOY and when Dongman Manhua jo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2016 , Naver 's Webtoon service has entered the Japanese market as XOY and when Dongman Manhua jo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In December 1945 , the Soviets installed Kim as chairman of the North Korean branch of the Korean Co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 23. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 24/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 24): 'Scientists believe that amber was deposited in a flat part of a prehistoric basin in a delta of a ma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scientists believe that amber was deposited in a flat part of a prehistoric basin in a delta of a ma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On December 31 , 2015 , Melvin returned to Purdue University as the defensive line coach for Darrell...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 24. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 25/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 25): 'Major greyhound racing venues include Wentworth Park in Brisbane , Cannington Raceway in Adelaide , ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Major greyhound racing venues include Wentworth Park in Brisbane , Cannington Raceway in Adelaide , ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chad Johnson ( born 1978 ; formerly Chad Ochocinco ) is an American - American - football receiver ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 25. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 26/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 26): 'The Moldova River or Izvorul Giumalăului River is a tributary of the Colbu River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Moldova River or Izvorul Giumalăului River is a tributary of the Colbu River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was an intermediary with the United States Postal Service and was a member of the United States O...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 26. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 27/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 27): 'Sondhi countered that Thaksin was trying to silence the press ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sondhi countered that Thaksin was trying to silence the press ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Grant holds several rows in many categories for Utah , including multiple all-time records , such as...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 27. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 28/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 28): 'The river Pascu is a tributary of the Valea Voenilor river ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The river Pascu is a tributary of the Valea Voenilor river ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The railway station of Tyabb is located on the Stony Point line in Victoria , Australia ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 28. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 29/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 29): 'Mudzuri defeated ZANU-PF - candidate Amos Midzi in the mayoral election in March 2002 by a large mar...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mudzuri defeated ZANU-PF - candidate Amos Midzi in the mayoral election in March 2002 by a large mar...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It surrounds the modern city of Lakhish and the old city of Kiryat Gat ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 29. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 30/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 30): 'A copy of the letter reached Montpellier by Toulouse on April 10 , 1562 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A copy of the letter reached Montpellier by Toulouse on April 10 , 1562 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Other places are Sultanganj in the Bhagalpur and Vaidyanath Jyotirlinga in Deoghar , Jharkhand ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 30. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 31/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 31): 'In round 2 defeated Blair Anthony , and Christina defeated Blake ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In round 2 defeated Blair Anthony , and Christina defeated Blake ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'James Watson and Francis Crick shared the Nobel Prize for Physiology and Medicine with Rosalind Fran...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 31. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 32/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 32): 'Nicholas Monroe and Simon Stadler defeated Mateusz Kowalczyk and Lukáš Rosol at 6 : 4 , 6 : 4 in the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nicholas Monroe and Simon Stadler defeated Mateusz Kowalczyk and Lukáš Rosol at 6 : 4 , 6 : 4 in the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His son , Félix Allard , was a Quebec politician . His daughter Marguerite married Aimé Boucher , a ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 32. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 33/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 33): 'William James was a close friend and correspondent of Pauline Goldmark ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'William James was a close friend and correspondent of Pauline Goldmark ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If he saw two white hats , he could conclude that he was wearing a black hat ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 33. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 34/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 34): 'She sailed over Sydney and arrived on 14 September in Rio de Janeiro ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She sailed over Sydney and arrived on 14 September in Rio de Janeiro ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'InFocus M810 is a smartphone distributed by InFocus and manufactured by Foxconn . It was released on...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 34. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 35/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 35): 'After the death of her first husband , Katharina Dalton remarried Tom Dalton , who passed away in 19...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After the death of her first husband , Katharina Dalton remarried Tom Dalton , who passed away in 19...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In August 2017 , as a member of the Republican Party , Glassman announced an exploratory campaign fo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 35. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 36/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 36): 'La Vegueta is a village in Tinajo , Lanzarote province of western Las Palmas in the Canary Islands ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'La Vegueta is a village in Tinajo , Lanzarote province of western Las Palmas in the Canary Islands ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The CEO of AIG Advisor Group was Erica McGinnis , the interim CEO of the independent company , now c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 36. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 37/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 37): 'She became the founder of the Inner Healing Movement and was author of `` The Healing Light '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She became the founder of the Inner Healing Movement and was author of `` The Healing Light '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is found by western Texas in the United States south to Mexico ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 37. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 38/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 38): 'American Express later established its headquarters in a building at the intersection of Jay Street ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'American Express later established its headquarters in a building at the intersection of Jay Street ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some of the company documents were secured by Ina Jorgensen , the former secretary of Victor Jaques ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 38. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 39/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 39): 'Atari later upgraded the basic design in 1986 with the `` 1040ST '' ( also written `` STF '' ) ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Atari later upgraded the basic design in 1986 with the `` 1040ST '' ( also written `` STF '' ) ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In March 2006 , Kelly Morse replaced Kelly Nestor ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 39. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 40/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 40): 'He was elected from Bhubanesvar in Odisha to Lok Sabha , the lower house of the Indian parliament ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was elected from Bhubanesvar in Odisha to Lok Sabha , the lower house of the Indian parliament ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cedar wood has been exploited over the centuries by the Phoenicians , Persians , Babylonians , Egypt...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 40. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 41/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 41): 'Monica Seles defeated Ruxandra Dragomir , 6 -- 2 , 6 -- 3...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Monica Seles defeated Ruxandra Dragomir , 6 -- 2 , 6 -- 3...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'For example , the National Civic League ( originally the National Municipal League ) promotes effect...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 41. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 42/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 42): 'In 1955 , the United Kingdom , Italy followed in 1964 by Hiroshi Tada and Germany in 1965 from Katsu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1955 , the United Kingdom , Italy followed in 1964 by Hiroshi Tada and Germany in 1965 from Katsu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Red Sox eventually won the ALDS but lost to the Tigers in the American League Championship Serie...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 42. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 43/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 43): 'She previously played for Åland United , FC Honka and HJK of the Finnish Naisten Liiga , as well as ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She previously played for Åland United , FC Honka and HJK of the Finnish Naisten Liiga , as well as ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She explores contemporary music as well as the traditional repertoire ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 43. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 44/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 44): 'The journal is published by Brill and is indexed in Academic Search Complete and Scopus ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The journal is published by Brill and is indexed in Academic Search Complete and Scopus ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Spartanburg is included in the Greenville Metropolitan Statistical Area , which is also included in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 44. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 45/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 45): 'Many of Friend 's descendants now live in Garrett County , and the Friend Family Association 's head...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Many of Friend 's descendants now live in Garrett County , and the Friend Family Association 's head...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are two important special cases : ( i ) a simple closed chain , and ( ii ) a simple open chain...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 45. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 46/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 46): 'Or should they be used further to int and that version dereferenced instead ?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Or should they be used further to int and that version dereferenced instead ?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They finished the season 10 -- 2 OVC and 7 -- 0 in total to win the conference championship ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 46. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 47/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 47): 'On this penultimate New 52 alternate Earth , the Martian Manhunter is a member of Superman 's repres...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On this penultimate New 52 alternate Earth , the Martian Manhunter is a member of Superman 's repres...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sasol operates commercial gasification plants in Secunda , Mpumalanga and Sasolburg in South Africa ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 47. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 48/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 48): 'In 2010 Miller released his third album `` Derek Miller with Double Trouble '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2010 Miller released his third album `` Derek Miller with Double Trouble '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Büyükorhan is a town and district of Turkey in the Marmara region of Bursa Province ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 48. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 49/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 49): 'Irvine Park in Orange , California is a park that became Orange County 's first regional park in 189...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Irvine Park in Orange , California is a park that became Orange County 's first regional park in 189...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Michel Deville ( 1915 -- 1984 ) was a French actress who performed in 1980 under director Françoise ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 49. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 50/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 50): 'Kathy Lloyd was born in Carrickfergus , Northern Ireland and grew up in Netherton , Bootle where she...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kathy Lloyd was born in Carrickfergus , Northern Ireland and grew up in Netherton , Bootle where she...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Antrim County is a civil township of Helena Township in the U.S. state of Michigan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 50. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 51/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 51): 'Cobian Backup was a free , donation-supported backup software for Microsoft Windows . It is written ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cobian Backup was a free , donation-supported backup software for Microsoft Windows . It is written ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sergio Galdós and Luis David Martínez won the title and defeated Julio Peralta and Horacio Zeballos ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 51. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 52/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 52): 'He composed other songs and wrote orchestrations for larger choral works preserved in Australian lib...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He composed other songs and wrote orchestrations for larger choral works preserved in Australian lib...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stävlö or Stäflö is a castle in Sweden of Kalmar Municipality ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 52. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 53/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 53): 'These middle to large butterflies have black and yellow wings with dark brown spots and a red edge ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These middle to large butterflies have black and yellow wings with dark brown spots and a red edge ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Decker played the swimsuit model Rachel , while Peter Jacobson Alan , her nebbish husband , played ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 53. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 54/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 54): 'Neustadtl an der Donau is a town in the district of Lower Austria in Amstetten in Austria ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neustadtl an der Donau is a town in the district of Lower Austria in Amstetten in Austria ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Guru ( Kay Kay Menon ) and Ganpat ( Dilip Prabhavalkar ) are small-time car thieves ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 54. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 55/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 55): 'At Victory Road , they introduced their new manager , the Voodoo Queen , Roxxi Laveaux , to embarras...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At Victory Road , they introduced their new manager , the Voodoo Queen , Roxxi Laveaux , to embarras...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adults often remove paper from old nests and recycle it to use for new ones ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 55. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 56/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 56): 'The mouth may be apical or ventral , with more or less prominent associated polykinetides ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The mouth may be apical or ventral , with more or less prominent associated polykinetides ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '11 ( BA11 ) is one of the most important military airbases in Algarve , northwest of Beja , north of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 56. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 57/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 57): 'Jack Evans won his second Cruiserweight track by winning 5-man ladder match against Sugi San , Teddy...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jack Evans won his second Cruiserweight track by winning 5-man ladder match against Sugi San , Teddy...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1942 , Breton collaborated with the artist Wifredo Lam on the publication of Breton 's poem `` Fa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 57. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 58/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 58): 'Instead , AC3 enables producers to choose the input level over a wide range by representing a measur...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Instead , AC3 enables producers to choose the input level over a wide range by representing a measur...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Björn Borg defeated Guillermo Vilas , 6 -- 1 , 6 - - 1 , 6 - 3...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 58. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 59/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 59): 'According to the Iranian state news agency PressTV , a survey by The Doha Debates showed that 55 % o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'According to the Iranian state news agency PressTV , a survey by The Doha Debates showed that 55 % o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` The Timber '' was released in North America on February 27 , 2015 , Well Go USA Entertainment was...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 59. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 60/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 60): 'Utah claims a lead of 60 -- 34 -- 4 , while BYU Utah leads claims 57 -- 31 -- 4 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Utah claims a lead of 60 -- 34 -- 4 , while BYU Utah leads claims 57 -- 31 -- 4 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was also a mechanic on Spencer 's team when Freddie Spencer won the 500cc World title in 1985 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 60. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 61/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 61): 'Barrai is a village in the Berasia district of Madhya Pradesh , India . It is situated in Bhopal Teh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Barrai is a village in the Berasia district of Madhya Pradesh , India . It is situated in Bhopal Teh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As in 1955 , the National League beat the American League , this time 6 -- 3 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 61. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 62/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 62): 'Between 1926 and 1927 Nikolai Myaskovsky wrote his symphony No . 9 in e - Moll op . 28 , which was d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Between 1926 and 1927 Nikolai Myaskovsky wrote his symphony No . 9 in e - Moll op . 28 , which was d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These enzymes are capable of performing enantioselective oxidations of prochiral substrates ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 62. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 63/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 63): 'And procedural knowledge ( steps to take and what decision when to make ) ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'And procedural knowledge ( steps to take and what decision when to make ) ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2001 , two new large sports facilities were opened : the Alerus Center and the Ralph Engelstad Ar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 63. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 64/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 64): 'On June 30 , 2016 , Infante agreed to a Minor League Deal with the Atlanta Braves , which was releas...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On June 30 , 2016 , Infante agreed to a Minor League Deal with the Atlanta Braves , which was releas...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Syrian Haitians are Syrians of Haitian descent , or a Haitian with Syrian citizenship . A small Syri...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 64. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 65/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 65): 'The complex of the Trabzon World Trade Center is close to Trabzon Airport ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The complex of the Trabzon World Trade Center is close to Trabzon Airport ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sofia Ulrika Liljegren , married surname `` Uttini '' , ( 1765 -- December 6 , 1795 ) , was a Finnis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 65. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 66/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 66): 'Woodridge station is served by all stops Beenleigh line services from Beenleigh to Bowen Hills and F...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Woodridge station is served by all stops Beenleigh line services from Beenleigh to Bowen Hills and F...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In all authors , the verb tends to be main , more often in final clauses than in subordinate clauses...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 66. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 67/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 67): 'Immediately after he and Whitehead published PM he wrote his 1912 `` The Problems of Philosophy '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Immediately after he and Whitehead published PM he wrote his 1912 `` The Problems of Philosophy '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1892 , Langdon Hubbard died , and William H. Bennett took over the mill ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 67. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 68/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 68): 'In 235 BCE , after an attack on the State of Zhao , troops from the states of Qin and Wei united to ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 235 BCE , after an attack on the State of Zhao , troops from the states of Qin and Wei united to ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In January 2017 , the average gross content of a Croatian worker was 5,895 HRK per month and the ave...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 68. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 69/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 69): 'He was twice married to Annie Kowalkowski and Elizabeth Dettlaff , and had three daughters ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was twice married to Annie Kowalkowski and Elizabeth Dettlaff , and had three daughters ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When comparable rates of flow can be maintained , the results are high ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 69. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 70/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 70): 'She and character Leo Fuchs were the parents of the famous Polish-American actor Yakov Fuchs ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She and character Leo Fuchs were the parents of the famous Polish-American actor Yakov Fuchs ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The River Sterminos is a tributary of the River Voievodu in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 70. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 71/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 71): 'When he finished his career in Poland , he went to Canada to sign the Toronto Falcons of the Nationa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When he finished his career in Poland , he went to Canada to sign the Toronto Falcons of the Nationa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During the second year , students will have more advanced lectures in clinical science and spend tim...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 71. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 72/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 72): 'In 1993 , at Kuban State University , he graduated as a philologist and teacher of the same language...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1993 , at Kuban State University , he graduated as a philologist and teacher of the same language...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ferguson remained in Liberia , Monrovia in 1916 until his death in 1968 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 72. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 73/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 73): 'The band added bassist Duane Cowan , who had recently moved from Japan to Los Angeles ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The band added bassist Duane Cowan , who had recently moved from Japan to Los Angeles ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sam Sam Raimi and Rob Tapert produced together with Campbell the remake of `` The Evil Dead '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 73. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 74/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 74): 'North Bolivian Quechua is a dialect of the Southern Quechua language , spoken in northern Bolivia on...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'North Bolivian Quechua is a dialect of the Southern Quechua language , spoken in northern Bolivia on...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The tournament requires an import or player for each team ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 74. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 75/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 75): 'The Sonata was performed at the Aeolian Hall in London in 1919 by Landon Ronald with Billy Reed at t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Sonata was performed at the Aeolian Hall in London in 1919 by Landon Ronald with Billy Reed at t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The lying 10 meter air rifle Mixed SH1 event at the summer - Paralympics 2008 took place on Septembe...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 75. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 76/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 76): 'This is a list of the second football transfers for the `` Malaysian transfer window 2013 '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This is a list of the second football transfers for the `` Malaysian transfer window 2013 '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hallets Cove terminal is located in Astoria between the Astoria Houses public housing project an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 76. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 77/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 77): 'They played 3rd place in the 2015 China Amateur Football League and won the ascent to the 2016 China...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They played 3rd place in the 2015 China Amateur Football League and won the ascent to the 2016 China...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Because there was a lack of evidence to prove that Jim was not killed in self-defense , Johnson was ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 77. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 78/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 78): 'The reserve contains an interesting flora , outstanding lichen and moss communities and a wealth of ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The reserve contains an interesting flora , outstanding lichen and moss communities and a wealth of ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the past , we remember the famous Maran , another Indian intelligence officer of DHEIVA THAAI fro...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 78. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 79/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 79): 'Peter has also appeared in Coronation Street as Brian Packham ,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Peter has also appeared in Coronation Street as Brian Packham ,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In one of his works ( epic poem about Nikola Jurišić ) , Skanderbeg was a subordinate theme ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 79. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 80/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 80): 'Akshuat dendropark ( Russian : Акшуатский дендропарк ) is a natural monument ( protected area of Uly...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Akshuat dendropark ( Russian : Акшуатский дендропарк ) is a natural monument ( protected area of Uly...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ernie Earnshaw of Love Song took over on drums and Guy Watson on the bass in the new group ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 80. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 81/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 81): 'The ditch was cut out of rock and about 5 m deep and 4 to 5 m wide ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The ditch was cut out of rock and about 5 m deep and 4 to 5 m wide ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The members of the United Methodist Church gather in Laichingen , while the Catholics are assigned t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 81. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 82/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 82): 'Are `` A '' and `` B '' algebraic rooms , the Banach - tensor product of `` A '' and `` B '' means t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Are `` A '' and `` B '' algebraic rooms , the Banach - tensor product of `` A '' and `` B '' means t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The river Sântinica is a tributary of the river Dâmboviţa in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 82. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 83/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 83): 'Hamilton is often considered the best driver of his generation , and widely regarded as one of the g...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hamilton is often considered the best driver of his generation , and widely regarded as one of the g...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Lorenzo Giuntini married Susannah Louisa Barnett in Frome , Somerset on 11 September 1866 and got 8 ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 83. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 84/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 84): 'It is followed by a route from Hub Industrial Area to Orangi Town and from Nazimabad and North Karac...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is followed by a route from Hub Industrial Area to Orangi Town and from Nazimabad and North Karac...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Independent Pam Johns won a by-election in Holsworthy with a majority of 66 votes after the death of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 84. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 85/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 85): 'He also asked Krishna Reddy to come from Chennai to Hyderabad to help him in the business ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He also asked Krishna Reddy to come from Chennai to Hyderabad to help him in the business ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His recorded work with that orchestra was represented on RCA Victor Red Seal , EMI , Vox Records , a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 85. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 86/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 86): 'The government of Punjab , a provincial government in the federal structure of Pakistan , is based i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government of Punjab , a provincial government in the federal structure of Pakistan , is based i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kuroń , Modzelewski and Michnik were detained again and a majority of the `` Komandosi '' members we...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 86. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 87/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 87): 'Aditya is carried to a tiny island where he helps the magical locals defeat the giant Jhamunda ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Aditya is carried to a tiny island where he helps the magical locals defeat the giant Jhamunda ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The LFAC was officially established in 2005 and the first teams were Belfry Valls , Cornellà Bocs , ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 87. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 88/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 88): 'It was originally developed by groups of Chinese scholars in the Soviet Union and used by Chinese an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was originally developed by groups of Chinese scholars in the Soviet Union and used by Chinese an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was this title that Lancelot Brenton inherited ( his elder brother , John Jervis Brenton , died i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 88. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 89/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 89): 'In the original IBM - PC , an NMI was detected when a parity error in the system memory was reported...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the original IBM - PC , an NMI was detected when a parity error in the system memory was reported...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is bounded by Caoayan and the municipalities Vigan City , San Vicente , Santa Catalina and Sto ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 89. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 90/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 90): 'In the 9th minute , Xabi Alonso opened the leadership , followed by Lewandowski four minutes later ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the 9th minute , Xabi Alonso opened the leadership , followed by Lewandowski four minutes later ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In January 2006 , Juliette and her husband Douglas Blaikie opened the doors of the Urban Dance Centr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 90. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 91/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 91): 'She grew up in Upper Palatinate ( Cham , Köln ) and since 1991 has lived in Germany ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She grew up in Upper Palatinate ( Cham , Köln ) and since 1991 has lived in Germany ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'All songs written and composed by Nick Feldman , except as noted . Note that Jack Hues was credited ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 91. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 92/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 92): 'Russ has killed at least 74 people and injured another 726 people in the provinces of Hainan , Guang...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Russ has killed at least 74 people and injured another 726 people in the provinces of Hainan , Guang...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Djamila Amrane became Danièle Minne after marriage in 1964 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 92. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 93/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 93): 'In these he already shows an adaptation to the Roman style , especially that of Michelangelo , whose...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In these he already shows an adaptation to the Roman style , especially that of Michelangelo , whose...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'To the north , the region continues from Virginia into southeastern Maryland and central Pennsylvani...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 93. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 94/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 94): 'It was created on July 18th , 1914 for the pharmacist and businessman William Horlick , brother of J...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was created on July 18th , 1914 for the pharmacist and businessman William Horlick , brother of J...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was elected to the Lok Sabha , the lower house of Indian Parliament from Odisha in Bhubaneswar ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 94. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 95/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 95): 'Erandio is a town and municipality located in the province of Biscay , in the autonomous community o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Erandio is a town and municipality located in the province of Biscay , in the autonomous community o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a collection of these works in the Deutsche Bank Brooklyn , as well as the Piergoi Flat Fil...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 95. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 96/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 96): 'In the 1970s , Suzuki was one of the first buyers of Woolrich Mode in America , and in 2006 he becam...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the 1970s , Suzuki was one of the first buyers of Woolrich Mode in America , and in 2006 he becam...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Riemann Zeta function is defined by the absolutely convergent infinite row for complex `` s '' w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 96. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 97/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 97): 'Other musicians are Simone Mularoni on guitars , Nik Mazzucconi on bass and Francesco Jovino ( Prima...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Other musicians are Simone Mularoni on guitars , Nik Mazzucconi on bass and Francesco Jovino ( Prima...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Azem Galica ( 1889 - 1924 ) , commonly known as Azem Bejta , was an Albanian nationalist and rebel w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 97. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 98/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 98): 'The museum has an interactive centre with displays on prairie history and ecology as well as an inte...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The museum has an interactive centre with displays on prairie history and ecology as well as an inte...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1960 , Glenville directed also Robert Anderson on Broadway in `` Silent Night , lone night '' by ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 98. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 99/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 99): 'Later , a CPI ( Parliamentary Inquiry Commission ) was installed in the City Council of the City of ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Later , a CPI ( Parliamentary Inquiry Commission ) was installed in the City Council of the City of ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cirja # 7 passed 2 TD Scramble and also achieved 2 TD one to Florin Oltean # 85 and one to Dan Crasn...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 99. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 100/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 100): 'Khandwa was known as East Nimar until recently ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Khandwa was known as East Nimar until recently ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Astors settled in Germany , first appearing in North America in the 18th century with John Jacob...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 100. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 101/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 101): 'Meyer 's law is often used to relate hardness values based on the fact that if the weight is quarter...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Meyer 's law is often used to relate hardness values based on the fact that if the weight is quarter...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'VirusProtectPro is a commercial malware program that claims to be a rogue anti-spyware , when in fac...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 101. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 102/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 102): 'Music runs in his blood as he inherited this art from his grandfather Ustad Banne Khan , who is hims...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Music runs in his blood as he inherited this art from his grandfather Ustad Banne Khan , who is hims...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On 30 June , Florida Governor Farris Bryant announced the creation of a biracial committee to restor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 102. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 103/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 103): 'Uigorlersuaq Island ( old spelling : `` Uigordlerssuaq '' ) is an uninhabited island in the Qaasuits...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Uigorlersuaq Island ( old spelling : `` Uigordlerssuaq '' ) is an uninhabited island in the Qaasuits...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He has a Portuguese mother and a Norwegian father and has spent part of his childhood in Lisbon ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 103. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 104/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 104): 'In 1992 , Tungamirai was replaced by Perence Shiri as an air commander ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1992 , Tungamirai was replaced by Perence Shiri as an air commander ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jolly 's parents settled down from Rajshahi in West Bengal , her older sister , Sharmili Ahmed , is ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 104. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 105/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 105): 'In October 2006 , CryptoLogic changed its name to Media Corporation and sold Casino.co.uk in August ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In October 2006 , CryptoLogic changed its name to Media Corporation and sold Casino.co.uk in August ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Benzoylfentanyl was banned in September 2017 in Finland , in October 2017 in Sweden ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 105. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 106/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 106): 'After the constitution of the United States was ratified in 1789 , the Bill of Rights of the United ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After the constitution of the United States was ratified in 1789 , the Bill of Rights of the United ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He wrote all six tracks and learned his parts with only three days practice before the album was rec...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 106. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 107/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 107): 'During the First World War , Cary fought with a Nigerian regiment fighting in the German colony of C...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the First World War , Cary fought with a Nigerian regiment fighting in the German colony of C...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Winner effects were shown when established non-experienced chicks were placed against dominant chick...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 107. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 108/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 108): 'In the single , King 6 -- 1 against Ann Haydon-Jones , 4 -- 0 against Virginia Wade and 1 -- 1 again...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the single , King 6 -- 1 against Ann Haydon-Jones , 4 -- 0 against Virginia Wade and 1 -- 1 again...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was the first sculler to ever win the Diamond Challenge Sculls at Henley Royal Regatta and also t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 108. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 109/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 109): 'One of the triassic rocks used in Cardiff is '' Radyr Stone `` , a Freestone which , as the name sug...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of the triassic rocks used in Cardiff is '' Radyr Stone `` , a Freestone which , as the name sug...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Albion may refer to the following places in the US state of New York :...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 109. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 110/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 110): 'Asbestos substitutes now include ceramic , carbon , metal , and aramid fibers , such as Twaron or Ke...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Asbestos substitutes now include ceramic , carbon , metal , and aramid fibers , such as Twaron or Ke...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Joy was born in Montreal . He received a bachelor 's degree from Harvard University in 1945 and a ma...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 110. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 111/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 111): 'The company is one of the oldest Brazilian companies still in activity , founded by German brothers ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The company is one of the oldest Brazilian companies still in activity , founded by German brothers ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Motes also meets Enoch Emery , a blind man who seems to parallel himself , and they follow the young...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 111. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 112/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 112): 'Under King Louis Phillippe a `` gendarmerie of Africa '' was re-established for service in Algeria a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Under King Louis Phillippe a `` gendarmerie of Africa '' was re-established for service in Algeria a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In November , the Royals CF Coco Crisp acquired the Boston Red Sox in return for RP Ramón Ramírez ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 112. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 113/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 113): 'Dehu Road Railway Station is an important suburban railway station of Pune Suburban Railway ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dehu Road Railway Station is an important suburban railway station of Pune Suburban Railway ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Baxter Aviation operated flights between Vancouver Harbour Water Aerodrome and Vancouver Internation...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 113. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 114/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 114): 'The 1953 Labour Party deputy leadership election took place on 29 October 1953 , after incumbent dep...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 1953 Labour Party deputy leadership election took place on 29 October 1953 , after incumbent dep...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He performed at the festivals of Edinburgh , Marlboro , Tanglewood , Vienna , Holland , Oregon Bach ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 114. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 115/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 115): 'The Sanghar ( are a partially Hindu Sanghar also `` Jamotar '' Gujarat and Mumbai Maharashtra India ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Sanghar ( are a partially Hindu Sanghar also `` Jamotar '' Gujarat and Mumbai Maharashtra India ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Simpson is also part of the civil parish of Simpson and Ashland , which now includes Ashland and Wes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 115. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 116/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 116): 'In 2011 , Sean Lock took over from John Sergeant as the moderator of the Dave - Comedy - Show `` Arg...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2011 , Sean Lock took over from John Sergeant as the moderator of the Dave - Comedy - Show `` Arg...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Early industries were built in Hughesville to serve the farmers and citizens of the eastern Lycoming...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 116. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 117/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 117): 'This series was written by Jim Starlin and Ron Lim , Ian Laughlin , Al Milgrom , Jack Morelli and Ch...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This series was written by Jim Starlin and Ron Lim , Ian Laughlin , Al Milgrom , Jack Morelli and Ch...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kabir Suman , recorded a number of albums between 1992 and 1999 under the name Suman Chattopaddhyay ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 117. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 118/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 118): 'Grown up in Mount Duneed , just outside the coastal town of Torquay in Victoria , Taylor grew up ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Grown up in Mount Duneed , just outside the coastal town of Torquay in Victoria , Taylor grew up ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The city of Santa Fe has designated the Oklahoma City station as a location for intermodal transit f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 118. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 119/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 119): 'Castlebrae Community High School is a secondary school located in the area of Greendykes in Edinburg...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Castlebrae Community High School is a secondary school located in the area of Greendykes in Edinburg...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Taobao is a Chinese online shopping website similar to eBay , Amazon and Rakuten , which is operated...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 119. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 120/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 120): 'Both the pseudostem and the scape are often covered with dark brown to reddish violet spots ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Both the pseudostem and the scape are often covered with dark brown to reddish violet spots ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Aguiari described it as '' a Zen action up in the middle of traffic , but alone with a beautiful sta...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 120. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 121/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 121): 'In a game dominated by offensive and special teams struggles , UCF would be plagued by Arkansas Stat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In a game dominated by offensive and special teams struggles , UCF would be plagued by Arkansas Stat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indentured people were numerically important mostly in the region from New Jersey north to Virginia ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 121. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 122/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 122): 'Marc Bergevin ( born August 11 , 1965 ) is a former ice hockey player and Canadian professional play...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Marc Bergevin ( born August 11 , 1965 ) is a former ice hockey player and Canadian professional play...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Old Polish language is the period in the history of the Polish language between the 9th and 16th cen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 122. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 123/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 123): 'In a discussion of 1946 unconsidered literature , Edward Wagenknecht referred to `` Hope Mirrlees ''...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In a discussion of 1946 unconsidered literature , Edward Wagenknecht referred to `` Hope Mirrlees ''...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In this way it was possible to literally combine dozens of separate tracks and include them in finis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 123. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 124/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 124): 'The species was first formally described in 1805 by the English botanist James Edward Smith in `` An...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The species was first formally described in 1805 by the English botanist James Edward Smith in `` An...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Holly told `` Inside Soap '' Powles does not like when she is in her parents ' bad books , so she tr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 124. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 125/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 125): 'Ricardo Cano defeated with Balázs Taróczy 6 -- 7 , 2 -- 6 , 6 -- 1 , 6 - 3 , 6 - 4 -...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ricardo Cano defeated with Balázs Taróczy 6 -- 7 , 2 -- 6 , 6 -- 1 , 6 - 3 , 6 - 4 -...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If `` f '' has room `` H '' in Hardy , then it is a factorization...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 125. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 126/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 126): 'The completed action plan , published on 3 March 2006 , will be placed by ministerial members of the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The completed action plan , published on 3 March 2006 , will be placed by ministerial members of the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Belvelly is situated at the shortest crossing point between the Great Island and the neighbouring Fo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 126. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 127/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 127): 'The codice _ 2 branch gets updated daily , and the codice _ 3 branch is updated for every 6 months ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The codice _ 2 branch gets updated daily , and the codice _ 3 branch is updated for every 6 months ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stone Cold Steve Austin appeared and hit Triple H , Patterson , Brisco , Shane and Vince with a chai...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 127. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 128/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 128): 'On April 2 , 2011 Ivy Vujic married Jenkins ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On April 2 , 2011 Ivy Vujic married Jenkins ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It arrived in Australia in August 2006 and was introduced in early 2007 in New Zealand ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 128. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 129/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 129): 'The new cable company announced that they would charge $ 10 for their service and $ 5 per month to c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The new cable company announced that they would charge $ 10 for their service and $ 5 per month to c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1365 Brome died in Avignon on business , with Thomas Maldon . He resigned his post in 1379 , and ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 129. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 130/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 130): 'Lauretta was married to Johnny Dorelli , the couple had a son , Gianluca Guidi actor ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lauretta was married to Johnny Dorelli , the couple had a son , Gianluca Guidi actor ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'But as he tries to recover it , Arrietty and Peagreen burn the will , determined to save the house f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 130. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 131/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 131): 'Sammamish lake enters the Issaquah Creek in the park ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sammamish lake enters the Issaquah Creek in the park ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He played for TuTo Turku and Klagenfurter AC , played a season in Austria for TPS and four playing t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 131. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 132/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 132): 'The Olt River or Pârâul Sec is a tributary of the Seaca River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Olt River or Pârâul Sec is a tributary of the Seaca River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was accepted that the whole name of the zone was simply `` Güímar '' as the aboriginal menceyato ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 132. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 133/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 133): 'William William Armstrong was born on 14 November 1819 in Lincoln County ( Tennessee ) as son of Joh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'William William Armstrong was born on 14 November 1819 in Lincoln County ( Tennessee ) as son of Joh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dundas Public School is a primary school located in western Sydney , New South Wales , in the suburb...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 133. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 134/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 134): '`` FIFA Manager 12 '' is a football manager simulation video game developed by Bright Future GmbH an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` FIFA Manager 12 '' is a football manager simulation video game developed by Bright Future GmbH an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Trolley Service was proposed in 1892 from Baltimore to Ellicott City , approved on April 20 , 18...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 134. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 135/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 135): 'The Greek census of 1951 included a total of 127 Muslim Albanian chams in Epirus ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Greek census of 1951 included a total of 127 Muslim Albanian chams in Epirus ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kaypakkaya also took the position that there is a Kurdish question involved with the national people...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 135. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 136/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 136): 'Vancouver had also 4.9 , Calgary had 5.6 , Winnipeg had 5.6 , Toronto had 7.9 , Montreal had 11.2 an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Vancouver had also 4.9 , Calgary had 5.6 , Winnipeg had 5.6 , Toronto had 7.9 , Montreal had 11.2 an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Directed by Go Nagai , his first film as a director and his third film as solo director ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 136. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 137/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 137): 'Sergio Galdós and Luis David Martínez won the title , defeating Julio Peralta and Horacio Zeballos 6...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sergio Galdós and Luis David Martínez won the title , defeating Julio Peralta and Horacio Zeballos 6...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was written by Michael Kaplan and directed by John Sanborn ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 137. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 138/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 138): 'If the resistance loop becomes bad , this shows a planar compliance of the lung ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If the resistance loop becomes bad , this shows a planar compliance of the lung ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was considered a liberal Spaniard , who practiced the liberal principles for enforcing liberal an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 138. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 139/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 139): 'Critics of HRW include the national governments that it has examined , NGO monitor , the media and i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Critics of HRW include the national governments that it has examined , NGO monitor , the media and i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During the 2004 election crisis , Kushnaryov returned for the creation of an independent southeaster...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 139. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 140/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 140): 'Once upon a time there was a Hallaton railway station on the line between Market Harborough and Nott...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Once upon a time there was a Hallaton railway station on the line between Market Harborough and Nott...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1923 Jacob Blaustein and his son Louis Blaustein sold a half interest in their American Oil Compa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 140. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 141/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 141): 'It is 2 km west of Agios Stefanos and 20 km northeast of Athens city centre ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is 2 km west of Agios Stefanos and 20 km northeast of Athens city centre ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Escher was born the son of the geologist and mineralogist Berend George Escher and the Swiss Emma Br...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 141. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 142/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 142): 'The private foundation operates under independent law with foundation capital of the governments of ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The private foundation operates under independent law with foundation capital of the governments of ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was claimed that the church was founded by St. Birinus in the 12th century , and parts of the chu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 142. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 143/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 143): 'Mirigama Divisional Secretariat is a Divisional Secretariat of Gampaha District , of Western Provinc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mirigama Divisional Secretariat is a Divisional Secretariat of Gampaha District , of Western Provinc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Zlagna River is a tributary of the River Timiş in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 143. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 144/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 144): 'From 1516 , the Mundy family had the manor of Allestree until Francis Noel Clarke Mundy sold it to T...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From 1516 , the Mundy family had the manor of Allestree until Francis Noel Clarke Mundy sold it to T...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The river Suceviţa is a tributary of the Voievodeasa River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 144. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 145/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 145): 'The event was held on grass courts outdoors and played from 27 September to 5 October 1887 at the Ph...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The event was held on grass courts outdoors and played from 27 September to 5 October 1887 at the Ph...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Much of the film was shot in New Brunswick ; Gladstone , New Jersey and the Palisades Park home of t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 145. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 146/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 146): 'Layla was born in London , the daughter of a Brazilian mother and an Irish and Scottish father of En...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Layla was born in London , the daughter of a Brazilian mother and an Irish and Scottish father of En...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Awwad was born in Salfit . He graduated from the Arab College in Jerusalem in 1947 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 146. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 147/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 147): 'His son Tokugawa Ieyasu was adopted by Naotora , and became a feared general under Ii Naomasa , who ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His son Tokugawa Ieyasu was adopted by Naotora , and became a feared general under Ii Naomasa , who ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The predominant sector , with a secondary occupation of the building , employs 33 % of the workers ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 147. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 148/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 148): 'Union County is included in the Spartanburg , SC Metropolitan Statistical Area , which is also inclu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Union County is included in the Spartanburg , SC Metropolitan Statistical Area , which is also inclu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the age of 14 Dunkerton withdrew from Herefordshire to London ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 148. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 149/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 149): 'Bland left Philadelphia one week later and arrived in Valparaíso on October 29 , 1818 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bland left Philadelphia one week later and arrived in Valparaíso on October 29 , 1818 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Emil Jónsson replaced Guðmundur Ívarsson Guðmundsson as Minister for Foreign Affairs ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 149. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 150/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 150): 'It was premiered at the Borneo Eco Film Festival on September 30 , 2012 , for the first time it was ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was premiered at the Borneo Eco Film Festival on September 30 , 2012 , for the first time it was ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the 2015 federal election , after Tosi was sidelined by the regional party , Gidoni was elected t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 150. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 151/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 151): 'Hamper is a practicing carpenter in Oxford and a member of the Oxford Advent Christian Church , an e...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hamper is a practicing carpenter in Oxford and a member of the Oxford Advent Christian Church , an e...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She married Antonio Bourque and lived in Moncton first before returning to the Villa Providence in S...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 151. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 152/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 152): 'The triluminary is a triangular Minbari device ( one of three such devices ) with a small chip in th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The triluminary is a triangular Minbari device ( one of three such devices ) with a small chip in th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has also been studied as an experimental treatment of the bone disorder osteogenesis imperfecta ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 152. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 153/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 153): 'French Island is a very small uninhabited island located northwest of Barrallier Island in Victoria ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'French Island is a very small uninhabited island located northwest of Barrallier Island in Victoria ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Audra Keller defeated Katerina Maleeva with 7 -- 6 , 6 - 2 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 153. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 154/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 154): 'In the past , we remember the famous Maran , another Indian intelligence officer of DHEIVA THAAI fro...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the past , we remember the famous Maran , another Indian intelligence officer of DHEIVA THAAI fro...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'To find the parameter λ that maximizes the probability function for the Poisson population , we can ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 154. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 155/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 155): 'Arabic Supplement is a Unicode block that encodes old letter variants used for writing non-Arabic la...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Arabic Supplement is a Unicode block that encodes old letter variants used for writing non-Arabic la...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Syed Muhammad Bin Syed Abdullah was a descendant of the seventh imam , Musa Kadhim ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 155. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 156/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 156): 'Parr himself has performed two acoustic versions ( `` other '' and `` unplugged '' ) for the film ``...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Parr himself has performed two acoustic versions ( `` other '' and `` unplugged '' ) for the film ``...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brayshaw began his career and ended his with Claremont Football Club in the West Australian Football...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 156. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 157/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 157): 'Trained in classical singing and contemporary music , she performs regularly in concerts ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Trained in classical singing and contemporary music , she performs regularly in concerts ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jacques Dicker ( 1879 , Khotyn , Bessarabia -- November 17 , 1942 , Geneva ) was a Swiss socialist-b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 157. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 158/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 158): 'Botelloides chrysalidus is a species of sea snail , a marine gastropod mollusk in the family Trochid...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Botelloides chrysalidus is a species of sea snail , a marine gastropod mollusk in the family Trochid...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Charles Gowan was born in Wisconsin in 1849 or 1850 , and migrated to New York early in life ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 158. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 159/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 159): 'The music of the movie was written by Vijaya Narasimha and texts for the soundtrack composed by Chi ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The music of the movie was written by Vijaya Narasimha and texts for the soundtrack composed by Chi ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2003 the excavation works began on the western hill , on the eastern hill in 2006 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 159. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 160/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 160): 'More special buildings had important names and their signs were larger and decorative ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More special buildings had important names and their signs were larger and decorative ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 2nd BCT of the 28th Infantry Division focused in Ramadi on controlling the main roads and protec...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 160. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 161/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 161): 'The resulting explosion also destroyed the core vehicle , and the second SRB then initiated its own ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The resulting explosion also destroyed the core vehicle , and the second SRB then initiated its own ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Xavier Moyano is supported by Wenstone Amps , DS Pickups , MST Pedals , Kikemol Straps and Raúl Vare...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 161. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 162/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 162): 'Agrippa then sent Polemon I of Pontus to remove Scribonius and take over the throne himself ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Agrippa then sent Polemon I of Pontus to remove Scribonius and take over the throne himself ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He survived the Soviet leadership transition from Khrushchev to Brezhnev in 1964 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 162. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 163/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 163): 'The river Valea Mică is a tributary of the Valea Arsurii River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The river Valea Mică is a tributary of the Valea Arsurii River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Local artists have created a unique oasis at the Azalea Community Park with the Water Conservation G...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 163. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 164/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 164): 'He was born in 1799 in Kingston , Toronto , and grew up in York ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was born in 1799 in Kingston , Toronto , and grew up in York ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Among their children were Thomas Weaver , a member of the Assembly , and Richard Weaver , a member o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 164. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 165/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 165): 'The LDS 's official missionary work did not start in Utah until John Murdock and Charles W. Wandell ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The LDS 's official missionary work did not start in Utah until John Murdock and Charles W. Wandell ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1901 , Emma Goldman met Winn in Chicago , and found in her a lasting ally ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 165. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 166/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 166): 'Xylophanes porcus ( porcus sphinx ) is a moth of the Sphingidae family that is found from Florida so...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Xylophanes porcus ( porcus sphinx ) is a moth of the Sphingidae family that is found from Florida so...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ryszard Kaczorowski received symbols from Lech Wałęsa of the pre-war presidency ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 166. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 167/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 167): 'If the socket was too loose or the ink was too thin , the pen would leak or smear the ink ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If the socket was too loose or the ink was too thin , the pen would leak or smear the ink ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2013 , the Bank ’ s domestic branches in Austria were sold to Anadi Financial Holdings and rename...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 167. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 168/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 168): 'It featured Paul Newman as Wiggen and Albert Salmi as catcher Bruce Pearson ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It featured Paul Newman as Wiggen and Albert Salmi as catcher Bruce Pearson ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Later in the war , Talaat Pasha served as the Minister of the Navy in the CUP cabinet of Mahmud Pash...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 168. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 169/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 169): 'The individual Japanese DVD releases for the first series also had special limited editions ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The individual Japanese DVD releases for the first series also had special limited editions ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2011 , the literacy rate of West Bengal village was 55.53 % , compared to 76.26 % of the Sattari ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 169. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 170/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 170): 'Effective July 1 , 2000 , the village of Iron River and the city of Stambaugh were consolidated with...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Effective July 1 , 2000 , the village of Iron River and the city of Stambaugh were consolidated with...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He retired to Italy , where he fled for two years and returned to his private life ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 170. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 171/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 171): 'Fritz August Hoenig ( 1848 -- 1902 ) was a military officer and a German writer ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fritz August Hoenig ( 1848 -- 1902 ) was a military officer and a German writer ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Yarkand River is a river in the Xinjiang Uyghur Autonomous Region of western China ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 171. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 172/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 172): 'Daphne from Rey , Jenny Shimizu , Catherine Opie , Sheree Rose , Ron Athey , Vaginal Davis , Bob Fla...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Daphne from Rey , Jenny Shimizu , Catherine Opie , Sheree Rose , Ron Athey , Vaginal Davis , Bob Fla...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Banach - Mackey - topology and the weak Arens - space topology are relatively rarely used ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 172. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 173/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 173): 'Hussain secured 432 votes and his only rival Wajihuddin Ahmed received 77 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hussain secured 432 votes and his only rival Wajihuddin Ahmed received 77 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` It was recorded before it was written '' , Paul Paul Webb explained ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 173. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 174/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 174): 'He also won numerous children ’ s books and illustrated five times the Levstik Award for his illustr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He also won numerous children ’ s books and illustrated five times the Levstik Award for his illustr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kimilili constituency is in academic rivalry with the friends school Kamusinga ( also of Kimilili ) ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 174. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 175/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 175): 'It is southwest of Burlington , Vermont , south of Plattsburgh , south of Montreal , Quebec , and no...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is southwest of Burlington , Vermont , south of Plattsburgh , south of Montreal , Quebec , and no...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Phalombe is a town approx . 40 km northeast of Mulanje in southern Malawi ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 175. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 176/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 176): 'Aphonopelma catalina is a species of spiders in the family Theraphosidae , found in United States ( ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Aphonopelma catalina is a species of spiders in the family Theraphosidae , found in United States ( ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Franz Ferdinand 's last words , as reported by Count Harrach , `` Sophie , Sophie !...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 176. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 177/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 177): 'Thorleif Paus served as Norwegian consul-general in Sweden , owned two factories and became owner of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thorleif Paus served as Norwegian consul-general in Sweden , owned two factories and became owner of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Robertson is a railway station in Robertson , New South Wales , on the railway line Unanderra - Moss...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 177. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 178/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 178): 'The Mundy family owned the Manor of Allestree from 1516 until Francis Noel Clarke Mundy sold it to T...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Mundy family owned the Manor of Allestree from 1516 until Francis Noel Clarke Mundy sold it to T...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Roblin Centre has a building energy management system and is the biggest C-2000 * *...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 178. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 179/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 179): 'The northern Cavefish or the northern blindfish , `` Amblyopsis spelaea '' , is found in caves throu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The northern Cavefish or the northern blindfish , `` Amblyopsis spelaea '' , is found in caves throu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He considers C. S. Lewis to be a negative influence and has accused Lewis of pointing out in his boo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 179. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 180/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 180): 'After leaving Sheffield , Mary was taken to Wingfield Manor in Derbyshire by her new gaoler , Sir Ra...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After leaving Sheffield , Mary was taken to Wingfield Manor in Derbyshire by her new gaoler , Sir Ra...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After moving to Norway in 1988 , as a political refugee , he began writing novels about the leftist ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 180. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 181/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 181): 'Annie Homan ( 1944 ) shows the street as '' Livermore Road `` , according to the historian Bowerman ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Annie Homan ( 1944 ) shows the street as '' Livermore Road `` , according to the historian Bowerman ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alfonso Enrique Ponce Martínez ( born December 8 , 1971 in Chiva , Valencia , Spain ) is also known ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 181. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 182/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 182): 'Naa Bolinaa Saaka is a Ghanaian diplomat and a member of the New Patriotic Party of Burkina Faso , w...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Naa Bolinaa Saaka is a Ghanaian diplomat and a member of the New Patriotic Party of Burkina Faso , w...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The flag of Sri Lanka was adopted in 1987 for the western province of the Western Province ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 182. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 183/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 183): 'He was a scholar in Classical Literature , Theology and Metaphysical sciences ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was a scholar in Classical Literature , Theology and Metaphysical sciences ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The boy , called Davis or Davison , went from Lima to England on board the Archduke Charles '' , and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 183. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 184/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 184): 'A DVD was released on March 5 , 2012 performed `` Dudley Taft live at Highway 99 , '' called August ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A DVD was released on March 5 , 2012 performed `` Dudley Taft live at Highway 99 , '' called August ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bhojpuri is the local language and the official language is Hindi ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 184. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 185/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 185): 'Governor Flanagin took the state archives and first moved to Arkadelphia and then to Washington at H...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Governor Flanagin took the state archives and first moved to Arkadelphia and then to Washington at H...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The American mission in Stockholm , Sweden , also agreed to the embarkation of 15 `` prominent natio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 185. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 186/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 186): 'The temple is renovated and was maintained around 2005 by the Archaeological Survey of India , Bhuba...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The temple is renovated and was maintained around 2005 by the Archaeological Survey of India , Bhuba...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Played 4 Won 1 ( Melbourne ) , 3 lost ( Canberra , Gold Coast , Penrith )...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 186. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 187/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 187): 'Vera Nell Washington married Brian Earl Cain in 1968 . He has a son , Cain , and a grandson , Brian ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Vera Nell Washington married Brian Earl Cain in 1968 . He has a son , Cain , and a grandson , Brian ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Szekelys ( Hungarian : `` Székely '' ) are Hungarian people from the historical region of Transylvan...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 187. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 188/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 188): 'Gesine Schwan celebrated her second wedding with the long-time companion Peter Eigen in Berlin in 20...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gesine Schwan celebrated her second wedding with the long-time companion Peter Eigen in Berlin in 20...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It begins near the western extremities of the Central Oregon Coast Range and flows south to the ocea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 188. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 189/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 189): 'Dillon took over military duties for noble officers of the old army at a very difficult time ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dillon took over military duties for noble officers of the old army at a very difficult time ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Arnold Lang ( June 18 , 1855 - November 30 , 1914 ) was a Swiss naturalist , a comparative anatomist...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 189. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 190/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 190): 'The following is a table of the nominative case of the respectful person in many languages , includi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The following is a table of the nominative case of the respectful person in many languages , includi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The executive branch of government consisted of the president , the prime minister , a number of fed...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 190. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 191/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 191): 'The continuing popularity of this mobile suit in Japan has led Bandai to develop a 1.5m high model v...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The continuing popularity of this mobile suit in Japan has led Bandai to develop a 1.5m high model v...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The two main water systems are the Esmeraldas River in the North and the Guayas in the South ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 191. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 192/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 192): 'When Josh wakes up , he finds himself at home in Omaha , Nebraska , at Lonnie ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When Josh wakes up , he finds himself at home in Omaha , Nebraska , at Lonnie ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The director was John Guedel and its producer was Harry Kronman ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 192. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 193/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 193): 'Rich sources of food , as long as they are evaluated as profitable , are advertised by the scouts wh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Rich sources of food , as long as they are evaluated as profitable , are advertised by the scouts wh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This image was rejected because it was seen as too sexual and was replaced by the image of the coupl...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 193. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 194/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 194): 'With the help of Chuck Aber and Lady Aberlin , Daniel finally faces his fears ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With the help of Chuck Aber and Lady Aberlin , Daniel finally faces his fears ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The show , which was previously held in the city of Auckland , moved to Christchurch at the Hagley P...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 194. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 195/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 195): 'CXorf26 is strongly evolutionary found , with conservation in batrachytrium dendrobatidis conserved ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'CXorf26 is strongly evolutionary found , with conservation in batrachytrium dendrobatidis conserved ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The film was written and produced by AR Murugadoss and produced by P. Madhan under the banner of Esc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 195. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 196/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 196): 'The second typology ( according to the nature of the underlying amount ) is determined by the needs ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The second typology ( according to the nature of the underlying amount ) is determined by the needs ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chris Anderson took over the succession of Wayne Bennett as a team coach in March 1999 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 196. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 197/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 197): 'Lazkao is a city and municipality in the region of Gipuzkoa in the province of Goierri , in the Basq...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lazkao is a city and municipality in the region of Gipuzkoa in the province of Goierri , in the Basq...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1901 , the critic Jean Lahor ( aka Henri Cazalis ) listed the workshop as one of the best produce...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 197. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 198/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 198): 'The species name refers to the two adjacent oval processes on the latero-distal plate ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The species name refers to the two adjacent oval processes on the latero-distal plate ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Dick Smith Wilderness is a wilderness area in the mountains of eastern Ventura County , United S...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 198. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 199/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 199): 'Ann Grossman defeated Stephanie Rehe 6 -- 1 , 6 -- 1 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ann Grossman defeated Stephanie Rehe 6 -- 1 , 6 -- 1 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This would fade the element but stop when the effect is completed 80 % ( with an opacity of 20 % ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 199. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 200/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 200): 'Music was composed by K. Raghavan and the text was written by Swathi Thirunal and Edasseri ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Music was composed by K. Raghavan and the text was written by Swathi Thirunal and Edasseri ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sonia tries to build bridges with Pauline but an argument ends with Sonia slapping Pauline ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 200. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 201/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 201): 'Baron Ambroży Mikołaj Skarżyński of Bończa ( 1787 -- 1868 ) was a Polish officer , Chevalier de l'Em...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Baron Ambroży Mikołaj Skarżyński of Bończa ( 1787 -- 1868 ) was a Polish officer , Chevalier de l'Em...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The river Scridoasa is a tributary of the Botizu River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 201. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 202/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 202): 'By then , three-quarters of the slaves had been liberated in Maryland , and a high proportion of sla...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'By then , three-quarters of the slaves had been liberated in Maryland , and a high proportion of sla...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The name `` rigid cohomology '' comes from its relation to rigid analytical spaces ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 202. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 203/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 203): 'The most important energy parts are in thermal and kinetic losses , the other two are negligible ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The most important energy parts are in thermal and kinetic losses , the other two are negligible ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She was born in Cork , daughter of Richard Hartland and Mary Walsh , was the niece of the artist Hen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 203. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 204/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 204): 'The constant power density is determined by the product of the continuous torque density and the con...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The constant power density is determined by the product of the continuous torque density and the con...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After receiving a second Nobel Prize with her husband Pierre in 1903 , Marie Curie won a joint Nobel...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 204. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 205/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 205): 'The museum consists of a main information room , a restoration hangar , the new Texas Flying Legend ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The museum consists of a main information room , a restoration hangar , the new Texas Flying Legend ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Administratively this bay belongs to the Chukotka Autonomous Okrug of the Russian Federation ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 205. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 206/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 206): 'Immanuel Dornfeld was a spiritual father and main initiator of this wine school ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Immanuel Dornfeld was a spiritual father and main initiator of this wine school ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The album was released on May 26 , 2007 by Furious in the United Kingdom and 7 Spin Music in the US ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 206. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 207/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 207): 'Following a merger with Southern Airways in 1979 , North Central Republic Airlines , which merged in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Following a merger with Southern Airways in 1979 , North Central Republic Airlines , which merged in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Skepi is an extinct Dutch-spoken creole language of Guyana , based in the region of Essequibo ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 207. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 208/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 208): 'Hypodactylus is a genus of frogs which are found in Northern South America ( from central - Ecuador ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hypodactylus is a genus of frogs which are found in Northern South America ( from central - Ecuador ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The most other common countries of birth were China 14.7 % , Nepal 7.0 % , India 5.1 % , Philippines...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 208. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 209/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 209): 'The movie begins with the arrival of Seelabathi ( Kavya Madhavan ) and her mother Sumangala ( Urmila...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The movie begins with the arrival of Seelabathi ( Kavya Madhavan ) and her mother Sumangala ( Urmila...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The social consequences of criminal conviction are not the same as the collateral consequences of co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 209. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 210/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 210): 'Richard Owen ( 1810 -- 1890 ) , Robert Owen 's youngest son , came to New Harmony in 1828 and initia...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Richard Owen ( 1810 -- 1890 ) , Robert Owen 's youngest son , came to New Harmony in 1828 and initia...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hugo Santana Páez ( born September 5 , 1967 ) is a former football manager and Mexican player ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 210. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 211/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 211): 'Initially , Owens was unimpressed , but Rich liked it , and they took it up on February 12 , 1963 wi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Initially , Owens was unimpressed , but Rich liked it , and they took it up on February 12 , 1963 wi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Following the Allied victory in May 1945 , the Soviets occupied Central and Western Europe , while s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 211. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 212/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 212): 'Doyle said the Maryland -- Pennsylvania Mason -- Dixon line is exactly :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Doyle said the Maryland -- Pennsylvania Mason -- Dixon line is exactly :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Skookum cat was developed from intersections between Munchkins and LaPerms with the aim of creat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 212. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 213/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 213): 'Ceravolo studied with the New School for Social Research at Kenneth Koch Schrift ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ceravolo studied with the New School for Social Research at Kenneth Koch Schrift ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The song was written by Melanie C and was already recorded in 1999 by Bryan Adams ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 213. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 214/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 214): 'He was also suspected of having bludgeoned to death a young dancer , Anya Sosoyeva , as well as havi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was also suspected of having bludgeoned to death a young dancer , Anya Sosoyeva , as well as havi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As a lieutenant , Armand Alexander de Castagny was at the French siege of Algiers in 1832 . He later...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 214. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 215/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 215): 'During the French and Spanish withdrawals , Admiral Sir James Saumarez welcomed the `` Superb '' and...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the French and Spanish withdrawals , Admiral Sir James Saumarez welcomed the `` Superb '' and...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Losses for the day were killed 16 and 98 wounded , while the KPA 9 killed captive and estimated 50 a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 215. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 216/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 216): 'During this time , he had a new gimmick , Rockabilly , and adopted a short-lived feud with `` The Re...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During this time , he had a new gimmick , Rockabilly , and adopted a short-lived feud with `` The Re...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1960 , Glenville directed also Robert Anderson on the Broadway in `` Silent Night , Lonely Night ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 216. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 217/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 217): 'In 2006 , Venezuelan Carlos Pena gradually took over as Co-Lead singer , although Beny continued to ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2006 , Venezuelan Carlos Pena gradually took over as Co-Lead singer , although Beny continued to ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In October 2015 , Bennett resigned from the Knesset to allow Shuli Mualem to take over his seat ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 217. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 218/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 218): 'The album was produced by Billy Harvey and contributed by Rafael Gayol and the Tosca String Quartet ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The album was produced by Billy Harvey and contributed by Rafael Gayol and the Tosca String Quartet ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jones was born in Vicksburg , Mississippi and grew up in Morton , Mississippi ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 218. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 219/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 219): 'The Route 7 is divided into 20 sections in Buenos Aires , 2 in Santa Fe , 5 in Córdoba , 13 in San L...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Route 7 is divided into 20 sections in Buenos Aires , 2 in Santa Fe , 5 in Córdoba , 13 in San L...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He later planted the movement in London , and then in Brooklyn , New York , and Monticello , New Yor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 219. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 220/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 220): 'A road was built by the government from Ruatahuna to Rotorua in 1901 to end the isolation of Tūhoe b...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A road was built by the government from Ruatahuna to Rotorua in 1901 to end the isolation of Tūhoe b...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In October 1923 , Spencer began renting Henry Lamb 's studio in Hampstead , where he worked on `` Th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 220. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 221/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 221): 'He became a prestigious canon , a regular poet in the Latin language , under the name of Santolius V...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He became a prestigious canon , a regular poet in the Latin language , under the name of Santolius V...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A common suffix is-aga , which is a nominaliser : it forms nouns from verbs ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 221. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 222/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 222): 'His first wife was Alice Silverthorne of the U.S. , whom he met in Paris in May 1921 and married in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His first wife was Alice Silverthorne of the U.S. , whom he met in Paris in May 1921 and married in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is located to the north of New Hempstead , east of Harriman State Park , north of Monsey and west...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 222. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 223/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 223): 'The popular French singers Coralie Clément and Benjamin Biolay , as well as football player hopeful ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The popular French singers Coralie Clément and Benjamin Biolay , as well as football player hopeful ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He retired to Italy where he escaped and returned to private life for two years ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 223. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 224/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 224): 'History attracted widespread attention from the mainstream - media and social media ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'History attracted widespread attention from the mainstream - media and social media ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` CQ Politics '' rated this race as ' Tossup ' . `` The Cook Political Report '' considered it ' Le...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 224. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 225/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 225): 'He is the second freshman senator to be appointed to the Senate Finance Committee and he was a membe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is the second freshman senator to be appointed to the Senate Finance Committee and he was a membe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the meantime , Mikka was confronted by his former crew : Nick , Vector , Sib , and Pup ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 225. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 226/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 226): 'The Ibirapuera Park is located in this subprefecture , as well as the main campus of Federal Univers...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Ibirapuera Park is located in this subprefecture , as well as the main campus of Federal Univers...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The season of 1912-13 was the sixth season of Manchester United in the Football League and 21st in t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 226. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 227/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 227): 'The traditional pronunciation survives in academic and general English vocabulary :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The traditional pronunciation survives in academic and general English vocabulary :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was an atheist in early life , but transformed into a believer in the later stages ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 227. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 228/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 228): 'Jauharabad Railway Station is located in the district Khushab , Punjab Pakistan JAUHARABAD railway i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jauharabad Railway Station is located in the district Khushab , Punjab Pakistan JAUHARABAD railway i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Her father , Mitchell Melich , served in the Utah State Senate and was unsuccessful in 1964 for the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 228. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 229/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 229): 'Talagang Tehsil , is a subdivision ( tehsil ) of Chakwal District in the Punjab province of Pakistan...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Talagang Tehsil , is a subdivision ( tehsil ) of Chakwal District in the Punjab province of Pakistan...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Carlitos and Norma are still together and so are Micky and Justa ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 229. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 230/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 230): 'He has acquired houses in Mar del Plata , a castle in Córdoba and a small hotel in Buenos Aires ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He has acquired houses in Mar del Plata , a castle in Córdoba and a small hotel in Buenos Aires ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1935 Chico State Wildcats football team represented Chico State College during the 1935 college ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 230. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 231/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 231): 'This was more common in urban Australia , but has been common in regional Australia and southern Aus...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This was more common in urban Australia , but has been common in regional Australia and southern Aus...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is survived by his children , Samantha Coppola of Brooklyn and Jason Coppola of Bogota , and thre...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 231. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 232/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 232): 'The large surface of black is shaded with blue first and then with green ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The large surface of black is shaded with blue first and then with green ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In Sweden and in Mexico , he had to compose with a superior status compared to the other S2000 drive...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 232. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 233/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 233): 'Sumner Slichter was the brother of geophysicist Louis B. Slichter , father of physicist Charles Penc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sumner Slichter was the brother of geophysicist Louis B. Slichter , father of physicist Charles Penc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The `` World Atlas of Language Structures '' has a geographical map including 400 languages and chap...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 233. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 234/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 234): 'She spent the first six years of her childhood in Manila before moving to Angeles City ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She spent the first six years of her childhood in Manila before moving to Angeles City ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pennypacker , born in Southampton , New York , moved shortly after the turn of the twentieth century...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 234. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 235/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 235): 'The series is published in Japan by Shogakukan and in the USA by VIZ Media in English ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The series is published in Japan by Shogakukan and in the USA by VIZ Media in English ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'From there , through a minimally developed series of swamps and ponds , it flows south into the vall...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 235. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 236/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 236): 'Season 2012 -- 13 he spent in Israeli Basketball Super League with Bnei Herzliya ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Season 2012 -- 13 he spent in Israeli Basketball Super League with Bnei Herzliya ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Moulthrop began experimenting with the hypertext theory in the 1980s and has since written several a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 236. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 237/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 237): 'He died in Brussels ( Ixelles ) on August 15 , 1950 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He died in Brussels ( Ixelles ) on August 15 , 1950 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Juan Ramón Jiménez was born on 23 December 1881 in Huelva , near Moguer in Andalusia ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 237. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 238/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 238): 'The series was created by Marklen Kennedy and is co-developed by Richard Grieco ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The series was created by Marklen Kennedy and is co-developed by Richard Grieco ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Zhuge Liang recommended Jiang Wan as his successor and Fei Yi as Jiang Wan 's successor ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 238. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 239/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 239): 'Oliver Knussen studied composition with John Lambert between 1963 and 1969 and also received inspira...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Oliver Knussen studied composition with John Lambert between 1963 and 1969 and also received inspira...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At Wimbledon , Janković was the fourth seed , but lost in the third round to the surprise eventual f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 239. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 240/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 240): 'Her husband continued to England and died in Europe in 1804 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Her husband continued to England and died in Europe in 1804 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Each line has three points , so the Hesse configuration includes the notation 912 in the language of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 240. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 241/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 241): 'The printed version appears under a Latin title , with a Latin subtitle ( `` edita per consules civi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The printed version appears under a Latin title , with a Latin subtitle ( `` edita per consules civi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The name Edith has four name days : May 14 in Estonia , October 31 in Sweden , July 5 in Latvia , an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 241. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 242/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 242): 'Theoretically , TS can be measured for numerical targets such as balls and cylinders , but is usuall...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Theoretically , TS can be measured for numerical targets such as balls and cylinders , but is usuall...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1927 Colgate University football team represented Colgate in the 1927 college football season ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 242. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 243/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 243): 'Also , use the codice 6 attribute to mark the elements codice 13 as non-translatable ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Also , use the codice 6 attribute to mark the elements codice 13 as non-translatable ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A short biography , and brief summaries of Brodsky 's longer fiction and critical reception can be f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 243. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 244/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 244): 'Neighboring communities are Libertyville , Mundelein , Round Lake Beach , Hainesville , Third Lake ,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neighboring communities are Libertyville , Mundelein , Round Lake Beach , Hainesville , Third Lake ,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adam w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 244. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 245/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 245): 'His son , Herbie Matthews , later won a Brownlow medal and his grandson of the same name was also pl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His son , Herbie Matthews , later won a Brownlow medal and his grandson of the same name was also pl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Konstantin Airich ( born 4 November 1978 ) is a Kazakh-born German heavyweight boxer born in Astana ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 245. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 246/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 246): 'He is mentioned twice in James Hinton 's novel `` Moonchild '' , the first mention being mistakenly ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is mentioned twice in James Hinton 's novel `` Moonchild '' , the first mention being mistakenly ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Jieţ is a tributary of the Slivei River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 246. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 247/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 247): 'Mateusz Kowalczyk and Lukáš Rosol defeated Nicholas Monroe and Simon Stadler with 6 -- 4 , 6 -- 4 in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mateusz Kowalczyk and Lukáš Rosol defeated Nicholas Monroe and Simon Stadler with 6 -- 4 , 6 -- 4 in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ice hockey at the Canada Winter Games 2011 was held at Halifax Metro Centre and Halifax Forum in Hal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 247. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 248/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 248): 'Honey bees have three castes : drones , workers , and queens . Drones are female , while workers and...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Honey bees have three castes : drones , workers , and queens . Drones are female , while workers and...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Washington Boulevard of Arlington County replaced the line between Bluemont Junction Trail and B...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 248. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 249/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 249): 'I 've created Francis Bacon figures in a Sidney Nolan landscape with stunts inspired by Jean Cocteau...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I 've created Francis Bacon figures in a Sidney Nolan landscape with stunts inspired by Jean Cocteau...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Between 1693 and 1717 he worked as a teacher in Tielt , Bruges ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 249. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 250/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 250): 'Sean is killed on their wedding day , before the ceremony takes place , and Centaine goes to Michael...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sean is killed on their wedding day , before the ceremony takes place , and Centaine goes to Michael...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fairfax Eagles defeated Fight 20-12 Philadelphia ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 250. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 251/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 251): 'In 1954 , the company participated in Gafsa in Tunisia then interved to the war in Algeria ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1954 , the company participated in Gafsa in Tunisia then interved to the war in Algeria ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When Andrew Alexander left the cyclops works , the Alexander - family of Bath moved to Sheffield and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 251. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 252/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 252): 'From Interstate 5 to Fifth Street in Canyonville , the section overlaps OR 99 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From Interstate 5 to Fifth Street in Canyonville , the section overlaps OR 99 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The screenplay by Clive Egleton is based on Leigh Vance 's novel `` Seven Days to a Killing '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 252. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 253/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 253): 'The specials include Pixar 's executive producer `` 20th Anniversary Special '' for ABC and Lucasfil...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The specials include Pixar 's executive producer `` 20th Anniversary Special '' for ABC and Lucasfil...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The museum has an interpretative centre with exhibits on prairie history and ecology , as well as an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 253. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 254/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 254): 'Her mother was a shepherd ’ s blood of the tribe and her father was the owner of a full station , wh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Her mother was a shepherd ’ s blood of the tribe and her father was the owner of a full station , wh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She talks to Jen 's parents and speculates that Jess may have come back to take the earrings ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 254. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 255/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 255): 'For many problems it is more convenient to work with D and free charges than with E and the total ch...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'For many problems it is more convenient to work with D and free charges than with E and the total ch...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Guido Crepax is known for publishing the original edition of `` Codex Seraphinianus '' and some Ricc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 255. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 256/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 256): 'On November 10 , 2015 , ATP editor Josh Meiseles confirmed the official list of 8 players on the ATP...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On November 10 , 2015 , ATP editor Josh Meiseles confirmed the official list of 8 players on the ATP...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He started his career as a photojournalist , but soon distinguished himself also as an industrial an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 256. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 257/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 257): 'He was the second born son of Gil Aires and wife Leonor Rodrigues ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was the second born son of Gil Aires and wife Leonor Rodrigues ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She was born on January 30 , 1912 as the Jewish daughter of banker Maurice Wertheim and his first wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 257. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 258/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 258): 'Designed by Jess Hobbs , Rebecca Anders and PK ( Peter Kimelman ) , it was built by a team of 300 ov...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Designed by Jess Hobbs , Rebecca Anders and PK ( Peter Kimelman ) , it was built by a team of 300 ov...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is available in areas like Ballymun , Finglas , Cabra , Phibsboro and Castleknock ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 258. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 259/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 259): 'Tony and Len Goodman appear along with Mary Murphy in an infomercial for the Core Rhythms workout sy...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tony and Len Goodman appear along with Mary Murphy in an infomercial for the Core Rhythms workout sy...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The NFL awarded Super Bowl XI to Pasadena , California on March 19 , 1975 at the owners ' meetings h...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 259. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 260/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 260): 'Sheffield Wednesday signed Evans from Huddersfield Town on a free transfer on 12 July 2002 as backup...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sheffield Wednesday signed Evans from Huddersfield Town on a free transfer on 12 July 2002 as backup...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Baseball Bugs '' was directed by Friz Freleng and written by Michael Maltese ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 260. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 261/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 261): 'It was owned locally by Walter Stiles ' Albert M. Cadwell ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was owned locally by Walter Stiles ' Albert M. Cadwell ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At Wimbledon Janković was the fourth seed , but in the third round lost to the surprise finalist Mar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 261. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 262/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 262): 'Patalpur is a village in the Bhopal district of Madhya Pradesh , India . It is located in the Berasi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Patalpur is a village in the Bhopal district of Madhya Pradesh , India . It is located in the Berasi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In August 2011 , Matt Mark asked the show to leave what he did ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 262. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 263/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 263): 'I 've created Sidney Nolan figures in a Francis Bacon landscape , inspired with stunts by Jean Cocte...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I 've created Sidney Nolan figures in a Francis Bacon landscape , inspired with stunts by Jean Cocte...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Squatter Linux Jacox from Clarkston built the first house , a Shanty , in New York in 1830 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 263. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 264/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 264): 'He has a son ( vintage 2000 ) from a previous relationship with TV presenter Birgit Schrowange , who...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He has a son ( vintage 2000 ) from a previous relationship with TV presenter Birgit Schrowange , who...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1985 , Mammootty won the Special Mention Kerala State Film Award and secured the Filmfare Award f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 264. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 265/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 265): 'These whole cays gave the northwestern bank , known as Placer de los Roques , their name in Spanish ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These whole cays gave the northwestern bank , known as Placer de los Roques , their name in Spanish ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The spacecraft is the second application of the `` Flexbus '' platform from Astrium , the first was ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 265. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 266/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 266): 'The Swiss Federal Assembly and the Swiss Federal Council recommended that the initiative should be r...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Swiss Federal Assembly and the Swiss Federal Council recommended that the initiative should be r...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In June 2005 Auzentech , which provided the X - Mystique Consumer sound card with Dolby Digital Live...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 266. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 267/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 267): 'Born in Nanhui , he attended engineering school in Nanjing and spent a year at the University of Cal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Born in Nanhui , he attended engineering school in Nanjing and spent a year at the University of Cal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He has two careers - Tricks , the first against the Edmonton Oilers and the second against the Vanco...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 267. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 268/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 268): 'These names were chosen to correspond to their international counterparts in the rough chess and not...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These names were chosen to correspond to their international counterparts in the rough chess and not...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Andre Agassi defeated Alex Corretja 2 -- 6 , 6 -- 2 , 6 -- 3...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 268. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 269/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 269): 'Ranjib Biswal is married to Anita Mohanty , an NRI from London , United Kingdom...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ranjib Biswal is married to Anita Mohanty , an NRI from London , United Kingdom...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jürgen Zopp won the title after defeating Tommy Robredo in the final with 6 : 3 , 6 : 2 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 269. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 270/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 270): 'In the first round of the presidential election in 2012 , David Sanakoyev received 42.5 % of the vot...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the first round of the presidential election in 2012 , David Sanakoyev received 42.5 % of the vot...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brahamdagh Bugti was born in 1982 , the son of Akbar Bugti , Rehan Khan Bugti , and died a short tim...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 270. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 271/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 271): 'John Scott won Australia 's first sailing medal at the 1956 Olympic Games in Melbourne when he and R...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'John Scott won Australia 's first sailing medal at the 1956 Olympic Games in Melbourne when he and R...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She became one of the most important patients of Sigmund Freud and was a psychoanalyst herself for a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 271. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 272/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 272): 'Born in Frederick Dallas Cairns in London , England , UK , he died in Melbourne , Australia ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Born in Frederick Dallas Cairns in London , England , UK , he died in Melbourne , Australia ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Babasaheb Ambedkar International Airport is owned by Mihan India Private Limited ( MIPL ) and is...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 272. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 273/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 273): 'The Sanghar ( are a partly Hindu sanghar also called `` JAMOTAR '' Gujarat and mumbai maharashtra In...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Sanghar ( are a partly Hindu sanghar also called `` JAMOTAR '' Gujarat and mumbai maharashtra In...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'St. Mary Lake is a lake located on Vancouver Island south of Cameron Lake ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 35]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 35, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 273. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 274/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 274): 'RK is the cathode resistor and rtot is the external combination of RP ( parallel resistor ) and rloa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'RK is the cathode resistor and rtot is the external combination of RP ( parallel resistor ) and rloa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'However , John refused to hand Hainaut over to Margaret ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 274. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 275/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 275): 'On January 16 , 2009 , Hollins was traded with DeSagana Diop in exchange for Matt Carroll to Dallas ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On January 16 , 2009 , Hollins was traded with DeSagana Diop in exchange for Matt Carroll to Dallas ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Vigilant '' was usually inactive , while the British occupied New York City , but she sailed to P...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 275. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 276/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 276): 'Sheikh Russell ( born 6 June 1990 ) is a Bangladeshi footballer who plays as a Midfielder , Defender...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sheikh Russell ( born 6 June 1990 ) is a Bangladeshi footballer who plays as a Midfielder , Defender...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He studied at Davis Studio in Sydney and at Julian Ashton Art School in Melbourne ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 276. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 277/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 277): 'Peter Maag ( Ernst Peter Johannes Maag ) ( 10 May 1919 - 16 April 2001 ) was a Swiss conductor ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Peter Maag ( Ernst Peter Johannes Maag ) ( 10 May 1919 - 16 April 2001 ) was a Swiss conductor ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are direct trains from Kolkata to Agra , most of them driving through Agra Fort Railway Statio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 277. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 278/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 278): 'Careful study of actual pieces will show that many G-found rifles had features marked on K-marked ri...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Careful study of actual pieces will show that many G-found rifles had features marked on K-marked ri...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In November 1957 the Federal Party merged with the United Rhodesia Party to form the United Federal ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 278. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 279/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 279): 'Guillermo Cañas won against Juan Carlos Ferrero in the final with 7 : 6 , 6 : 2 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Guillermo Cañas won against Juan Carlos Ferrero in the final with 7 : 6 , 6 : 2 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When the city was created , these sectors were also divided :...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 279. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 280/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 280): 'Cranoe is a civil village and small municipality in the district of Harborough of Leicestershire , E...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cranoe is a civil village and small municipality in the district of Harborough of Leicestershire , E...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'David Ferrer won the title , defeating Steve Johnson in the final , 4 -- 6 , 6 -- 4 , 7 -- 5 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 280. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 281/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 281): 'Regiment Highveld was formed in Middelburg on the 1 January 1960 , it also stationed a rear HQ in th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Regiment Highveld was formed in Middelburg on the 1 January 1960 , it also stationed a rear HQ in th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A virtual instrument is a kind of synthetic instrument that is defined purely by software side ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 281. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 282/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 282): 'The northern slope of the Obshchy Syrt is covered by deciduous forests , while the southern slope to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The northern slope of the Obshchy Syrt is covered by deciduous forests , while the southern slope to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Designed by Peter Kimelman and PK ( Jess Hobbs , Rebecca Anders ) , it was built by a crew of 300 ov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 282. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 283/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 283): 'The house was purchased by Sir George Dewhurst of Dunira in 1858 , who sold it on to David Dundas of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The house was purchased by Sir George Dewhurst of Dunira in 1858 , who sold it on to David Dundas of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Abner was indignant at the rebuke , and immediately opened negotiations with David , who welcomed hi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 283. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 284/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 284): 'On 1 January 1960 , the Highveld regiment was founded in Nelspruit , which also stationed a Rear HQ ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 1 January 1960 , the Highveld regiment was founded in Nelspruit , which also stationed a Rear HQ ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Highland Park is the location of the former character 's main home in CBS drama `` The Good Wife '' ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 284. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 285/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 285): 'The river Suceviţa is a tributary of the Rusca River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The river Suceviţa is a tributary of the Rusca River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'While at Wunderman , Espuelas worked on the American Express , General Foods Gevalia and Weight Watc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 285. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 286/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 286): 'On the day of their wedding , Michael Michael is killed before the ceremony takes place , and Centai...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On the day of their wedding , Michael Michael is killed before the ceremony takes place , and Centai...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On 2 April 2011 , Jenkins married Ivy Vujic ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 286. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 287/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 287): 'At King of the Ring 1994 , Fatu and Crush failed to win the WWF Tag Team Championship from The Heads...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At King of the Ring 1994 , Fatu and Crush failed to win the WWF Tag Team Championship from The Heads...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On February 28 , 2018 GTT Communications announced the acquisition of Interoute for $ 2.3 Billion...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 287. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 288/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 288): 'Neuqua Valley High School , along with three elementary schools and 19 middle schools from this dist...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neuqua Valley High School , along with three elementary schools and 19 middle schools from this dist...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Berkeley edition was published in February 1985 , the second printing was in June 1985 , and the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 288. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 289/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 289): 'This marine species was found from Monterey Bay , California , USA , to Bristol Bay , Bering Sea ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This marine species was found from Monterey Bay , California , USA , to Bristol Bay , Bering Sea ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He started his career for a year in Paris until he returned to Switzerland from 1971 to 1979 to work...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 289. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 290/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 290): 'Both in 2001 Mark Warner and John Kerry in 2004 lost Loudoun and Prince William counties ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Both in 2001 Mark Warner and John Kerry in 2004 lost Loudoun and Prince William counties ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kurgo products are also available in Australia and New Zealand through the distributor Accapi Group ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 290. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 291/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 291): 'In his Karachi workshop , he sketches in the open air and paints his ideas on the ground ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In his Karachi workshop , he sketches in the open air and paints his ideas on the ground ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More recently , the band Extra Life has combined aspects of modern music with the early genre of mat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 291. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 292/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 292): 'The test above does not distinguish between more complex distributions , such as quantum and classic...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The test above does not distinguish between more complex distributions , such as quantum and classic...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He attended training camps with the NHL Carolina Hurricanes in 2011 , but was sent to Florida , then...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 292. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 293/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 293): 'Later Robbie turned off the machine and Beth is shocked but understanding ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Later Robbie turned off the machine and Beth is shocked but understanding ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tony Holm ( May 22 , 1908 - July 15 , 1978 ) , called Bernard Patrick Holm , was a professional Amer...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 293. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 294/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 294): 'Enter through southern gate , turn left and worship Ganapathy , Shiva and Ayyappan on the eastern si...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Enter through southern gate , turn left and worship Ganapathy , Shiva and Ayyappan on the eastern si...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Defeated Dennis Ralston , Manuel Manuel Santana , 6 -- 4 , 11 - 9 , 6 -- 4...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 294. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 295/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 295): 'Tony Tough and the night of the fried moths is a PC adventure game owned and developed by Nayma Soft...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tony Tough and the night of the fried moths is a PC adventure game owned and developed by Nayma Soft...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A clockwise angle in one figure would correspond to a counterclockwise angle in the other ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 295. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 296/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 296): 'If `` A '' and `` B '' are algebraic spaces , the Banach tensor product of `` A '' and `` B '' means...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If `` A '' and `` B '' are algebraic spaces , the Banach tensor product of `` A '' and `` B '' means...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stephen Vizinczey suggests that Tolstoy Maria created from his longing for his mother , Princess Mar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 296. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 297/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 297): 'Kurgo - products are also available through the distributor Accapi Group in Europe , while MasterPet...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kurgo - products are also available through the distributor Accapi Group in Europe , while MasterPet...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Andy Pettitte opened the top of the fifth inning with a double and scored on a single to center fiel...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 297. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 298/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 298): 'It was re-created in 1987 from parts of Assiniboia , Humboldt -- Lake Centre and Moose Jaw ridings ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was re-created in 1987 from parts of Assiniboia , Humboldt -- Lake Centre and Moose Jaw ridings ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Billboard wrote about the song : `` You catch the beat , now know the groove ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 298. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 299/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 299): 'In 1938 , after Anfuso was appointed Minister of Foreign Affairs , Ciano became Ministry head of sta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1938 , after Anfuso was appointed Minister of Foreign Affairs , Ciano became Ministry head of sta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ted Turner , the son of Robert Edward Turner , inherited the company when the elder Turner died in 1...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 299. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 300/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 300): 'The soundtrack topic was composed by Paul McCartney and performed by John Williams ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The soundtrack topic was composed by Paul McCartney and performed by John Williams ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Schützen-Eisenberg is a municipality in Burgenland in the Oberwart district of Austria ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 300. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 301/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 301): 'For centuries Kandy , originally known as Senkadagala , has been the bastion of Sri Lanka 's culture...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'For centuries Kandy , originally known as Senkadagala , has been the bastion of Sri Lanka 's culture...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The MSM model can be specified in both discrete time and continuous time ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 301. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 302/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 302): 'Together , these three properties fully determine the algebraic structure of the direct product ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Together , these three properties fully determine the algebraic structure of the direct product ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was accepted that the whole name of the zone was simply `` Güímar '' as the aboriginal menceyato ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 302. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 303/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 303): 'Nadhin Ratheesh Vega lives with his wife Dr Anu Ratheesh Vega and his son Ratheesh in Thrissur ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nadhin Ratheesh Vega lives with his wife Dr Anu Ratheesh Vega and his son Ratheesh in Thrissur ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Directed by Paul Krasny , written by Nancy Steen and Neil Thompson , produced by Robert K. Weiss ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 303. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 304/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 304): 'An AMO warm phase strengthens the summer rain over the Sahel , while a cold phase reduces rainfall ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An AMO warm phase strengthens the summer rain over the Sahel , while a cold phase reduces rainfall ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The northern area contains the Tara mountains and the southern region consists of open plains along ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 304. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 305/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 305): 'The port of Suppāraka , is either modern Sopara near Bhārukaccha or modern Bharuch , or Vasai near M...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The port of Suppāraka , is either modern Sopara near Bhārukaccha or modern Bharuch , or Vasai near M...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Svetlana Kuznetsova won the title by defeating Amélie Mauresmo 6 -- 4 , 6 -- 0 in the final ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 305. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 306/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 306): 'Paddon defeated Crocker 2009 again and took his third victory against Emma Gilmour in 2010 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Paddon defeated Crocker 2009 again and took his third victory against Emma Gilmour in 2010 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Riverton was a parliamentary electorate in the region of New Zealand in Southland ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 306. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 307/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 307): 'Most transmitters use the heterodyne principle so that they also have frequency conversion units ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most transmitters use the heterodyne principle so that they also have frequency conversion units ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The tomb of his friend , the architect Alexander Seton , at Dunfermline Abbey was also commissioned ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 307. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 308/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 308): 'Bret Hart accused Lawler of being a racist in 1995 in order to create problems between Hart and Japa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bret Hart accused Lawler of being a racist in 1995 in order to create problems between Hart and Japa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Written by Michelle MacLaren and directed by George Mastras , it aired on AMC in the United States a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 308. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 309/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 309): 'Hjärup is , with its more than 4,250 inhabitants , the second largest locality in Staffanstorp Munic...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hjärup is , with its more than 4,250 inhabitants , the second largest locality in Staffanstorp Munic...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On July 27 , 2011 , Restovich was traded from the Chicago White Sox into Arizona Diamondbacks ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 309. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 310/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 310): 'On its revolutionary muskets ( 1794 ) were followed by the first American Springfield rifle and the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On its revolutionary muskets ( 1794 ) were followed by the first American Springfield rifle and the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The design of this Japanese porcelain has made Wagener white and blue according to European taste wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 310. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 311/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 311): 'Euthria amorimi is a species of sea snail , a true gastropod mollusk in the family Buccinidae , the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Euthria amorimi is a species of sea snail , a true gastropod mollusk in the family Buccinidae , the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He said that the ordinary Americans believed there was an American conspiracy to attack EgyptAir 990...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 311. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 312/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 312): 'The constituency is in South Wales , situated on the right bank of the River Afan , near its mouth i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The constituency is in South Wales , situated on the right bank of the River Afan , near its mouth i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1979 -- 80 NBA season was the 34th season of the National Basketball Association ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 312. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 313/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 313): 'Butler died at Torquay on 16 January 1909 , and was buried in Holywell cemetery , Oxford ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Butler died at Torquay on 16 January 1909 , and was buried in Holywell cemetery , Oxford ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Chapeau Lamp ( 2014 ) designed by Philippe Starck for Flos and the sculpture The Hatband ( 2016 ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 313. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 314/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 314): 'Although the Iroquois never entered the Piedmont territory , they settled it for hunting and raiding...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Although the Iroquois never entered the Piedmont territory , they settled it for hunting and raiding...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Corey first appeared in DeMille 's novel `` Plum Island , in 1997 . ''...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 314. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 315/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 315): 'Small mammals , including bats , are sometimes eaten but insects are caught only very rarely ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Small mammals , including bats , are sometimes eaten but insects are caught only very rarely ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'William was deposed in 1776 by the revolutionary government of Perth Amboy , who was arrested at his...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 315. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 316/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 316): 'Mount Dana , Elevation , was climbed by the group the following day before Martinez had to return to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mount Dana , Elevation , was climbed by the group the following day before Martinez had to return to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Her mother is a Kenyan woman , while her father is Austrian ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 316. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 317/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 317): 'The dynamic component is the total soil resistance minus the static component ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The dynamic component is the total soil resistance minus the static component ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1998 , Rituparna Sengupta and Indrani Halder shared the National Film Award for the film as Best ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 317. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 318/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 318): 'Some of the filmmakers are seen , but not heard in the film ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Some of the filmmakers are seen , but not heard in the film ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On February 28 , 2018 Interoute announced the acquisition of GTT Communications for $ 2.3 Billion ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 318. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 319/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 319): 'Parallax captured John Stewart , Guy Gardner , and Hal Jordan in Kyle 's body , bringing them to Qwa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Parallax captured John Stewart , Guy Gardner , and Hal Jordan in Kyle 's body , bringing them to Qwa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2014 , the founding member of 15 years of age left Devin Abrams and was replaced by Dan McGruer ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 319. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 320/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 320): 'Riverton was a parliamentary election in the Southland of New Zealand region ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Riverton was a parliamentary election in the Southland of New Zealand region ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The single is Paisley 's fifth consecutive Number One single on the `` Billboard '' Hot Country Song...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 320. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 321/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 321): 'Used to find the nonlinear function of a local minimum ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Used to find the nonlinear function of a local minimum ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The following organs have been visited : Argao in Bohol ( still playable ) and Loboc , Baclayon , Lo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 321. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 322/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 322): 'Due to volatile prices and high capital costs , few subsidies can be exploited economically without ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Due to volatile prices and high capital costs , few subsidies can be exploited economically without ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brown said that Prince has never followed `` all that money '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 322. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 323/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 323): 'Principal - Photography took place between July 2016 and October 2016 in small rates with additional...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Principal - Photography took place between July 2016 and October 2016 in small rates with additional...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The product range extends from the east coast of Japan and Australia and the Red Sea at 32 ° C to so...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 323. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 324/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 324): 'On 31 October 2012 , Watson acquired Actavis and took the name of Actavis ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 31 October 2012 , Watson acquired Actavis and took the name of Actavis ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The representative tenant house was built in the baroque style in the 18th century ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 324. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 325/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 325): 'Then a relationship begins with Drew , very much to the disgust of Peter ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Then a relationship begins with Drew , very much to the disgust of Peter ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cloud9 is the native IDE for the BeagleBone Black single board computer , which is primarily program...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 325. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 326/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 326): 'David Tebele Scheuer was born in 1753 in Frankfurt am Main as son of his father Rabbi Abraham Naftal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'David Tebele Scheuer was born in 1753 in Frankfurt am Main as son of his father Rabbi Abraham Naftal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Fixer Uppers is a 1935 short film starring Laurel and Hardy , produced by Charles Rogers and dir...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 326. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 327/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 327): 'The name Edith has four name days : May 14 in Estonia , 31 October in Sweden , 5 July in Latvia and ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The name Edith has four name days : May 14 in Estonia , 31 October in Sweden , 5 July in Latvia and ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hadady , born in Hungary ( Békésszentandrás ) , studied music at the Franz - Liszt - Music Academy i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 327. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 328/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 328): 'It was born on April 18 , 1976 in Usera , Madrid ( Spain ) ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was born on April 18 , 1976 in Usera , Madrid ( Spain ) ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Vela family , prominent in the racing industry , had donated Peters to $ 150,000 over a four-yea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 328. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 329/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 329): '`` Chuck Versus the Wedding Planner '' was directed by Anton Cropper and written by Rafe Judkins and...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Chuck Versus the Wedding Planner '' was directed by Anton Cropper and written by Rafe Judkins and...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'AMBIT is a historical programming language that was introduced in 1964 by Carlos Christensen of Mass...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 329. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 330/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 330): 'The first five weapons were completed in the first half of 1916 . A total of 57 barrels and 56 carri...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The first five weapons were completed in the first half of 1916 . A total of 57 barrels and 56 carri...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wichita North High School was the second high school in the city of Wichita , completed in 1929 , Wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 330. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 331/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 331): 'Jacco Eltingh and Paul Haarhuis won the title , defeating Jan Apell and Jonas Björkman 6 - 4 , 7 - 6...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jacco Eltingh and Paul Haarhuis won the title , defeating Jan Apell and Jonas Björkman 6 - 4 , 7 - 6...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There she studied with Tony Smith , Eugene Goossen and Ad Reinhardt and met fellow art students Robe...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 331. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 332/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 332): 'Black Bull Bitter ( `` 3.9 % ABV '' ) was brewed to commemorate the first Theakson pub , where the f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Black Bull Bitter ( `` 3.9 % ABV '' ) was brewed to commemorate the first Theakson pub , where the f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The singers of Sonic Syndicate , Richard Sjunnesson and Roland Johansson , also sang for a compilati...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 332. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 333/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 333): 'Also four others , including Turner , Machen and Cissell , were offered nominees ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Also four others , including Turner , Machen and Cissell , were offered nominees ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The river Cochirleanca is a tributary of the Slatina river in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 333. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 334/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 334): 'The series tells the life of fourteen-year-old Barbara and her mother Isabelle , who is a divorced l...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The series tells the life of fourteen-year-old Barbara and her mother Isabelle , who is a divorced l...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bit 4 is set if the K register is affected , Bit 5 is set when the J register is affected ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 334. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 335/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 335): 'In the 2014 film `` Get On Up '' , a biography of Josh Hopkins , depicted by James Brown , bass is p...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the 2014 film `` Get On Up '' , a biography of Josh Hopkins , depicted by James Brown , bass is p...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some witnesses reported seeing a white crystalline powder : TATP is a white powder ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 335. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 336/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 336): 'On 4 November 2017 , Irina Viner officially announced to the Russian press that Mamun has completed ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 4 November 2017 , Irina Viner officially announced to the Russian press that Mamun has completed ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In codice 4 is the second file codice 8 and codice 5 is the second file codice 10 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 336. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 337/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 337): '`` Love Hurts '' is the twentieth episode of the first season of '' House `` , which was premiered o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Love Hurts '' is the twentieth episode of the first season of '' House `` , which was premiered o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the Ponce Grand Prix she drove a personal record of 9 : 39.36 minutes and then took the national ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 337. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 338/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 338): 'From 1965 to 2000 , it owned newspaper chains including MediaNews Group and Thomson Newspapers ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From 1965 to 2000 , it owned newspaper chains including MediaNews Group and Thomson Newspapers ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Most UArctic members are higher education institutions , but other members include circumpolar indig...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 338. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 339/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 339): 'These algorithmically equivalent sequences can be defined in three accidental ways ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These algorithmically equivalent sequences can be defined in three accidental ways ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 2000 Oldham Metropolitan Borough Council election took place on 4 May 2000 to elect members of O...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 339. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 340/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 340): 'The specific number of spaces in the indentation is unimportant as long as parallel elements have th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The specific number of spaces in the indentation is unimportant as long as parallel elements have th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Marston T. Bogert was closely involved with Parsons in establishing a new structure for the ACS ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 340. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 341/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 341): 'At the police station , they learn that Devayani 's brother had the money , but Jayaraman is charged...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At the police station , they learn that Devayani 's brother had the money , but Jayaraman is charged...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Its current chairman is Richard Flateau , and its district manager is Henry Butler ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 341. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 342/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 342): 'NEi Nastran is a general linear and nonlinear element analysis solver , used to analyze finite volta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'NEi Nastran is a general linear and nonlinear element analysis solver , used to analyze finite volta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Feliciano Centurión was a Paraguayan painter ( March 29 , 1962 in San Ignacio , Paraguay -- 7 Novemb...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 342. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 343/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 343): 'The episode was written by Bill Wrubel and directed by Lev L. Spiro ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The episode was written by Bill Wrubel and directed by Lev L. Spiro ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'John Barry 's energy kills Johnny ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 343. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 344/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 344): 'Several natural lakes exist , most notably Spirit Lake , West Okoboji Lake , and East Okoboji Lake i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Several natural lakes exist , most notably Spirit Lake , West Okoboji Lake , and East Okoboji Lake i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is now held by John Richard Attlee ’ s grandson Clement Attlee , 3rd Earl Attlee ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 344. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 345/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 345): 'The river Urechioiu is a tributary of the river Burduja in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The river Urechioiu is a tributary of the river Burduja in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The party began as a resistance movement that fought for East Timor 's independence between 1974 and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 345. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 346/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 346): 'InterTAN operated a RadioShack chain from Barrie , Ontario which carried most ( but not all ) of the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'InterTAN operated a RadioShack chain from Barrie , Ontario which carried most ( but not all ) of the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Renée Descartes , the founder of analytical geometry , believed that the natural world was objective...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 346. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 347/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 347): 'Only one percent of the blue diamonds are of this type , and most are grey to natural ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Only one percent of the blue diamonds are of this type , and most are grey to natural ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Results in 2007 -- 2008 season include : 2008 US National Sprint Champion , 2nd place World Cup Kuus...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 347. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 348/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 348): 'This long greensward with the Kingston swamp in its centre separates the two broad boulevards ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This long greensward with the Kingston swamp in its centre separates the two broad boulevards ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1884 , as assistant to Carl Flügge in Göttingen , Nicolaier discovered the bacterium Clostridium ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 348. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 349/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 349): 'The Stejioara River is a tributary of Bârnărel River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Stejioara River is a tributary of Bârnărel River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The average low temperature in summer ( December - January ) and the average high temperature in win...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 349. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 350/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 350): 'Comdial was acquired in September 2005 by Vertical Communications ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Comdial was acquired in September 2005 by Vertical Communications ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1844 , Pill Hill became a part of Brookline when it was annexed from Boston ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 350. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 351/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 351): 'In December 1995 , Xylogics was acquired by Bay Networks , which was in turn taken over by Nortel in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In December 1995 , Xylogics was acquired by Bay Networks , which was in turn taken over by Nortel in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The album was produced by Colin Richardson and mixed with Jason Suecof ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 351. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 352/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 352): 'The Barmat Scandal was often used later in Nazi propaganda , both as an electoral strategy and as an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Barmat Scandal was often used later in Nazi propaganda , both as an electoral strategy and as an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ink of a third color , and a much softer consistency , is then applied to the lower areas of the pla...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 352. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 353/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 353): 'Baron Paul Georges Marie Kronacker ( November 5 , 1897 - February 3 , 1994 ) was a Belgian chemist a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Baron Paul Georges Marie Kronacker ( November 5 , 1897 - February 3 , 1994 ) was a Belgian chemist a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Gila Mountains are a mountain range in the southwest of Arizona east of Yuma , Arizona , northea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 353. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 354/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 354): 'The Marignane is located in Marseille Provence Airport ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Marignane is located in Marseille Provence Airport ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The mouth of the Batten Kill is in Easton , New York , and the source of the river is in East Dorset...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 354. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 355/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 355): 'San Pedro Springs Park is located in the city of Bexar County San Antonio in the US state of Texas ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'San Pedro Springs Park is located in the city of Bexar County San Antonio in the US state of Texas ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The winner of the Playoffs was Blu : sens Monbús and until 2011 -- 12 CB Murcia season with ACB , th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 355. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 356/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 356): 'Amanda Kenya finally confronts the real meaning of her necklace , and Amanda tells her the whole sto...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Amanda Kenya finally confronts the real meaning of her necklace , and Amanda tells her the whole sto...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The first Syracuse Chiefs baseball team were established in 1934 , when the Jersey City Skeeters mov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 356. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 357/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 357): 'Ratheesh lives in Thrissur with his wife Dr. Anu Ratheesh Vega and son Nadhin Ratheesh Vega ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ratheesh lives in Thrissur with his wife Dr. Anu Ratheesh Vega and son Nadhin Ratheesh Vega ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is one of the leading German war poets of the First World War , and has been compared with Englis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 357. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 358/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 358): 'He was part of the Swedish team which won the silver medal in men 's gymnastics , Danish system even...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was part of the Swedish team which won the silver medal in men 's gymnastics , Danish system even...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Djamila Amrane became Danièle Minne after marriage in 1964 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 358. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 359/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 359): 'Jacopo Silvestri ( 16th century -- 15th century ) was an Italian cryptographer and author ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jacopo Silvestri ( 16th century -- 15th century ) was an Italian cryptographer and author ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1893 , Emma married Robert Lee Kelley ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 359. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 360/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 360): 'In London production , the role of Robbie Scotcher was played and the role was taken on 23 June 2008...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In London production , the role of Robbie Scotcher was played and the role was taken on 23 June 2008...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ashton was born on November 30 , 1957 in the Whips Cross Hospital at Forest Gate in Leicestershire ,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 360. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 361/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 361): 'H02 is a regional road ( H-Highway ) in Ternopil . It runs west-east and connects Lviv Oblast and Te...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'H02 is a regional road ( H-Highway ) in Ternopil . It runs west-east and connects Lviv Oblast and Te...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The United Kingdom followed in 1955 ; Italy in 1964 by Hiroshi Tada ; and Germany in 1965 by Katsuak...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 361. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 362/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 362): 'The 1953 Labour Party deputy leadership election took place on October 29 , 1953 , after incumbent d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 1953 Labour Party deputy leadership election took place on October 29 , 1953 , after incumbent d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hussain received 432 votes , and his only rival , Wajihuddin Ahmed , was 77 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 362. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 363/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 363): 'The two unpopular cantons , however , had immediate financial problems and were forced to introduce ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The two unpopular cantons , however , had immediate financial problems and were forced to introduce ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'For phonological details see the article on the whole history of French ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 363. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 364/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 364): 'The route was extended in the same year into a divided highway between Dewey Beach and the Indian Ri...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The route was extended in the same year into a divided highway between Dewey Beach and the Indian Ri...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mount Cline is a mountain in the western part of Alberta , Canada , north of Saskatchewan Crossing ,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 364. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 365/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 365): 'After Anna was found , Martha married a man by the name of George I. Eisenhauer ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After Anna was found , Martha married a man by the name of George I. Eisenhauer ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the United States , many anthropologists used white as a general term `` Caucasian '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 365. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 366/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 366): 'The Thames is a tributary of Littlemore Brook in Oxfordshire , Southern England ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Thames is a tributary of Littlemore Brook in Oxfordshire , Southern England ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'According to the United States Census Bureau , the district has a total area , of which land and ( 0...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 366. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 367/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 367): 'Downieville is a mountain in the Plumas National Park in Sierra County , California , northeast of L...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Downieville is a mountain in the Plumas National Park in Sierra County , California , northeast of L...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Where formula _ 15 is the ( irreducible ) dimension of the finite representation formula _ 11 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 367. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 368/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 368): 'It was first successfully completed on 26 March 2012 by a twelve-year-old American , Tom Schaar ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was first successfully completed on 26 March 2012 by a twelve-year-old American , Tom Schaar ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2016 , the campus moved Milpitas , California to San Jose , California ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 368. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 369/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 369): 'Born and raised in Dore , Joe Joe Root was born , also by Yorkshire and currently England 's rising ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Born and raised in Dore , Joe Joe Root was born , also by Yorkshire and currently England 's rising ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kjersti Løken Stavrum is a sister of Karl Petter Løken and is married to Gunnar Stavrum , editor-in-...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 369. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 370/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 370): 'Separate lists are provided for the 61 listed properties and historic districts in Evanston and the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Separate lists are provided for the 61 listed properties and historic districts in Evanston and the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The central mainland of the Shetland Islands is part of the mainland between Hellister , Aith and Vo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 370. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 371/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 371): 'Finally , we say that if Formula 11 is regular , a distribution is concave ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Finally , we say that if Formula 11 is regular , a distribution is concave ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It also inhibits the peripheral , though not central secretion of oxytocin and vasopressin in rats ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 371. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 372/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 372): 'In one of his works ( epic poem on Nikola Jurišić ) a subordinate theme was Skanderbeg ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In one of his works ( epic poem on Nikola Jurišić ) a subordinate theme was Skanderbeg ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the comic thriller , `` Edward Trencom 's Nose '' by Giles Milton , several of Edward 's ancestor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 372. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 373/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 373): 'Benzoylfentanyl was banned in Finland in September 2017 , and in Sweden in October 2017 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Benzoylfentanyl was banned in Finland in September 2017 , and in Sweden in October 2017 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'B is the middle term between the two premises ( the common term ) but is never distributed , so this...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 373. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 374/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 374): 'I was there , and there he went : here and there to my sorrow I find him ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I was there , and there he went : here and there to my sorrow I find him ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The FedEx Express season 2002 was the first season of the franchise at the Philippine Basketball Ass...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 374. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 375/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 375): 'The number of aircraft operated by the 507th and 137th machines was increased simultaneously by the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The number of aircraft operated by the 507th and 137th machines was increased simultaneously by the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was designed by the Eurocom Entertainment Software and was published by Taxan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 375. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 376/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 376): 'After leaving Louise Redfield in 1975 , Mary Ann Pederson took over the show until 1981 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After leaving Louise Redfield in 1975 , Mary Ann Pederson took over the show until 1981 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'From 1913 to 1962 , the university taught basic sciences in Los Angeles , but sent its students to L...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 376. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 377/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 377): '`` Sex with Me '' was mixed by Manny Marroquin at Larrabee Studios in Universal City , California an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Sex with Me '' was mixed by Manny Marroquin at Larrabee Studios in Universal City , California an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is a village located in small Kolar - district in Karnataka , India It is a present village with ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 377. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 378/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 378): 'This species comes from southern California to Peru in the Pacific Ocean ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This species comes from southern California to Peru in the Pacific Ocean ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'For many years , it was managed by the British actor Jack Watling and his son Giles and his son-in-l...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 378. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 379/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 379): 'Barkheda Baramad is a village in the Berasia district of Madhya Pradesh , India . It is located in t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Barkheda Baramad is a village in the Berasia district of Madhya Pradesh , India . It is located in t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Universal Press Syndicate , a subsidiary of Andrews McMeel Universal , was an independent press synd...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 379. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 380/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 380): 'Together , Karen and Kristoffer have eight children ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Together , Karen and Kristoffer have eight children ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During his career , Taubensee played for three different ball clubs : the Cleveland Indians , Housto...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 380. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 381/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 381): 'In London production , the role of Jerome Pradon was played , and the role was taken over by Robbie ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In London production , the role of Jerome Pradon was played , and the role was taken over by Robbie ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pajumaa is a village in Lääneranna Parish , Estonia , in western Pärnu County ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 381. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 382/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 382): 'At the time , Meacham was president , and his administration learned that Andrew Johnson did not sup...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At the time , Meacham was president , and his administration learned that Andrew Johnson did not sup...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Palpi , head and thorax are yellowish and the shoulders are white ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 382. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 383/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 383): 'Nathan Bryon was cast in the role of Joey Ellis , who would be introduced as a friend of the establi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nathan Bryon was cast in the role of Joey Ellis , who would be introduced as a friend of the establi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Players choose a server and then select from six classes of the good team or the evil team ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 383. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 384/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 384): 'He also worked as translator for national media journalists and a Swedish newspaper ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He also worked as translator for national media journalists and a Swedish newspaper ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has a plant and four factories in Bangladesh , and a branch office in New York City ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 384. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 385/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 385): 'There is a Orang Asli Museum in Gombak and also in Melaka , about 25 km north of Kuala Lumpur ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is a Orang Asli Museum in Gombak and also in Melaka , about 25 km north of Kuala Lumpur ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Later , it was reported that Sunita will begin an affair with John Michie ( Karl Munro ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 385. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 386/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 386): 'Regressive assimilations are only conditioned by semantic factors while substitutions take into acco...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Regressive assimilations are only conditioned by semantic factors while substitutions take into acco...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This version was published on August 18 , 2016 in North America and on January 5 , 2017 in Europe an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 386. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 387/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 387): 'Pointe Aux Barques is located in the Pointe Aux Barques lighthouse , not Huron Township ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pointe Aux Barques is located in the Pointe Aux Barques lighthouse , not Huron Township ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The music was composed by K. Ayyappa Panicker and Kavalam Narayana Panicker and the lyrics by M. B. ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 387. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 388/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 388): 'Zhu Ci continued to serve under Zhu Xicai , and it was said that because they shared the same surnam...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Zhu Ci continued to serve under Zhu Xicai , and it was said that because they shared the same surnam...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They make up 13 % of the population in Klaipėda , 28 % in Vilnius ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 388. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 389/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 389): 'Turing had an elder brother , John Dermot Turing ( father of Sir John , 12th Baronet of the Turing B...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Turing had an elder brother , John Dermot Turing ( father of Sir John , 12th Baronet of the Turing B...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1974 , Erik Erikson founded the rock band Spooner with two fellow musicians in Madison , Wisconsi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 389. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 390/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 390): 'Nick Lindahl defeated Alexandre Sidorenko ( 6 -- 3 , 7 -- 6 ) in the final ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nick Lindahl defeated Alexandre Sidorenko ( 6 -- 3 , 7 -- 6 ) in the final ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The son of Hugh Holland ( 1569 - 1633 ) was born in Denbigh in the north of Wales ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 390. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 391/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 391): 'Kool Keith and Marc Live joined with Jacky Jasper to release two albums as KHM ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kool Keith and Marc Live joined with Jacky Jasper to release two albums as KHM ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is endemic to San Luis Obispo County , California , where it is known only from the Pecho Hills s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 391. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 392/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 392): 'The successor rocket , the Falcon 9 , successfully landed its first flight on 22 December 2015 , for...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The successor rocket , the Falcon 9 , successfully landed its first flight on 22 December 2015 , for...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was part of the Danish team , which won the silver medal in men 's gymnastics in 1920 , a Swedish...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 392. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 393/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 393): 'The main international airport is the Douala International Airport and a secondary international air...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The main international airport is the Douala International Airport and a secondary international air...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Since then , there have been few significant changes , with remarkable changes in the design of the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 393. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 394/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 394): 'The community has a low poverty rate despite the low participation rate and high unemployment ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The community has a low poverty rate despite the low participation rate and high unemployment ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Neptunea alexeyevi is a species of sea snail , a marine gastropod mollusk in the family Buccinidae ,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 394. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 395/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 395): 'Stockfish is cured in a process called fermentation where cold-adapted bacteria matures the fish , s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stockfish is cured in a process called fermentation where cold-adapted bacteria matures the fish , s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Speedcore tracks often contain elements of the related genres early hardcore and breakcore , as well...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 395. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 396/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 396): 'The field also included 1928 Olympian ( and 1932 Olympic champion ) Paul Jessup of Cornell , and fut...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The field also included 1928 Olympian ( and 1932 Olympic champion ) Paul Jessup of Cornell , and fut...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'District Viñac is one of thirty-three districts of the region Lima in Yauyos province in Peru ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 396. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 397/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 397): 'In April 2016 , Ahmed Ali Riaz Malik 's son , Malik Riaz Hussain , was named in the Panama Papers ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In April 2016 , Ahmed Ali Riaz Malik 's son , Malik Riaz Hussain , was named in the Panama Papers ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Several streets are named after him , including the roads in Ballarat , Melton , Buninyong , Geelong...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 397. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 398/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 398): 'Horner changed his mind when Cameron presented the song to him ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Horner changed his mind when Cameron presented the song to him ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Although its conjugated acid is highly reactive , peroxynitrite in basic solutions is stable ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 398. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 399/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 399): 'Bernhard Franz von Hess ( May 22 , 1792 - April 20 , 1869 ) was a Bavarian general lieutenant and mi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bernhard Franz von Hess ( May 22 , 1792 - April 20 , 1869 ) was a Bavarian general lieutenant and mi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The initial plan was to promote Mark Butcher to the opening batsman 's position , which has now beco...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 399. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 400/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 400): 'The festival was founded in 2007 and debuted in Phoenix , Arizona and has since been held in San Die...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The festival was founded in 2007 and debuted in Phoenix , Arizona and has since been held in San Die...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When Liliuokalani died in 1917 , territorial governor Lucius E. Pinkham granted her the honor of a s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 400. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 401/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 401): 'Sarah told Peyton that he rocked and Peyton was later seen at his concert with Eddie ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sarah told Peyton that he rocked and Peyton was later seen at his concert with Eddie ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Indus cities are known for their urban planning , baked brick houses , elaborate drainage system...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 401. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 402/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 402): 'Gonzalo advises his son , Paola , to always forget ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gonzalo advises his son , Paola , to always forget ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He sent his brother , Cyrus the younger , to relieve Tissaphernes of his command of Lydia ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 402. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 403/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 403): 'The elevation of the island has , and it is a shoreline of length ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The elevation of the island has , and it is a shoreline of length ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the infected EXE files , no text strings are visible within the starting code , but the following...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 403. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 404/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 404): 'These teams are supplied by the US Army and the US Marine Corps ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These teams are supplied by the US Army and the US Marine Corps ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Founded in 1959 by Sérgio Britto , it has featured actors such as Fernanda Montenegro , Gianni Ratto...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 404. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 405/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 405): 'The gate is approximately high , with the still visible grooves in the granite stones for the hinges...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The gate is approximately high , with the still visible grooves in the granite stones for the hinges...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'With the help of bassist Camus Celli , keyboarder Guy Daniel and drummer Pat Schick , guitars and ke...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 405. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 406/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 406): 'The team 's statistical leaders included Todd Starks with 1,687 passing yards , Mike Ridley with 311...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The team 's statistical leaders included Todd Starks with 1,687 passing yards , Mike Ridley with 311...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Born in Monroe County , Smith was educated at the Culloden Academy in Twiggs County , Georgia ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 406. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 407/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 407): 'Ilie Năstase defeated Jan Kodeš , 8 -- 6 , 6 -- 2 , 2 -- 6 , 7 -- 5...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ilie Năstase defeated Jan Kodeš , 8 -- 6 , 6 -- 2 , 2 -- 6 , 7 -- 5...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Its villages include Dry Tavern , Normal Square ( also located in West Penn Township , Schuylkill Co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 407. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 408/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 408): 'The Bohotin River is a tributary of the River Bazga in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Bohotin River is a tributary of the River Bazga in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Robbie later turns the machine off and Beth is shocked but understanding ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 408. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 409/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 409): 'Ashley was born on November 1 , 1986 and is a contemporary dancer from Los Angeles , who originally ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ashley was born on November 1 , 1986 and is a contemporary dancer from Los Angeles , who originally ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1914 , the southern ship was added by Alfred Shuttleworth , paid for by Temple Lushington Moore ,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 409. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 410/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 410): 'Field Marshal The Marquis was a leading field marshal and early figure in the Japanese Imperial Japa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Field Marshal The Marquis was a leading field marshal and early figure in the Japanese Imperial Japa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Aguiari described it as '' a nice action in the middle of traffic alone , but up there with a Zen - ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 410. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 411/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 411): 'A post office called Lodi was established first in 1837 , and the post office was renamed Maple Park...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A post office called Lodi was established first in 1837 , and the post office was renamed Maple Park...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As a correspondent she traveled to Russia , Finland , Italy , France , Scotland , Estonia , Germany ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 411. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 412/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 412): 'Standard arguments in homological algebra imply that these cohomology groups are independent of the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Standard arguments in homological algebra imply that these cohomology groups are independent of the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Diloma radula is a species of sea snail , a marine gastropod mollusk in the Trochidae family , the t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 412. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 413/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 413): 'The original intention of Igor Girkin and his men was the repetition of the Russian scenario ( the s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The original intention of Igor Girkin and his men was the repetition of the Russian scenario ( the s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Axocomanitla is a municipality in south-eastern Mexico in Tlaxcala ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 413. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 414/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 414): 'Sinclair T. Chitty , his mother , married his father Thomas Kincaid Blake Jr. at the age of 15 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sinclair T. Chitty , his mother , married his father Thomas Kincaid Blake Jr. at the age of 15 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His current research explores the influence of Islamic ideas and stories on Jewish sources ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 414. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 415/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 415): 'Debbie Posner is the `` teacher and the program for Hebrew and Jewish studies '' , and Debbi Benn is...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Debbie Posner is the `` teacher and the program for Hebrew and Jewish studies '' , and Debbi Benn is...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2002 , Miller joined the Golden Striker Trio by bassist Ron Carter , with guitarist Russell Malon...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 415. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 416/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 416): 'He has three colored stripes adorning his head , and in the `` Street Fighter Alpha '' series , he w...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He has three colored stripes adorning his head , and in the `` Street Fighter Alpha '' series , he w...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the 476th round ( 16th total ) of the Major League Baseball draft in 2004 , Arizona Reynolds was ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 416. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 417/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 417): 'Mead was born in Trumann , Poinsett County , northeast Arkansas , but lived most of his life in the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mead was born in Trumann , Poinsett County , northeast Arkansas , but lived most of his life in the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Inspirica , Inc. serves approximately 300 people and houses more than 800 people each year ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 417. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 418/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 418): 'The Entente Cordiale of 1904 changed the diplomatic and military landscape , which reflected in fict...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Entente Cordiale of 1904 changed the diplomatic and military landscape , which reflected in fict...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A multi-region DVD of the entire series was released on February 4 , 2015 by Warner Archive and was ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 418. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 419/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 419): 'The 1927 Colgate University Football team represent Colgate in the College - Football - Season 1927 ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 1927 Colgate University Football team represent Colgate in the College - Football - Season 1927 ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indiana Indiana was also the founder and director of Kerchoonz.com , a social networking site that w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 419. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 420/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 420): 'In February 2007 , Barbara Fischinger performed at the Original Lumigraph in Amsterdam and in 2012 i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In February 2007 , Barbara Fischinger performed at the Original Lumigraph in Amsterdam and in 2012 i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Under the Radar '' gave him five out of ten stars and called it `` a very professional , but almo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 420. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 421/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 421): 'Surumaitta Kannukal is a 1983 Indian Malayalam film , produced by SKonnanatt and directed by K Manoh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Surumaitta Kannukal is a 1983 Indian Malayalam film , produced by SKonnanatt and directed by K Manoh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Shortly before his death , according to Grigory Pasko , Sergei Yushenkov received threats from a hig...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 421. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 422/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 422): 'The school was founded in Ireland and then pioneered in Australia in 1903 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The school was founded in Ireland and then pioneered in Australia in 1903 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Krishna Kumar is the music director and Jassie Gift is the cinematographer of the film ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 422. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 423/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 423): 'Broun decided in May 2012 that he would not challenge Collins ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Broun decided in May 2012 that he would not challenge Collins ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Also personal web hosting services such as Geocities provided free web space for several free web pa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 423. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 424/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 424): 'Agnieszka Radwańska won the title and struck Dominika Cibulková in the final , 3 -- 6 , 6 -- 4 , 6 -...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Agnieszka Radwańska won the title and struck Dominika Cibulková in the final , 3 -- 6 , 6 -- 4 , 6 -...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the 1990s , new teaching campuses were opened in Ivrea , Mondovì , Biella , Alessandria and Verce...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 424. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 425/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 425): 'Abu Jahl narrated : Anas bin Malik said : `` O Allah !...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Abu Jahl narrated : Anas bin Malik said : `` O Allah !...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was dredged and widened in 1974 , built with gravel roads on each side of the channel ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 425. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 426/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 426): 'Sri Lanka , originally known as Senkadagala , has been the bastion of Kandy 's culture and spiritual...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sri Lanka , originally known as Senkadagala , has been the bastion of Kandy 's culture and spiritual...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Recent research has found a connection between the Xionites and Göbl 's first wave of the Iranian Hu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 426. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 427/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 427): 'Thus his books are often seen as dystopian fiction and social science fiction , although they are no...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thus his books are often seen as dystopian fiction and social science fiction , although they are no...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jean François Pastré was the son of the owner Eugène Pastré ( 1758-1821 ) and his wife Eugénie Sabin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 427. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 428/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 428): 'In 1989 , London joined the Peace Corps in Africa and organized a regional business development prog...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1989 , London joined the Peace Corps in Africa and organized a regional business development prog...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Lee Field in the Galewood neighborhood of Wyoming , Michigan is the club 's home stadium ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 428. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 429/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 429): 'Georges Merle died in 1881 in Paris . His son Hugues Merle also became a painter ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Georges Merle died in 1881 in Paris . His son Hugues Merle also became a painter ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The building , commissioned by the city fathers and designed by William Stark , was originally opene...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 429. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 430/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 430): 'The municipalities which border Calvagese della Riviera are Polpenazze del Garda , Prevalle , Bedizz...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The municipalities which border Calvagese della Riviera are Polpenazze del Garda , Prevalle , Bedizz...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Robert W. Edgar was appointed by Cohen as a member of the President 's Council of Common Cause ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 430. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 431/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 431): 'She graduated in 1983 from the Glen High School in Pretoria and studied at the Rhodes University in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She graduated in 1983 from the Glen High School in Pretoria and studied at the Rhodes University in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Suncook is located in the southern corner of the town of Pembroke and the western end of the town of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 431. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 432/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 432): 'From 1888 to 1913 , he was chairman of the Highfields Shire Council and the Highfields Divisional Bo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From 1888 to 1913 , he was chairman of the Highfields Shire Council and the Highfields Divisional Bo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Anabel Medina Garrigues and Arantxa Parra Santonja won the title , defeated Kiki Bertens and Johanna...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 432. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 433/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 433): 'To distinguish them , Attilio was referred to as Mattei I , Augusto as Mattei II and Aldo as Mattei ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'To distinguish them , Attilio was referred to as Mattei I , Augusto as Mattei II and Aldo as Mattei ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Izvoarele River is a tributary of the River Podriga in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 433. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 434/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 434): 'One of the largest landowners in Saint Mary at the turn of the 20th Century was Blanche Blackwell , ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of the largest landowners in Saint Mary at the turn of the 20th Century was Blanche Blackwell , ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A section of the line remains in place , and is also known as the Phoenixville Industrial track ( cu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 434. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 435/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 435): 'He was trained at Brunswick House , a preparatory school in Hove , and then moved to Sutherland Hous...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was trained at Brunswick House , a preparatory school in Hove , and then moved to Sutherland Hous...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'ZanAir Limited is a domestic airline based in Zanzibar , Tanzania ZanAir was established in 1992 in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 435. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 436/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 436): 'The large active adult community is also known locally as '' Original `` Leisure Village , because i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The large active adult community is also known locally as '' Original `` Leisure Village , because i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Solomons was born in Orsett , Essex and brought up with his four sisters in Thorpe Bay by his mother...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 436. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 437/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 437): 'The district of Mhow consists of 4 divisions : Depalpur , Sanwer , Indore and Indore ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The district of Mhow consists of 4 divisions : Depalpur , Sanwer , Indore and Indore ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He stayed in Germany for three years before moving back with his family to Japan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 437. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 438/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 438): 'The couple had their first child in August 2012 , Nicol , and in March 2014 their second son Shalk J...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The couple had their first child in August 2012 , Nicol , and in March 2014 their second son Shalk J...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They meet up with Quinito Castañeda ( Rafael Rosell ) and his friend , Danny ( Joross Gamboa ) who t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 438. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 439/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 439): 'Mount Dana , elevation , was climbed the next day by the group before Muir had to return home to Mar...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mount Dana , elevation , was climbed the next day by the group before Muir had to return home to Mar...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'For scalar spectral fluctuations , Formula 9 is referred to as the scalar index , with the formula 1...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 439. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 440/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 440): 'Thompson Cooper was the son of Charles Henry Cooper , a Cambridge solicitor and antiquarian ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thompson Cooper was the son of Charles Henry Cooper , a Cambridge solicitor and antiquarian ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is jumped at Haydock Park over a distance of about 1 mile 7 ½ furlongs , and during its running t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 440. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 441/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 441): 'Ardning is a municipality in the district of Styria in the Austrian state of Liezen ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ardning is a municipality in the district of Styria in the Austrian state of Liezen ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Currently she is working on a NeoLatin anthology of critical texts ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 441. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 442/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 442): 'In 1949 , Pabawena wrote to Utah Senator Arthur V. Watkins to report :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1949 , Pabawena wrote to Utah Senator Arthur V. Watkins to report :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Arlington County 's Washington Boulevard replaced the line between Bluemont Junction Trail and Bluem...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 442. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 443/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 443): 'His son , Erik Spoelstra is a former National Basketball Association executive and his grandson , Jo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His son , Erik Spoelstra is a former National Basketball Association executive and his grandson , Jo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At that time Constantinople was the capital of the eastern Christian empire and the patriarch of Con...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 443. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 444/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 444): 'The season from 1982 to 83 National Basketball Association was the 37th season of the NBA ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The season from 1982 to 83 National Basketball Association was the 37th season of the NBA ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Jamestown '' was decommissioned 19 December 1969 and scrapped in May 1970 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 444. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 445/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 445): 'Typically prepaid Voucher Management Systems are used with Intelligent Network based external system...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Typically prepaid Voucher Management Systems are used with Intelligent Network based external system...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On October 11 , 1975 , Hill married Bill Hillary , and her only child , Chelsea , was born on Februa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 445. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 446/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 446): 'Its base or free edge contains between its layers the round ligament and the paraumbilical veins ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Its base or free edge contains between its layers the round ligament and the paraumbilical veins ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1901 , Winn met Emma Goldman in Chicago , and found in her a lasting ally ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 446. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 447/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 447): 'Adolph III was the son of Count Henry VI and his wife Elisabeth of Berg ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Adolph III was the son of Count Henry VI and his wife Elisabeth of Berg ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These pedo-transfer functions are referred to as predictive functions in a non-spatial context ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 447. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 448/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 448): 'He visited the Kawawa High School and graduated from Meiji University ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He visited the Kawawa High School and graduated from Meiji University ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Annie Marie Gilbertine Amalo married Herman Johannes in 1955 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 448. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 449/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 449): 'An additional study found that the direct promoter is one of many thousands of proximal targets of t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An additional study found that the direct promoter is one of many thousands of proximal targets of t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On 3 May 2016 , Brian Pallister was appointed by the Progressive Conservative government of Blaine P...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 449. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 450/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 450): 'A funnel is a pipe with a wide mouth , good for feeding , often conical mouth and a narrow stem ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A funnel is a pipe with a wide mouth , good for feeding , often conical mouth and a narrow stem ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1901 , Emma Goldman Winn met in Chicago and found in her a lasting ally ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 450. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 451/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 451): 'Azaloxan ( CGS-7135A ) is a medication that was marketed by Ciba-Geigy as an antidepressant in the e...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Azaloxan ( CGS-7135A ) is a medication that was marketed by Ciba-Geigy as an antidepressant in the e...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Surrounding suburbs ( from the north to the south ) are Balgownie , Mount Pleasant , Mount Ousley , ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 451. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 452/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 452): 'The back series allows characters to perform powerful melee attacks , while the front row is for ran...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The back series allows characters to perform powerful melee attacks , while the front row is for ran...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Divisional Secretariat is a Divisional Secretariat of the district Gampaha , the western province of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 452. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 453/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 453): 'Cheetham was born on January 30 , 1928 in Taos , New Mexico , grew up in El Paso , Texas , and recei...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cheetham was born on January 30 , 1928 in Taos , New Mexico , grew up in El Paso , Texas , and recei...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In both cases , he had been selected by Eugenio Scalfari as a critic , first for the weekly newspape...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 453. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 454/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 454): 'Amun comes closest to Venus and passes by in 1964 , 2034 and 2103 within 10 Gm ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Amun comes closest to Venus and passes by in 1964 , 2034 and 2103 within 10 Gm ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Elmshorn is a town in the Pinneberg district of Schleswig-Holstein , Germany ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 454. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 455/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 455): 'He has performed at the Vienna , Holland , Oregon , Tanglewood , Edinburgh , Marlboro Bach and Carme...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He has performed at the Vienna , Holland , Oregon , Tanglewood , Edinburgh , Marlboro Bach and Carme...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This makes Pyhä-Luosto Finland 's newest and oldest national park at the same time ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 455. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 456/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 456): 'The 2014 -- 15 Idaho State University men 's basketball team represented Idaho State Bengals during ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 2014 -- 15 Idaho State University men 's basketball team represented Idaho State Bengals during ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Rockingham '' reached Whampoa on 23 May , and arrived at Bombay on 21 September ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 456. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 457/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 457): 'In 2004 SCA acquired the tissue and hygiene products businesses of International Paper from Carter H...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2004 SCA acquired the tissue and hygiene products businesses of International Paper from Carter H...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brown also appeared in `` All about the Evil '' of Peaches Christ with Cassandra Peterson , Mink Sto...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 457. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 458/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 458): 'Spencer is approximately ten miles from downtown Midwest City and borders the City of Nicoma Park to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Spencer is approximately ten miles from downtown Midwest City and borders the City of Nicoma Park to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brazil had already signed a separate Loizaga - Cotegipe contract with Paraguay in 1872 , and now did...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 458. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 459/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 459): 'On August 12 , 2003 Kottonmouth Kings released their 3rd Compilation - Album , their 9th General Alb...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On August 12 , 2003 Kottonmouth Kings released their 3rd Compilation - Album , their 9th General Alb...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1968 , Catherine Gillies , the granddaughter of Charles Manson , learned of Barbara Myers about M...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 459. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 460/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 460): 'The train station was opened on December 8 , 1890 , closed on November 8 , 1969 and demolished in 19...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The train station was opened on December 8 , 1890 , closed on November 8 , 1969 and demolished in 19...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was born in Podgorica ( today Titograd ) in a family of musicians and grew up there ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 460. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 461/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 461): 'The Penchala River is a river in Selangor , Malaysia It runs from Kampung Sungai Penchala to the sou...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Penchala River is a river in Selangor , Malaysia It runs from Kampung Sungai Penchala to the sou...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The marriage ensured that the male dynasty would continue in the same line ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 461. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 462/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 462): 'She also published biographies of the Nobel laureate Juan Soriano and the artist Octavio Paz ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She also published biographies of the Nobel laureate Juan Soriano and the artist Octavio Paz ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sara Varga Madeleine Jonsson ( born 14 April 1982 ) , known professionally as Sara Varga , is a Swed...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 462. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 463/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 463): 'As Superintendent of Police , he served in Dharmapuri from 1982 to 1983 and Salem from 1983 to 1985 ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As Superintendent of Police , he served in Dharmapuri from 1982 to 1983 and Salem from 1983 to 1985 ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2014 , founding member Devin Abrams left the band for 15 years and was replaced by Dan McGruer ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 463. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 464/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 464): 'Linguists sometimes claim that when a generation of children learn a pidgin as their first language ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Linguists sometimes claim that when a generation of children learn a pidgin as their first language ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sigmatel later was sold to Freescale Semiconductor ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 464. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 465/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 465): 'Scouting in Malaya ( now Malaysia ) was first introduced in Penang in 1908 as an experimental troop ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scouting in Malaya ( now Malaysia ) was first introduced in Penang in 1908 as an experimental troop ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mosques were bombed , and in many provinces , Hui was slaughtered or destroyed by Japanese troops ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 465. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 466/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 466): 'Anna Maria Lena is a Greek Cypriot singer and songwriter . He represented Cyprus with the song `` An...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Anna Maria Lena is a Greek Cypriot singer and songwriter . He represented Cyprus with the song `` An...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On 17 July 2006 , Miguel Ángel Granados Chapa said in a radio interview with López Obrador on the su...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 466. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 467/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 467): 'Donald Randell Evans was the eldest son of Air Chief Marschall Sir Pauline Evans ( 1912-1975 ) and N...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Donald Randell Evans was the eldest son of Air Chief Marschall Sir Pauline Evans ( 1912-1975 ) and N...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is caused by a combination of adiabatic ( friction ) heating and kinetic compression ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 467. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 468/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 468): 'She died in Fort Worth and is buried in Abilene at the municipal cemetery of Abilene ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She died in Fort Worth and is buried in Abilene at the municipal cemetery of Abilene ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Castlebrae Community High School is a secondary school in the Greendyke area of Edinburgh ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 468. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 469/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 469): 'This short movie was created by Jamie Swarbrick , Sophie Newton , PJ Liguori and Louis Grant ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This short movie was created by Jamie Swarbrick , Sophie Newton , PJ Liguori and Louis Grant ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After Izumi had drawn some early character designs for Hibiki , Maeda wanted to continue the story a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 469. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 470/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 470): 'Mali is a rural commune and village in the Kidal Region of Tessalit ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mali is a rural commune and village in the Kidal Region of Tessalit ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sergio Galdós and Luis David Martínez won the title , defeating Julio Peralta and Horacio Zeballos 6...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 470. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 471/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 471): 'Boats that drew 70 tons were now 87 ½ feet wide , 10 ½ feet long and attracted 4 ½ feet water ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Boats that drew 70 tons were now 87 ½ feet wide , 10 ½ feet long and attracted 4 ½ feet water ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1946 , the writer Ralph Peterson Lucas and her son , Joel Patterson , married ( 1957 - 2017 ) , b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 471. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 472/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 472): 'Born in West Point , New York , Liparulo attended Weber State University in Utah ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Born in West Point , New York , Liparulo attended Weber State University in Utah ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the end of the season , George Curtis was dismissed and replaced with Nils Arne Eggen ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 472. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 473/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 473): 'All songs of Alejandro Lerner , except `` A Place Where We Belong '' written by Graham Russell ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'All songs of Alejandro Lerner , except `` A Place Where We Belong '' written by Graham Russell ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'San Pedro de Pilas District is one of thirty-three districts of the province Yauyos in Peru ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 473. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 474/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 474): 'Marine losses for the day were 16 killed and 98 captured , while the KPA lost 9 wounded and an estim...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Marine losses for the day were 16 killed and 98 captured , while the KPA lost 9 wounded and an estim...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was built by Brunel 's former assistant , William Jacomb , designed by Head Wrightson and inaugur...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 474. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 475/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 475): 'The texts were later written by Taupin and John composed the music first ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The texts were later written by Taupin and John composed the music first ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These species were discovered in 2013 and named and described in 2015 by Samuel P. Iglésias and Lou ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 475. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 476/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 476): 'Also , there is a faithful and more promising remake called `` Xenonauts '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Also , there is a faithful and more promising remake called `` Xenonauts '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oxidative degradation of uracil produces urea and diatomic acid in the presence of HO and Fe or in t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 476. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 477/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 477): 'Walnut Hill was also on the Goshen Road , an early street through Illinois , from Shawneetown to the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Walnut Hill was also on the Goshen Road , an early street through Illinois , from Shawneetown to the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was created by Mindscape Group and distributed by Argonaut Software ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 477. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 478/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 478): 'The office was moved to Delhi Mills and reconstructed in February 1871 , although the Scio office wa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The office was moved to Delhi Mills and reconstructed in February 1871 , although the Scio office wa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Following the closure of the Central Australian Railway in December 1974 , the remaining 10 NTs were...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 478. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 479/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 479): 'According to Augustine , this was the impetus behind John C. Kelly 's later `` Confessions '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'According to Augustine , this was the impetus behind John C. Kelly 's later `` Confessions '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ben Peterson of AllMusic gave the album 4 stars out of 5 , calling it `` never imaginative and consi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 479. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 480/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 480): 'Following the success of the first film , star Robin Jones Gunn and author Niall Matter both confirm...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Following the success of the first film , star Robin Jones Gunn and author Niall Matter both confirm...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'According to the above definition , two relations with different graphs , but different domains or d...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 480. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 481/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 481): 'For many singers and music directors , Saghar has written more than 2,000 songs for Pakistani films ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'For many singers and music directors , Saghar has written more than 2,000 songs for Pakistani films ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The main ferry ran to 42nd Street and for short time was a component of the transcontinental Lincoln...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 481. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 482/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 482): 'Szabina Tápai ( born 30 January 1986 in Kiskunhalas ) is a second handballer who plays for Szent Ist...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Szabina Tápai ( born 30 January 1986 in Kiskunhalas ) is a second handballer who plays for Szent Ist...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The use of the Internet has allowed animated maps to become interactive ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 482. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 483/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 483): 'In 2010 , Buick introduced a new version of the Shanghai GM GL8 Luxury Business Edition ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2010 , Buick introduced a new version of the Shanghai GM GL8 Luxury Business Edition ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A ship , the `` Warrnambool '' class Corvette HMAS `` Bathurst '' , was sunk during these operations...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 483. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 484/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 484): 'In 1992 Tungamirai was replaced by Perence Shiri as Air Force commander ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1992 Tungamirai was replaced by Perence Shiri as Air Force commander ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kunkuri is the coldest region in Nichghat during the summer and Pandrapat is the hottest region in U...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 484. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 485/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 485): 'NOA can also be used in the calculation of free cash flow ( FCF ) and hence in the discounted cash f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'NOA can also be used in the calculation of free cash flow ( FCF ) and hence in the discounted cash f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Although iron in many catalytic applications is generally less active , it is less expensive and `` ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 485. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 486/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 486): 'Riggs was born in Atlanta , Georgia , the son of Gina Ann ( née Carlton ) and William Riggs . He has...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Riggs was born in Atlanta , Georgia , the son of Gina Ann ( née Carlton ) and William Riggs . He has...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In March 1904 , his brother was kidnapped for ransom in Mexico and taken across the border to West T...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 486. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 487/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 487): 'Shikiji Station is an unmanned station with a wooden side platform that is directly connected to a s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Shikiji Station is an unmanned station with a wooden side platform that is directly connected to a s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Riverton was a parliamentary electorate in the Southland region of New Zealand ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 487. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 488/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 488): 'The established Republican George Allen ran for a third term , but lost to Democrat Chuck Robb ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The established Republican George Allen ran for a third term , but lost to Democrat Chuck Robb ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the State election in November 1856 , 81 Republicans , 31 Democrats and 8 Americans were elected ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 488. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 489/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 489): 'He is the son of the Dutch cyclist Adri van der Poel , brother of Mathieu van der Poel and grandson ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is the son of the Dutch cyclist Adri van der Poel , brother of Mathieu van der Poel and grandson ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Benoni is also served by the OR Tambo International Airport in Kempton Park and close to the airport...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 489. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 490/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 490): 'In the Middle Ages , Spain saw a slow Christian reconquest of Muslim territories ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the Middle Ages , Spain saw a slow Christian reconquest of Muslim territories ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1961 , Tamran Heiman , an American Muslim , was married to Chamran ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 490. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 491/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 491): 'Stävlö or Stäflö is a fortress in Kalmar Municipality of Sweden ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stävlö or Stäflö is a fortress in Kalmar Municipality of Sweden ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The top ten was completed by Sekiguchi , Sette Câmara and Zhou ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 491. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 492/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 492): 'He died in Oneida on February 20 , 1930 and was buried at the Glenwood Cemetery in Albany , New York...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He died in Oneida on February 20 , 1930 and was buried at the Glenwood Cemetery in Albany , New York...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On August 2 , 2011 , defeated Reeves Billy Hewes ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 492. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 493/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 493): 'Both sailed to London from Quebec ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Both sailed to London from Quebec ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was created in 1996 from parts of Prescott and Russell and Stormont , Dundas and Glengarry , when...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 493. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 494/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 494): 'In November , the Royals CF Ramón Ramírez purchased from Boston Red Sox in exchange for the RP Coco ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In November , the Royals CF Ramón Ramírez purchased from Boston Red Sox in exchange for the RP Coco ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2010 , David Thompson was sworn in by the death of the prime minister , Freundel Stuart ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 494. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 495/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 495): 'Thimilarmadam is a small town in Sri Lanka , within Northern Province ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thimilarmadam is a small town in Sri Lanka , within Northern Province ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In later years , his poems were more metaphysical and included contemporary events in `` Dominion Ja...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 495. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 496/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 496): 'Sammamish lake enters the Issaquah Creek in the park ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sammamish lake enters the Issaquah Creek in the park ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The concept of ( visual ) subjective direction is very old ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 496. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 497/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 497): 'After his death , the Marxist element of communism would be intensified in some atheist movements ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After his death , the Marxist element of communism would be intensified in some atheist movements ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He died in Albany , New York on February 20 , 1930 , and was buried at the Glenwood Cemetery in Onei...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 497. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 498/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 498): 'The tower house , built in the 9th and 10th centuries , was expanded into a castle in the Middle Age...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The tower house , built in the 9th and 10th centuries , was expanded into a castle in the Middle Age...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The scenes in the marshes were also shot in Kent , at Riverside Country Park in Gillingham ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 498. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 499/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 499): 'This time the vocals were mastered by Matti Auerkallio and the EP performed by Pirkka Rännäli ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This time the vocals were mastered by Matti Auerkallio and the EP performed by Pirkka Rännäli ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stille is a river of Schmalkalden . It flows into the river Schmalkalde in the town Thuringia , Germ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 499. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 500/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 500): 'Article 4 is Islamic , and the Guardians ' Council ensures that all articles of the Constitution and...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Article 4 is Islamic , and the Guardians ' Council ensures that all articles of the Constitution and...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There was later an Australian version of `` Press Your Luck '' from 1987 to 1988 on Seven Network ho...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 500. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 501/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 501): 'Graf won in the final 6 -- 4 , 6 -- 1 against Jana Novotná ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Graf won in the final 6 -- 4 , 6 -- 1 against Jana Novotná ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Colombres is one of three parishes ( administrative districts ) in Asturias , a municipality in the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 501. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 502/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 502): 'John John F. A. Cecil ( the only child of George and Cornelia Stuyvesant Vanderbilt ) married the Br...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'John John F. A. Cecil ( the only child of George and Cornelia Stuyvesant Vanderbilt ) married the Br...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2004 , Barclays of Barclaycard took over sponsorship of the Premier League ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 502. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 503/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 503): 'Homer Township was established in 1837 by a department of Albion Township ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Homer Township was established in 1837 by a department of Albion Township ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1942 , Breton collaborated with artist Lam on the publication of Breton 's poem `` Fata Morgana '...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 503. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 504/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 504): 'After Anna was found , Martha married a man by the name of George I Eisenhauer ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After Anna was found , Martha married a man by the name of George I Eisenhauer ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'From 2001 to 2007 , it was part of Jalu District . From 1983 to 1987 , it was part of Ajdabiya Distr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 504. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 505/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 505): 'Our theories can not be both dogmatic scientific constructs and at the same time be vitalistic ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Our theories can not be both dogmatic scientific constructs and at the same time be vitalistic ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He and his family moved from Colorado to Wyoming to Oregon until he was about 5 years old when she s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 505. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 506/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 506): 'The 1953 Labour Party deputy leadership election took place on 29 October 1953 , after the current d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 1953 Labour Party deputy leadership election took place on 29 October 1953 , after the current d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A mechanical nightingale is introduced in `` and is used to replace a real nightingale for a princes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 506. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 507/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 507): 'The Greeks and Romans identified the region in the 3rd century BC as Gangaridai , a mighty kingdom o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Greeks and Romans identified the region in the 3rd century BC as Gangaridai , a mighty kingdom o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hasegawa 's research also includes the Japanese history of the Russian Revolution of 1917 and Soviet...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 507. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 508/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 508): 'From 1913 to 1962 , the University of Loma Linda taught basic sciences , but sent its students to Lo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From 1913 to 1962 , the University of Loma Linda taught basic sciences , but sent its students to Lo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He met with a group of Boston 's most influential musical leaders to discuss a school based on the c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 508. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 509/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 509): 'Sir Richard Wells died on 26 November 1957 , and was succeeded by his son , Sir Charles Maltby Wells...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sir Richard Wells died on 26 November 1957 , and was succeeded by his son , Sir Charles Maltby Wells...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Thomas Joseph Mboya was a very good friend and confidante of Eric '' , words of 3rd Kenyan Presid...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 509. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 510/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 510): 'The original squadron 159 was to be dissolved during the First World War , but the idea was formed s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The original squadron 159 was to be dissolved during the First World War , but the idea was formed s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The new algorithm , however , would divide the original interval into a larger and a smaller subinte...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 510. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 511/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 511): 'Daka sends his American followers together with a zombie that he controls via an electronic brain im...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Daka sends his American followers together with a zombie that he controls via an electronic brain im...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1882 , he was named to the Quebec Superior Court for Joliette district , later serving in Montmag...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 511. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 512/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 512): 'Two weeks before the invasion , the corps was pulled out of the First Army and placed in the Third A...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two weeks before the invasion , the corps was pulled out of the First Army and placed in the Third A...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Parfit married Janet Radcliffe Richards in 1982 . They met in 2010 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 512. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 513/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 513): 'The Handbook of the Birds of India and Pakistan is the `` magnum opus '' of Indian ornithologist Sal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Handbook of the Birds of India and Pakistan is the `` magnum opus '' of Indian ornithologist Sal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gérard Depardieu was born to a wealthy Parisian family and married Lucie Guignot , Élisabeth Dominiq...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 513. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 514/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 514): '92 km of NH 2 passes through the District from the south end to the north end ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '92 km of NH 2 passes through the District from the south end to the north end ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Irish team consisted of Ken Doherty , Fergal O Brien and Michael Judge along with Murphy as a su...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 514. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 515/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 515): 'The PATH service from Exchange Place runs east to the World Trade Center , north to Newark Penn Stat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The PATH service from Exchange Place runs east to the World Trade Center , north to Newark Penn Stat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Examples of ceramics include white porcelain or white porcelain decorated with cobalt , copper blue ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 515. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 516/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 516): 'It is south of Evansville Regional Airport and to the east of the Sunset Memorial Gardens cemetery ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is south of Evansville Regional Airport and to the east of the Sunset Memorial Gardens cemetery ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He claimed that four Ukrainian soldiers were killed , while two of his men were wounded during the f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 516. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 517/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 517): 'Ila , formerly Ilevolden , is a tram stop on the Ila , located at Trondheim Tramway , Trondheim in T...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ila , formerly Ilevolden , is a tram stop on the Ila , located at Trondheim Tramway , Trondheim in T...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The idea is to coordinate the data in the x or y type of one of the corners of the rectangles ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 517. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 518/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 518): 'The following year , studios and offices for the station were moved to 1484 Beech Street in Hornells...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The following year , studios and offices for the station were moved to 1484 Beech Street in Hornells...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is part of the James River Watershed via the Appomattox River and the Bush River ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 518. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 519/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 519): 'The independent hooper - scholar Kathryn Lindskoog argued that Lewis ' scholarship is not reliable a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The independent hooper - scholar Kathryn Lindskoog argued that Lewis ' scholarship is not reliable a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the Netherlands , Owobale was born into a Nigerian father and a Dutch mother ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 519. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 520/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 520): 'The east end was cut off to Sheridan Boulevard in 1963 , and to Wadsworth Boulevard in 1967 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The east end was cut off to Sheridan Boulevard in 1963 , and to Wadsworth Boulevard in 1967 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The climate during this period was a mixture of two different seasons , a rainy season and a shorter...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 520. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 521/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 521): 'The company was formed from the merger between Total Peripherals Group , founded by David and Vicky ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The company was formed from the merger between Total Peripherals Group , founded by David and Vicky ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Antarctic Peninsula is an island archipelago off the western coast of the Wilhelm archipelago in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 521. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 522/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 522): 'Ceremonial music ( `` rokon fada '' ) is performed as a status symbol , and musicians are generally ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ceremonial music ( `` rokon fada '' ) is performed as a status symbol , and musicians are generally ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mohammad Hariri is currently President of the Board of Directors , and Abdullah Orkun KAYA is the CE...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 522. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 523/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 523): 'In 1993 , he graduated from Kuban State University as a philologist and teacher of the same language...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1993 , he graduated from Kuban State University as a philologist and teacher of the same language...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They came to Russia from Poland in the 18th century , and their language contains Russian , German a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 523. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 524/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 524): 'The building on the north side of the field , previously owned by Sino Swearingen Aircraft Corp. , f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The building on the north side of the field , previously owned by Sino Swearingen Aircraft Corp. , f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Giedraitis is a Polish language family name . The Lithuanian-language version is Giedroyć ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 524. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 525/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 525): 'Dr. Ridenour was married to Eleanor Fay ; they had two daughters , Nancy Page Buchanan ( née Ridenou...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dr. Ridenour was married to Eleanor Fay ; they had two daughters , Nancy Page Buchanan ( née Ridenou...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In Jin Yong 's `` wuxia '' novel `` The Legend of the Condor Heroes '' , Guo Sheng is the ancestor o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 525. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 526/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 526): 'Maria has a Master in Italian Theater and Culture , is a member of the European Film Academy and spe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Maria has a Master in Italian Theater and Culture , is a member of the European Film Academy and spe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He came to AS Trenčín in summer 2013 together with his teammate Haris Hajradinović from Croatian clu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 526. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 527/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 527): 'Mathematically , ligand efficiency ( LE ) can be defined as the ratio of gibbs of free energy ( Α G ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mathematically , ligand efficiency ( LE ) can be defined as the ratio of gibbs of free energy ( Α G ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The album was recorded in six different sessions , both at Santa Monica Sound Records in Santa Monic...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 527. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 528/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 528): 'As in 1955 , the American League beat the National League , this time 6 -- 3 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As in 1955 , the American League beat the National League , this time 6 -- 3 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On August 30 , 2017 , the Chicago Red Stars acquired Kristie Mewis from the Dash for Brian ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 528. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 529/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 529): 'Taylor was born on June 11 , 1890 in Winton , North Carolina , around Simeon P. and Kate ( Ward ) Ta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Taylor was born on June 11 , 1890 in Winton , North Carolina , around Simeon P. and Kate ( Ward ) Ta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Full Circle '' was produced by Paul Rodger , the manager of Birtles Shorrock Goble , and mixed by...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 529. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 530/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 530): 'It was well known for its local wine , produced in the fertile farms that characterized the parish u...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was well known for its local wine , produced in the fertile farms that characterized the parish u...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The countries currently on the list are Iran , North Korea , Sudan , and Syria ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 530. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 531/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 531): 'Nicklas Kulti defeated Yevgeny Kafelnikov 6 -- 7 , 6 - 3 , 6 - 4...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nicklas Kulti defeated Yevgeny Kafelnikov 6 -- 7 , 6 - 3 , 6 - 4...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Founded by Gianni Ratto in 1959 , it has presented actors such as Fernanda Montenegro , Sérgio Britt...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 531. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 532/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 532): 'Together , these three features completely determine the direct structure of the algebraic product ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Together , these three features completely determine the direct structure of the algebraic product ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Hunters film is a French crime - horror - thriller - film from 2011 by Chris Briant , produced b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 532. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 533/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 533): 'The `` Friends of the Art and Design School of Putney '' protects the school and promotes the intere...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The `` Friends of the Art and Design School of Putney '' protects the school and promotes the intere...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On the second day , Jen sees a girl very similar to her lost sister , Jess ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 533. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 534/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 534): 'It is then sold in the brewer 's house , which is virtually a pub until all the beer has been drunk ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is then sold in the brewer 's house , which is virtually a pub until all the beer has been drunk ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1945 Big Ten Conference team represented Northwestern University during the 1945 Northwestern Wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 534. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 535/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 535): 'His real first name was Peter , known by the name of David ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His real first name was Peter , known by the name of David ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The specification is a method for describing teaching strategies ( educational models ) and educatio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 535. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 536/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 536): 'The Sonata was premiered at the Aeolian Hall in London in 1919 by Landon Ronald with Billy Reed on t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Sonata was premiered at the Aeolian Hall in London in 1919 by Landon Ronald with Billy Reed on t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This settlement was part of Charlotteville , where Fort Norfolk was built in 1813 with a seat for 30...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 536. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 537/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 537): 'The species was first formally collected in 1805 by the English botanist James Edward Smith in `` An...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The species was first formally collected in 1805 by the English botanist James Edward Smith in `` An...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1749 , Boishebert assigned Acadian Joseph Godin dit Bellefontaine to lead the Acadian militia in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 537. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 538/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 538): 'The Atlantic Bronze Age was unified by a number of regional centers of metal production , defined by...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Atlantic Bronze Age was unified by a number of regional centers of metal production , defined by...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Instead , some theorists think that a state similar to the new hegemon in culture and preferences wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 538. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 539/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 539): 'Methoni is a village and a former municipality in Pieria regional unit , Greece ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Methoni is a village and a former municipality in Pieria regional unit , Greece ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Buchan Caves are located approximately east northeast ( or five hours ' drive ) from Melbourne ,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 539. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 540/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 540): 'The unique art and style of this idol is structural and is in perfect proportion to it ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The unique art and style of this idol is structural and is in perfect proportion to it ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Trust also manages corporate sites on behalf of other organizations on Wrexham Industrial Estate...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 540. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 541/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 541): 'Issaquah Creek enters the Sammamish lake in the park ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Issaquah Creek enters the Sammamish lake in the park ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The route was renumbered in 1997 in 450 and the following year it was acquired by the Punchbowl Bus ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 541. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 542/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 542): 'Inside there are colonial objects , including an old church bell of 1801 and historical paintings an...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Inside there are colonial objects , including an old church bell of 1801 and historical paintings an...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Henri Kontinen and Christopher Rungkat and Cedrik-Marcel Stebe won in the final 7 -- 6 , 3 -- 6 , 10...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 542. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 543/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 543): 'On 30 June 2016 , Infante agreed to a Minor League Deal with the Braves and was released by the Atla...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 30 June 2016 , Infante agreed to a Minor League Deal with the Braves and was released by the Atla...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The agency was founded in 1976 in Chicago , and it entered the New York market in 1998 and Milwaukee...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 543. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 544/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 544): 'Note : the votes were cast on 20 January , but both chambers met on 21 January in a joint session to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Note : the votes were cast on 20 January , but both chambers met on 21 January in a joint session to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Auaxa cesadaria is a moth of the Geometridae family that is found in Taiwan , China and Japan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 544. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 545/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 545): 'They could perhaps have been relatives , instead members of a family bonded by blood to serve Dracul...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They could perhaps have been relatives , instead members of a family bonded by blood to serve Dracul...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Air Manas has its own certified aviation-operational base for the technical maintenance of aircraft ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 545. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 546/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 546): 'A codice _ 1 can not be copied because its copy constructor and assignment operators are explicitly ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A codice _ 1 can not be copied because its copy constructor and assignment operators are explicitly ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The codice 2 branch is updated daily , and the branch codice 3 is updated every 6 months ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 546. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 547/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 547): 'Hannah died in March 1977 and went retired the following year ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hannah died in March 1977 and went retired the following year ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Zorina was the grandmother of sisters Elizabeth ( Lizzie ) , Katherine , and Kristina Lieberson , wh...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 547. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 548/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 548): 'Kevin Spacey ( Henry Drummond ) and David Troughton ( Matthew Harrison Brady ) starred in a 2009 rev...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kevin Spacey ( Henry Drummond ) and David Troughton ( Matthew Harrison Brady ) starred in a 2009 rev...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On November 18th , 2010 Polumenta published his second studio album `` Buntovnik '' ( Rebel ) under ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 548. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 549/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 549): 'Container glass has a lower magnesium oxide and sodium oxide content than flat glass , and a higher ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Container glass has a lower magnesium oxide and sodium oxide content than flat glass , and a higher ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Born in Nanhui , he attended engineering school in Nanjing and spent a year at the University of Cal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 549. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 550/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 550): 'Portsmouth won 4 -- 1 , with goals by John Anderson , Cliff Parker and two of Bert Barlow ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Portsmouth won 4 -- 1 , with goals by John Anderson , Cliff Parker and two of Bert Barlow ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tversky was married to fellow prominent psychologist Amos Tversky ( 1937-1996 ) until his death in 1...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 550. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 551/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 551): 'The old high school became the Upper School , while the new building became lower school ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The old high school became the Upper School , while the new building became lower school ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Swift Current is a protected reservoir near Braddock Lake , Saskatchewan , Canada ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 551. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 552/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 552): 'Ricardo Mello won the first edition of the tournament against Eduardo Schwank 6 -- 4 , 6 -- 2 in the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ricardo Mello won the first edition of the tournament against Eduardo Schwank 6 -- 4 , 6 -- 2 in the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After May 4 , 2012 , Gordon M. Snow was replaced by Joseph M. Demarest and then Michael S. Welch wit...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 552. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 553/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 553): 'The first music video for the album , filmed and edited for the song 'Trust You ' , was made by Pier...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The first music video for the album , filmed and edited for the song 'Trust You ' , was made by Pier...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He defeated Gilbert , with Quentin Gilbert and Pierre Roche the titles in WRC3 and JWRC won not long...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 553. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 554/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 554): 'Besides Irina , several other actresses portrayed Lena Olin in the course of the series ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Besides Irina , several other actresses portrayed Lena Olin in the course of the series ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mercy Lewis was the child of Philip Lewis and Mary ( Cass ) Lewis , formally known as Mercy Allen ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 554. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 555/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 555): 'The Mine Letneye is a large copper mine in the south-west of the Oblast Orenburg in Russia ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Mine Letneye is a large copper mine in the south-west of the Oblast Orenburg in Russia ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Published in Belgium in September 2003 , `` Sharko III '' was later released in France , the Netherl...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 555. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 556/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 556): 'Beulah Maria Carter was born on July 6 , 1877 in Binghamton , New York . His father was James Sherma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Beulah Maria Carter was born on July 6 , 1877 in Binghamton , New York . His father was James Sherma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If `` M '' is simplified ( that is , `` B '' = `` C '' = 0 ) , one can use the diagonal formula ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 556. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 557/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 557): 'In 1858 he graduated from the Galatasaray Gymnasium in Istanbul and became a teacher in Shumen , whe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1858 he graduated from the Galatasaray Gymnasium in Istanbul and became a teacher in Shumen , whe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Louise Bédard ( born 1955 ) is a Canadian dancer , choreographer and teacher . Since 1983 she has be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 557. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 558/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 558): 'Elizabeth Smylie and Patrick McEnroe won in the final 7 -- 5 , 6 -- 3 against Jana Novotná and Jim P...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Elizabeth Smylie and Patrick McEnroe won in the final 7 -- 5 , 6 -- 3 against Jana Novotná and Jim P...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He received the title of a baron of Harsefeld in Bremen , then in Swedish hands when he was a French...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 558. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 559/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 559): 'Cheadle Heath railway station served a railway station which between 1901 and 1968 was the village o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cheadle Heath railway station served a railway station which between 1901 and 1968 was the village o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Speedy Long received 27,735 votes ( 45.5 percent ) to Walker 's 33,250 ( 54.5 percent ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 559. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 560/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 560): 'Here is a list of schools in Harford County , Maryland.There are listed both public schools and pari...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Here is a list of schools in Harford County , Maryland.There are listed both public schools and pari...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The mountain was named by Marie Henri Daniel Gauthier after the French navy officer Jules de Blossev...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 560. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 561/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 561): 'Of the nine games played in Warsaw , Legia won six and drew three ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Of the nine games played in Warsaw , Legia won six and drew three ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The state of unrest in Hungary began to spread to Poland ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 561. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 562/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 562): 'It is currently the fifth highest skyscraper in Perth after QV.1 , the BankWest Tower , City Square ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is currently the fifth highest skyscraper in Perth after QV.1 , the BankWest Tower , City Square ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The CCV presents miniature versions of important historical buildings and buildings , together with ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 562. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 563/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 563): 'In 1968 , the boardwalk Bowl followed the Tangerine Bowl , and the Pecan Bowl moved within Texas , f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1968 , the boardwalk Bowl followed the Tangerine Bowl , and the Pecan Bowl moved within Texas , f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Orson Welles saw Schilling in Florida and followed him into New York ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 563. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 564/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 564): 'The construction of the new stadium was held for 4 years and was inaugurated on 21 August 1974 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The construction of the new stadium was held for 4 years and was inaugurated on 21 August 1974 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During Bing Xin 's absence , Han receives multiple visions of her past-mostly her happy moments with...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 564. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 565/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 565): '`` The problem with Popplers '' is the second episode in the fifteenth production time of '' Futuram...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` The problem with Popplers '' is the second episode in the fifteenth production time of '' Futuram...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Castlebrae Community High School is a secondary school in the Greendyke area of Edinburgh ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 565. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 566/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 566): 'The elastodynamic wave equation for anisotropic media can be expressed as...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The elastodynamic wave equation for anisotropic media can be expressed as...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This musical style was part of the wider galant movement in art at the time ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 566. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 567/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 567): 'In 1977 , the county decided to move the county seat of Brunswick County from Bolivia to Southport ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1977 , the county decided to move the county seat of Brunswick County from Bolivia to Southport ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Virgil Weigel is democratic member of the House of Representatives of Kansas and represents the 56th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 567. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 568/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 568): 'Funimation released the series in North America and licensed the first Blu-ray and DVD set on Januar...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Funimation released the series in North America and licensed the first Blu-ray and DVD set on Januar...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In July 2013 , Lone Star comics sold three of their five remaining shops in Plano , Hurst and Mesqui...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 568. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 569/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 569): 'Robert Morris Ogden was born on 6th July 1877 in Binghamton , New York , his father was James Sherma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Robert Morris Ogden was born on 6th July 1877 in Binghamton , New York , his father was James Sherma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Massy was the son of Col. Hugh Massy and the elder brother of General Eyre Massey , 1st Baron Clarin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 569. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 570/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 570): 'Alexandra Prince was born in Hamburg , her father is Brazilian and her mother German ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alexandra Prince was born in Hamburg , her father is Brazilian and her mother German ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Downtown Cincinnati is west of Day Heights ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 570. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 571/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 571): 'The interogator read a lot of papers then came to Abdulla in the four months stress , the intorgator...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The interogator read a lot of papers then came to Abdulla in the four months stress , the intorgator...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'These alkali solvents dissolve the silicon in a highly anisotropic way , with some crystallographic ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 571. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 572/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 572): 'He appeared as George Tyrell in the disaster film `` Daylight '' 1996 and as Archie Mullen in the mo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He appeared as George Tyrell in the disaster film `` Daylight '' 1996 and as Archie Mullen in the mo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is a sculptor who has designed several monumental sculptures , winning the award-including `` Sen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 572. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 573/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 573): 'The Gradis family was Jewish , and had probably moved to Bordeaux from Portugal around 1495 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Gradis family was Jewish , and had probably moved to Bordeaux from Portugal around 1495 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The two main water systems are the Esmeraldas River in the north and the Guayas to the south ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 573. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 574/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 574): 'Eduardo Schwank won the first edition of the tournament against Ricardo Mello 6 -- 4 , 6 -- 2 in the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Eduardo Schwank won the first edition of the tournament against Ricardo Mello 6 -- 4 , 6 -- 2 in the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The lyrics were written by the Lebanese singer Majida El Roumi and the music was rearranged by Kadim...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 574. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 575/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 575): 'Szabo 's method of sybilizing protection was , however , vulnerable to double attacks ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Szabo 's method of sybilizing protection was , however , vulnerable to double attacks ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hodge ( fl . c.1769 ) was one of James Boswell 's cats immortalized in Samuel Johnson 's Life of Joh...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 575. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 576/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 576): 'On September 5 , Rey Bucanero , another NJPW wrestler , started a CMLL tour working as a member of B...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On September 5 , Rey Bucanero , another NJPW wrestler , started a CMLL tour working as a member of B...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The construction of the new stadium was held for 4 years and was inaugurated on 21 August 1974 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 576. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 577/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 577): 'Viktor Arkadyevich Bely , also Viktor Aronovich Bely ( January 14 , 1904 - March 6 , 1983 ) , was a ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Viktor Arkadyevich Bely , also Viktor Aronovich Bely ( January 14 , 1904 - March 6 , 1983 ) , was a ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kathy Rinaldi defeated Bonnie Gadusek at 6 -- 1 , 6 -- 3 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 577. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 578/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 578): 'Pyrgus alpinus is a butterfly of the Hesperiidae family , from Ghissar to northern India and Western...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pyrgus alpinus is a butterfly of the Hesperiidae family , from Ghissar to northern India and Western...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She was portrayed by Tao Okamoto in the 2013 film `` The Wolverine '' in which Mariko is Wolverine '...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 578. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 579/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 579): 'Yohannes IV was survived by his elder `` legitimate '' son `` Ras '' Araya Selassie Yohannes and by ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Yohannes IV was survived by his elder `` legitimate '' son `` Ras '' Araya Selassie Yohannes and by ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On August 12 , 2003 Kottonmouth Kings released their 3rd compilation album , their 1st live album an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 579. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 580/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 580): 'Where possible , the average daily patronage is taken over from the financial calendar or from last ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Where possible , the average daily patronage is taken over from the financial calendar or from last ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'While Governor , he may have founded the colonies '' Colonia Domitiana Lindensium `` ( Lincoln ) and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 580. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 581/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 581): 'Lars Rehmann defeated Rehman 6 -- 4 , 3 -- 1 ( Retired Greg Rusedski )...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lars Rehmann defeated Rehman 6 -- 4 , 3 -- 1 ( Retired Greg Rusedski )...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He replaced Derrek Lee as backup at 1st Base to John Mabry ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 581. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 582/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 582): 'Midlake opened in Dallas and Oklahoma City and Mudhoney opened for all the shows from Portland to Se...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Midlake opened in Dallas and Oklahoma City and Mudhoney opened for all the shows from Portland to Se...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The south shaft reached a depth of 2980 feet and a central shaft was sunk in 1928 to reach a depth o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 582. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 583/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 583): 'Wenzel Render , a privileged imperial mason and monumental architect , was the first to die ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wenzel Render , a privileged imperial mason and monumental architect , was the first to die ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are nearly 2,000 islands along the coastline , of which about three quarters are uninhabited ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 583. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 584/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 584): '8 January : reception of Kyle Kubitza and Nate Hyatt for Ricardo Sanchez from the Kansas City Royals...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '8 January : reception of Kyle Kubitza and Nate Hyatt for Ricardo Sanchez from the Kansas City Royals...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pemberton Township is located in the 3rd Congressional District and is part of the 8th State Legisla...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 584. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 585/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 585): 'In 1993 he graduated from the Kuban State University as a philologist and teacher of the Russian lan...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1993 he graduated from the Kuban State University as a philologist and teacher of the Russian lan...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A market was perceived for future tours and destinations , Scandinavia followed in April 1975 and in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 585. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 586/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 586): 'Easthope , born on 29 October 1784 in Tewkesbury , was the eldest son of Thomas Easthope of Elizabet...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Easthope , born on 29 October 1784 in Tewkesbury , was the eldest son of Thomas Easthope of Elizabet...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In December 2002 , Facundo and Tamara Vargas joined the team of the morning radio show , `` Ya Párat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 586. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 587/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 587): 'Alaric informs Caroline that Stefan ( Paul Wesley ) has stopped looking for a way to get Damon and B...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alaric informs Caroline that Stefan ( Paul Wesley ) has stopped looking for a way to get Damon and B...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He pioneered important developments in wood sculpting , in parallel with those driven by Domenico Pi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 587. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 588/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 588): 'The track remains one of two tracks that Brant also co-wrote , the other track was ever from the sam...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The track remains one of two tracks that Brant also co-wrote , the other track was ever from the sam...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was the third single of the group and their first release on Silvertone Records ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 588. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 589/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 589): 'Powerful Stuff is a studio album by Memphis Blues - a rock band The Fabulous Thunderbirds from 1989 ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Powerful Stuff is a studio album by Memphis Blues - a rock band The Fabulous Thunderbirds from 1989 ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Another name of Wincham Park ( Sports Direct Arena ) was hosted by Frank Skinner in the popular BBC1...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 589. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 590/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 590): 'Her mother is Austrian , while her father is a Kenyan ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Her mother is Austrian , while her father is a Kenyan ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The nationalists , led by volunteers of the RSS and the AGD , took the opportunity and took Piparia ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 590. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 591/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 591): 'Gus Van Sant also named Chantal Akerman 's film `` Jeanne Dielman , 23 Quai du Commerce , 1080 Bruss...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gus Van Sant also named Chantal Akerman 's film `` Jeanne Dielman , 23 Quai du Commerce , 1080 Bruss...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Russian villain , however , is an interesting and sometimes original menace ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 591. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 592/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 592): 'In 1856 in their home in Cambridge , Agassiz founded a school for girls from Boston ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1856 in their home in Cambridge , Agassiz founded a school for girls from Boston ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The planned electrification of the route Blackpool Nord to Manchester was announced in December 2009...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 592. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 593/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 593): 'There are 22 species in the genus , 17 species have a dextral bowl and 5 species are sinistral ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are 22 species in the genus , 17 species have a dextral bowl and 5 species are sinistral ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is used for training medical students and doctors of Bayero University ( Residency Training ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 593. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 594/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 594): 'The previous record was 185 by the Kansas City Royals when they lost to the St. Louis Cardinals in 1...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The previous record was 185 by the Kansas City Royals when they lost to the St. Louis Cardinals in 1...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Petra Feucht ( born 22 March 1965 ) , born Petra Keppeler , is a former professional tennis player f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 594. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 595/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 595): 'Ibirapuera Park is located in this sub-prefecture , as is the main campus of the Federal University ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ibirapuera Park is located in this sub-prefecture , as is the main campus of the Federal University ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A few weeks later , Fixell defended his position in an interview with HumansVsZombies.org ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 595. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 596/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 596): 'Other industrial zones are in North Karachi , Korangi , F.B . - Area , Landhi and Port Qasim ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Other industrial zones are in North Karachi , Korangi , F.B . - Area , Landhi and Port Qasim ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mode 9 was born on 14 June 1975 as the third child of his parents in the state of Osun , but claims ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 596. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 597/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 597): '`` Tuscumbia '' was sold on November 29 , 1865 at an auction in Mound City to W. K. Adams ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Tuscumbia '' was sold on November 29 , 1865 at an auction in Mound City to W. K. Adams ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Born in 1783 in Sheffield , the second son of Isabella and Thomas Beilby , the family went to Birmin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 597. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 598/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 598): 'Along with Mary Murphy , Tony and Len Goodman are released in an infomercial for the Core Rhythms Wo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Along with Mary Murphy , Tony and Len Goodman are released in an infomercial for the Core Rhythms Wo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Here is an example in Smalltalk , of a lazy accessor method to return the value of a variable using ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 598. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 599/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 599): 'Drietoma is a village and municipality in the region of Trenčín in the district Trenčín in north-wes...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Drietoma is a village and municipality in the region of Trenčín in the district Trenčín in north-wes...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The South Deep Mine is a large mine in the northern part of Gauteng in Southern Africa ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 599. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 600/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 600): 'Her works were widely printed in the photographic press and published in book form in the 1950s thro...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Her works were widely printed in the photographic press and published in book form in the 1950s thro...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'However , there was only one scholarship awardee and Qian published two or three more articles than ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 600. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 601/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 601): 'Cheilea dormitoria is a species of marine limpet-like sea snail , a small gastropod mollusk in the f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cheilea dormitoria is a species of marine limpet-like sea snail , a small gastropod mollusk in the f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His case was widely publicized in religious , as well as medical publications ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 601. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 602/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 602): 'The original route began at US 410 in Touchet and went north to Eureka and east to SSH 3E west of Pr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The original route began at US 410 in Touchet and went north to Eureka and east to SSH 3E west of Pr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In addition to several gameplay footage , livestreaming members of the crew also produce `` Let 's P...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 602. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 603/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 603): 'It is situated east of Oklahoma City and southeast of Ardmore ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is situated east of Oklahoma City and southeast of Ardmore ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'His Othello was detained in 1964 with Jay Robinson as Iago and in 1981 with Ron Moody as Iago on vid...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 603. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 604/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 604): 'Granel was an important influence on a number of French philosophers , including Jacques Derrida , J...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Granel was an important influence on a number of French philosophers , including Jacques Derrida , J...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the second season , Eugene O ’ Neill and his play `` Bound East for Cardiff '' as well as '' Trif...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 604. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 605/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 605): 'The words were written by the previous mayor , James Rolph , and dedicated to them by the mayor Edwa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The words were written by the previous mayor , James Rolph , and dedicated to them by the mayor Edwa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The A58 connects North Brabant 's three major cities Eindhoven , Tilburg and Breda with the cities G...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 605. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 606/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 606): 'In 1891 he became Professor of General and Analytical Chemistry and Professor of Inorganic Chemistry...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1891 he became Professor of General and Analytical Chemistry and Professor of Inorganic Chemistry...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hojo is spoken by Nachi Nozawa in Japanese and by Paul Eiding in English ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 606. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 607/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 607): 'The aircraft was located on a domestic flight from Goma to Ndjili via Kisangani ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The aircraft was located on a domestic flight from Goma to Ndjili via Kisangani ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` What you are , do what you want '' was covered in 1979 by The Dramatics ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 607. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 608/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 608): 'In the action they suffered five men wounded ; the British had no casualties ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the action they suffered five men wounded ; the British had no casualties ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the United Kingdom , meskaline is a class A drug in purified powder form , but dried cactus can b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 608. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 609/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 609): 'On August 20 , 2012 , the video hosting service was finished and the remaining Google Video content ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On August 20 , 2012 , the video hosting service was finished and the remaining Google Video content ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two of Joest 's apprentices were Joos van Cleve ( his brother ) , and Barthel Bruyn ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 609. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 610/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 610): 'He frequently observed ballet performances at the Paris Opera and often attended lessons at the danc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He frequently observed ballet performances at the Paris Opera and often attended lessons at the danc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Golumbu River or Columbu River is a tributary of the Miniş River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 610. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 611/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 611): 'Kiss Country plays a mixture of current and older country music , with the emphasis on modern artist...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kiss Country plays a mixture of current and older country music , with the emphasis on modern artist...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The list of works by Thommessen includes vocal works , chamber music pieces and numerous symphonic m...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 611. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 612/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 612): 'occupied Finland , Prussia and Poland ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'occupied Finland , Prussia and Poland ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The show was based on Jackson Davies ' apos ; Beachcombers Constable John Constable character ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 612. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 613/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 613): 'Sadat came to power after the assassination of Hosni Mubarak in a referendum in which he was the onl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sadat came to power after the assassination of Hosni Mubarak in a referendum in which he was the onl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mueller won his first World Series of Poker bracelet and $ 194,909 only 11 days after his second in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 613. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 614/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 614): 'A few months later , Tintin and his girlfriend , Molly Milevic ( Abby Meates ) , go with Toadie and ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A few months later , Tintin and his girlfriend , Molly Milevic ( Abby Meates ) , go with Toadie and ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'KOTC : Fight to Live was an event held on 14 May 2011 at San Manuel Casino in San Bernardino , Calif...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 614. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 615/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 615): 'He won the first Prix de Rome for painting in 1813 and the second Prix de Rome in 1814 for his paint...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He won the first Prix de Rome for painting in 1813 and the second Prix de Rome in 1814 for his paint...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stukley had submitted false , but not necessarily hostile , evidence against Raleigh ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 615. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 616/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 616): 'The very limited edition has a rare first print of only 2,000 copies and contained 150 screen printi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The very limited edition has a rare first print of only 2,000 copies and contained 150 screen printi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The bank is Owned by United Bank of India & is jointly sponsored by the Government of India , Govern...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 616. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 617/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 617): 'Also in 1749 he was made a Fellow of the Royal Society and in 1754 was elected Fellow of the Royal C...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Also in 1749 he was made a Fellow of the Royal Society and in 1754 was elected Fellow of the Royal C...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In October 1560 , he secretly met with the English ambassador , Nicolas Throckmorton , in Paris , an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 617. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 618/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 618): 'The Albele River is a tributary of the Ciolanu River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Albele River is a tributary of the Ciolanu River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The names of domestic goans are included in the list below , with the name of the team concerned sta...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 618. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 619/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 619): 'Burstwick is a few miles from the local market town of Keyingham and the villages of Hedon and Thorn...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Burstwick is a few miles from the local market town of Keyingham and the villages of Hedon and Thorn...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Enter through the southern gate , turn left and worship on the east side Ganapathy , Shiva and Ayyap...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 619. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 620/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 620): 'This version was released on August 18 , 2016 in North America and on January 5th , 2017 in Europe a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This version was released on August 18 , 2016 in North America and on January 5th , 2017 in Europe a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Irish team consisted of Ken Doherty , Fergal O ’ Brien and Michael Judge along with Murphy as su...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 620. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 621/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 621): 'On 31 July 2015 , Moore was signed by the Chicago Bears and released by the Bears on 5 September 201...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 31 July 2015 , Moore was signed by the Chicago Bears and released by the Bears on 5 September 201...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'According to the United States Census Bureau , Harmony Township is a total area of which is land and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 621. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 622/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 622): 'Juan Carlos Ferrero won in the final 7-6 , 6-2 , against Guillermo Cañas ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Juan Carlos Ferrero won in the final 7-6 , 6-2 , against Guillermo Cañas ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Marc Bergevin ( born August 11 , 1965 ) is a Canadian professional ice hockey executive and former p...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 622. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 623/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 623): 'Its natural habitats are subtropical or tropical forest and subtropical or tropical dry swampland ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Its natural habitats are subtropical or tropical forest and subtropical or tropical dry swampland ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'If the mechanical mode frequency is smaller than the typical separation of the optical modes ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 623. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 624/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 624): 'The Pope ruled William 's marriage to Agnes as illegitimate and Marie was given the throne ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Pope ruled William 's marriage to Agnes as illegitimate and Marie was given the throne ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The band comprised Peter Forbes , Roger Capello , Claes Bure , Peter Björk , Anders Hector and Chino...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 624. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 625/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 625): 'It is a well-studied organism in the discipline of European biology , was an early and important mod...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is a well-studied organism in the discipline of European biology , was an early and important mod...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Liparulo was born in West Point , Utah , and attended the Weber State University in New York ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 625. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 626/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 626): 'Both series were drawn by Joel Goss and Michael Kaluta , and written by Gary Gianni ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Both series were drawn by Joel Goss and Michael Kaluta , and written by Gary Gianni ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'RAF Ash has been closed and the site was sold in July 1998 and is now used by The Bunker , an Intern...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 626. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 627/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 627): 'Yvonne died in 1988 , and Pat died in 2007 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Yvonne died in 1988 , and Pat died in 2007 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Under the British Raj , Bijapur District was part of the Bombay Presidency ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 627. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 628/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 628): 'Archaeological sites on the state and national historical registers include :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Archaeological sites on the state and national historical registers include :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Socioeconomically , many Malaysian Chinese work or study in Singapore due to its proximity to Malays...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 628. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 629/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 629): 'As assistant to Nicolaier in Göttingen , Carl Flügge discovered the bacterium Clostridium tetani , w...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As assistant to Nicolaier in Göttingen , Carl Flügge discovered the bacterium Clostridium tetani , w...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He died in Mauritius on 28 August 1901 . He had married , in Edinburgh in 1870 , Charlotte , the dau...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 629. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 630/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 630): 'The station had a signal box which was originally built at the eastern end of the station and provid...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The station had a signal box which was originally built at the eastern end of the station and provid...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The company was formed from the merger between Total Peripherals Group , founded by David and Vicky ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 630. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 631/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 631): 'Syed Zainuddin was married to the Ummatullah - daughter of Qazi Ghulam Murtaza of Tijara ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Syed Zainuddin was married to the Ummatullah - daughter of Qazi Ghulam Murtaza of Tijara ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The show was broadcasted simultaneously on Fox8 in Australia , Sky TV in New Zealand and on Channel ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 631. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 632/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 632): 'The Galbena River is a tributary of the Dunăreana River in Romania ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Galbena River is a tributary of the Dunăreana River in Romania ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Moines is included in the Warren County -- West Des Moines , Metropolitan Statistical Area IA ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 632. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 633/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 633): 'According to Jon Uren , Marketing Director of Warner Music Europe , the song also had an `` early ''...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'According to Jon Uren , Marketing Director of Warner Music Europe , the song also had an `` early ''...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Finally the Dirk and his son Sean leave the wilderness and discover that a war is brewing between th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 633. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 634/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 634): 'In April 2014 , 2-5 cavalry used from 1 ABCT , 1CD to Europe to support Operation Combined Resolve I...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In April 2014 , 2-5 cavalry used from 1 ABCT , 1CD to Europe to support Operation Combined Resolve I...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Although it was never played in the series , elements of the gameplay were used for the Powerball , ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 634. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 635/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 635): 'Akshuat dendropark ( Russian : Акшуатский дендропарк ) is a natural monument ( Ulyanovsk Oblast prot...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Akshuat dendropark ( Russian : Акшуатский дендропарк ) is a natural monument ( Ulyanovsk Oblast prot...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wesleyan Seminary was founded in 1831 as Genesee College by Methodist Episcopal Church ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 635. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 636/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 636): 'Jelena Dokić won 6 -- 2 , 6 - 3 against Anastasia Myskina in the final ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jelena Dokić won 6 -- 2 , 6 - 3 against Anastasia Myskina in the final ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Ludlow Group formations of the county of Galway include the Salrock beds of Ireland and the Croa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 636. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 637/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 637): 'A grandson of Henry Dennis was Frederick Herbert Wood Mus.Doc , who was organist of Blackpool Parish...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A grandson of Henry Dennis was Frederick Herbert Wood Mus.Doc , who was organist of Blackpool Parish...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Almost every poem by Amichai is a statement about the universal human condition '' and Amichai is...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 637. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 638/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 638): 'The Vanga Kingdom was the first powerful seafaring nation of South Asia , especially Bengal ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Vanga Kingdom was the first powerful seafaring nation of South Asia , especially Bengal ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Marco Polo '' is the fifth episode of the HBO - original series '' The Sopranos '' and the eighth...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 638. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 639/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 639): 'The album is being released in two versions . The digipack limited edition and the standard edition ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The album is being released in two versions . The digipack limited edition and the standard edition ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sparkman High School in Harvest , Huntsville , Sparkman School in Alabama , Sparkman Drive in Somerv...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 639. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 640/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 640): 'The Brocklesby Stakes is a British horse race , remarkable as the traditional opening race of the Br...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Brocklesby Stakes is a British horse race , remarkable as the traditional opening race of the Br...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They will soon encounter twins Timmy and Tommy Reston in their Ford Mustang , which were also invite...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 640. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 641/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 641): 'He then presented the weekend bulletin on `` Seven News Sydney '' , replacing Ian Ross , who took ov...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He then presented the weekend bulletin on `` Seven News Sydney '' , replacing Ian Ross , who took ov...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The movie does not clarify the reason why Usha likes and then rejects Rajan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 641. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 642/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 642): 'Georges Merle died in Paris in 1881 , and his son Hugues Merle also became painter ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Georges Merle died in Paris in 1881 , and his son Hugues Merle also became painter ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This species is caught regularly along the coasts of Sicily , Italy , Greece , Crete , France , Turk...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 642. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 643/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 643): 'In 1989 Roxus supported respective Australian bands , Poison and Bon Jovi , on their international t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1989 Roxus supported respective Australian bands , Poison and Bon Jovi , on their international t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Drietoma is a village and municipality in the Trenčín region in the district of Trenčín in north-wes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 643. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 644/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 644): 'Kunkuri is the coldest region in Nichghat during the summer and Pandrapat is the hottest region in U...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kunkuri is the coldest region in Nichghat during the summer and Pandrapat is the hottest region in U...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1883 New York Metropolitans finished with a 54 -- 42 record , fourth place in the American Assoc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 644. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 645/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 645): 'Justice Felix Reginald Dias Bandaranaike II ( 17 January 1891 - 26 October 1951 ) was a Sri Lankan (...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Justice Felix Reginald Dias Bandaranaike II ( 17 January 1891 - 26 October 1951 ) was a Sri Lankan (...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ben Peterson of AllMusic gave the album 4 out of 5 stars and described it as '' never imaginative an...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 645. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 646/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 646): 'The Turks , Tibetans , Muslim Arabs and the Tang competed for control over Central Asia until the co...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Turks , Tibetans , Muslim Arabs and the Tang competed for control over Central Asia until the co...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The east end was cut off to Sheridan Boulevard in 1963 , and to Wadsworth Boulevard in 1967 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 646. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 647/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 647): 'The Basque players , either for the Spanish or French teams , dominate international competitions ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Basque players , either for the Spanish or French teams , dominate international competitions ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As a songwriter , Lars Ankerstjerne has written songs for Nik & Jay , Burhan G and Rasmus Seebach ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 647. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 648/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 648): 'Rickey was contracted by Kissell in 1940 as an infielder and spent 69 years with the Cardinals organ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Rickey was contracted by Kissell in 1940 as an infielder and spent 69 years with the Cardinals organ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Zăbrătău River is a tributary of the Bota Mare River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 648. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 649/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 649): 'His descendant of many other people , his father fought at war and decided to stay in Paraguay when ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His descendant of many other people , his father fought at war and decided to stay in Paraguay when ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Rădoteasa River or Rădocheasa River is a tributary of the Cărbunele River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 649. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 650/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 650): 'Examples of such factors include rape , fraternization , good behavior , or any other factors that w...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Examples of such factors include rape , fraternization , good behavior , or any other factors that w...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He studied music history at the University of Vienna under Guido Adler and Curt Sachs , and studied ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 650. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 651/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 651): 'The Buchan Caves are located about east to the northeast ( or five hours drive ) from Lakes Entrance...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Buchan Caves are located about east to the northeast ( or five hours drive ) from Lakes Entrance...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The traditional clothing of Ruska Roma is based on the traditional Russian and Kalderash clothes and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 651. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 652/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 652): 'Djurgårdens IF U18 beat Malmö FF U18 with 3 -- 0 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Djurgårdens IF U18 beat Malmö FF U18 with 3 -- 0 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cheadle Heath railway station was a railway station , which between 1901 and 1968 served the village...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 652. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 653/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 653): '`` Always and Forever '' , written by Alan Durant and illustrated by Debi Gliori , was nominated for...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Always and Forever '' , written by Alan Durant and illustrated by Debi Gliori , was nominated for...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The paper reports on the economy , politics , developments in corporate and labour law , commercial ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 653. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 654/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 654): 'Two quasi-similar C contractions have the same minimal function and therefore the same spectrum ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two quasi-similar C contractions have the same minimal function and therefore the same spectrum ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alexandra Prince was born in Hamburg , her father is German and her mother is Brazilian ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 654. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 655/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 655): 'They could have been relatives , instead members of a family tied by blood to serve Dracula ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'They could have been relatives , instead members of a family tied by blood to serve Dracula ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In between these two cities the road ( unlike the current asphalt road ) followed the route of the o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 655. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 656/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 656): 'According to Robert von Torigni , the mother of Humphrey Duvelina , sister of Gunnora , was a concub...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'According to Robert von Torigni , the mother of Humphrey Duvelina , sister of Gunnora , was a concub...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bhilai is located in Chhattisgarh , India at Bhilai Airport ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 656. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 657/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 657): 'Robertson is a railway station in Robertson , New South Wales , on the Unanderra railway line -- Mos...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Robertson is a railway station in Robertson , New South Wales , on the Unanderra railway line -- Mos...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Elati is a village in the Kozani regional unit , Greece ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 657. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 658/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 658): 'Joseph , however , is mostly satisfied , but unhappy , and unfulfilled at his core ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Joseph , however , is mostly satisfied , but unhappy , and unfulfilled at his core ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The following is a list of all state highways in Waller County , Texas maintained by the Texas Depar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 658. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 659/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 659): 'Johann Rupert , Rupert 's eldest son , is now CEO of Richemont and Chairman of Remgro ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Johann Rupert , Rupert 's eldest son , is now CEO of Richemont and Chairman of Remgro ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In June of 1921 , the Detroit Tigers Perritt sold the Giants ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 659. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 660/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 660): 'His nephews include actors Nikhil Nanda and Armaan Jain , and businessman Ranbir Kapoor ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'His nephews include actors Nikhil Nanda and Armaan Jain , and businessman Ranbir Kapoor ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He predicted Zhabotinsky chemical reactions , in particular the Belousov - oscillating reaction ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 660. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 661/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 661): 'He married Mary Ellen Blanche Crookes ( 1870-1935 ) in 1901 , daughter and co-founder of Septimus Wi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He married Mary Ellen Blanche Crookes ( 1870-1935 ) in 1901 , daughter and co-founder of Septimus Wi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Beaumont was baptised in Edworth near Biggleswade and she was born in 1652 . Her parents were John a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 661. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 662/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 662): 'Lennox Island 6 is located in Fernwood , Prince Edward Island , approximately to the west of the Bed...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lennox Island 6 is located in Fernwood , Prince Edward Island , approximately to the west of the Bed...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '96 % of people spoke at home only English , the second most common languages were 1.5 % Samoan , 1 %...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 662. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 663/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 663): 'On 2 February 2009 , the French striker , in agreement with the Brazilian team , cancelled his contr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 2 February 2009 , the French striker , in agreement with the Brazilian team , cancelled his contr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Archdale is a residential area at Starmount ( South Boulevard in Arrowood and South Charlotte ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 663. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 664/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 664): 'Fox Reality Channel recorded the ceremony on October 2 , 2007 , and aired it on October 13 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fox Reality Channel recorded the ceremony on October 2 , 2007 , and aired it on October 13 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alexander Seton also commissioned the tomb of his friend the architect William Schaw at Dunfermline ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 664. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 665/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 665): 'Calcium modulating ligand ( CAMLG or CAML ) , also known as calcium-modulating cyclophilin ligand , ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Calcium modulating ligand ( CAMLG or CAML ) , also known as calcium-modulating cyclophilin ligand , ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Each week , Chunt , Usidore , and Arnie interview magical creatures to introduce the listener to new...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 665. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 666/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 666): 'On 4 January 2015 , Soane Patita Paini Mafi announced that he would appoint Tonga 's Bishop , Pope F...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 4 January 2015 , Soane Patita Paini Mafi announced that he would appoint Tonga 's Bishop , Pope F...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Individuals and families from around Bloomington , Normal , Hudson , Lexington and elsewhere come ou...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 666. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 667/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 667): 'Devon still delivers the hard drive to Chuck ; when he returns to Ellie , however , it is revealed t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Devon still delivers the hard drive to Chuck ; when he returns to Ellie , however , it is revealed t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Following the closure of Hollywood Park , the race was moved to Santa Anita Park in 2014 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 667. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 668/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 668): 'In 2012 , when the band separated from Virginia Beach , we moved between Los Angeles and Texas ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2012 , when the band separated from Virginia Beach , we moved between Los Angeles and Texas ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Linguists sometimes claim that when a generation of children learn a pidgin as their first language ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 668. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 669/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 669): 'Margot A. Thien ( born December 29 , 1971 in San Diego , California ) is an American American compet...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Margot A. Thien ( born December 29 , 1971 in San Diego , California ) is an American American compet...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a juice shop which provides fresh juice for all ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 669. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 670/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 670): 'The Asher family and her husband Brent Tworetzky have two sons , Zuckerberg and Simi , who live in N...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Asher family and her husband Brent Tworetzky have two sons , Zuckerberg and Simi , who live in N...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is the biggest private club in Houston and one of the largest in the world , with over 3,300 memb...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 670. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 671/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 671): 'From the west from Lucin , the long route along the Union Pacific Railroad rail is unimproved ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'From the west from Lucin , the long route along the Union Pacific Railroad rail is unimproved ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the late 1970s , Willie Francis lived in Canada and worked in Jamaica for several years before re...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 671. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 672/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 672): 'Constantine Giannaris ( born 1959 in Athens ) is a Greek film director , screenwriter , and actor ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Constantine Giannaris ( born 1959 in Athens ) is a Greek film director , screenwriter , and actor ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In October 2007 , he signed with SANFL in the West Adelaide Football Club for three years ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 672. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 673/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 673): 'Seremban is part of the Nilai constituency of the Malaysian Parliament 's Dewan Rakyat , currently r...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Seremban is part of the Nilai constituency of the Malaysian Parliament 's Dewan Rakyat , currently r...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dancing With The Stars team consisted of : Lindsay Arnold , Sharna Burgess , Keo Motsepe , Kym Johns...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 673. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 674/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 674): 'Pratt had left Vickers in 1912 to work at J. Samuel White in Cowes ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pratt had left Vickers in 1912 to work at J. Samuel White in Cowes ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Maredudd married Margaret ferch Dafydd , the daughter of Dafydd Fychan , Lord of Anglesey , and his ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 674. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 675/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 675): 'The date for the executions of the three Quakers - Evangelists , William Robinson , Marmaduke Stephe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The date for the executions of the three Quakers - Evangelists , William Robinson , Marmaduke Stephe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Square was opened by President Choummaly Sayasone and Lao President Alexander Lukashenko on July...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 675. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 676/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 676): 'He meets Kekesfalva 's paralyzing daughter Edith and develops deep affection and subtle compassion f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He meets Kekesfalva 's paralyzing daughter Edith and develops deep affection and subtle compassion f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cloud9 is the native IDE for the BeagleBone Black single board computer , which is primarily program...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 676. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 677/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 677): 'It was classified as a new kind in 2015 within the new genus '' Gigantopelta `` and was described wi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was classified as a new kind in 2015 within the new genus '' Gigantopelta `` and was described wi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'They came to Russia in the 18th century from Poland , and their language includes Polish , German , ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 677. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 678/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 678): 'Ibn Tahir decides to return to Alamut and kill Hassan ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ibn Tahir decides to return to Alamut and kill Hassan ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '`` Baie St. Paul '' has a load capacity of 24,430 tons and a gross tonnage of 37,690 tons according ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 678. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 679/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 679): 'In 1957 , USAFE also announced that its 50th FBW would receive the new F-100D Super Sabre ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1957 , USAFE also announced that its 50th FBW would receive the new F-100D Super Sabre ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Robert Maass was born in East Orange , New Jersey , to German immigrants Hedwig and Clara Maass ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 679. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 680/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 680): 'Utah asserts a lead of 60 -- 34 -- 4 , while BYU claims that Utah 57 -- 31 -- 4 leads ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Utah asserts a lead of 60 -- 34 -- 4 , while BYU claims that Utah 57 -- 31 -- 4 leads ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The .eu domain is also used as it is shared with other EU Member States ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 680. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 681/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 681): 'It is found throughout the central palaearctic , from Turkey , Cyprus , and Lebanon , through Iraq ,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is found throughout the central palaearctic , from Turkey , Cyprus , and Lebanon , through Iraq ,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On May 11 , President McCulloch Davis appointed brigadier general ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 681. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 682/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 682): 'As long as they are evaluated as profitable , rich food sources will be advertised by the scouts whe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As long as they are evaluated as profitable , rich food sources will be advertised by the scouts whe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In February 2018 , Tamplin was under police investigation after alleged `` gangster threats '' were ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 682. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 683/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 683): 'Busabout Wagga Wagga is an Australian private bus company that was founded in 1916 as Fearnes Coache...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Busabout Wagga Wagga is an Australian private bus company that was founded in 1916 as Fearnes Coache...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Within the UGent network , a range of digital resources are available as part of an `` electronic li...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 683. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 684/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 684): 'Instead , they could have been relatives , perhaps members of a family connected by blood to serve D...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Instead , they could have been relatives , perhaps members of a family connected by blood to serve D...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The most important innovation of the efficient matrix method is the development of hierarchical algo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 684. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 685/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 685): 'Philip Marlowe was not exactly my idea of Elliott Gould , but anyway there we were ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Philip Marlowe was not exactly my idea of Elliott Gould , but anyway there we were ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In other words , `` die '' or `` remember that you will remember '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 685. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 686/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 686): 'Lake Vernon is located in Tiltill Valley in the northern sector of Yosemite National Park north of t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lake Vernon is located in Tiltill Valley in the northern sector of Yosemite National Park north of t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1968 , the boardwalk Bowl followed the Tangerine Bowl , and Pecan Bowl moved from Abilene to Texa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 686. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 687/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 687): 'Bianca Maria Sforza was married to Maximilian on 16 March 1494 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bianca Maria Sforza was married to Maximilian on 16 March 1494 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The following schools are located in Takanini ( the schools in Rosehill , Papakura , Opaheke are exc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 687. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 688/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 688): 'An example comes from the treatment of transsexual women and black women in prison ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An example comes from the treatment of transsexual women and black women in prison ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indy - Legend Gordon Johncock , Veteran Stan Fox and Buddy Lazier , who have made the race for the f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 688. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 689/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 689): 'The city of Cortland , near the western border of the county , is surrounded by the town of Cortland...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The city of Cortland , near the western border of the county , is surrounded by the town of Cortland...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Earl Bales Park is large park in Toronto and the former city of North York , Ontario , with the East...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 689. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 690/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 690): 'A virtual instrument is a kind of synthetic instrument that is purely software defined ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A virtual instrument is a kind of synthetic instrument that is purely software defined ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'the definition can be extended to standard or non-standard ( arbitrary ) points as follows :...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 690. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 691/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 691): 'During 1942 `` Whitehall '' was adopted by the national community of Cheltenham , Gloucestershire , ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During 1942 `` Whitehall '' was adopted by the national community of Cheltenham , Gloucestershire , ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'On May 24 , 2017 , Lajunen signed a 1 year contract with KHL from HC Spartak Moscow ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 691. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 692/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 692): 'The Irfon defines the northern limit of the Builth Wells area between Llanwrtyd Wells and Mynydd Epy...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Irfon defines the northern limit of the Builth Wells area between Llanwrtyd Wells and Mynydd Epy...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The official wife of Ieyoshi was Princess Takako ( 1795 - 1840 ) , sixth daughter of Prince Arisugaw...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 692. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 693/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 693): 'Where possible , the average daily patronage from the financial calendar or last year is taken from ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Where possible , the average daily patronage from the financial calendar or last year is taken from ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Peak family remained in Kilallah for only a few years , when the house was purchased by a Mr Fle...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 693. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 694/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 694): 'A reference to the epic image also appears in the late ( c. AD 400 ) Odyssean poet Nonnus :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A reference to the epic image also appears in the late ( c. AD 400 ) Odyssean poet Nonnus :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former segments of the State Road 52 include Roth Lane , in Dade City , and North 21st Street and Lo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 694. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 695/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 695): 'In 2012 , Duncan appeared next to Romola Garai in Scrubber , a film by Amanda Hale written and direc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2012 , Duncan appeared next to Romola Garai in Scrubber , a film by Amanda Hale written and direc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The river Zăbrătău is a tributary of the River Bota Mare in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 695. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 696/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 696): 'The region is famous for its white wines but also for its sparkling wines ( white , red and rosé ) ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The region is famous for its white wines but also for its sparkling wines ( white , red and rosé ) ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The current mayor ( from 2013 to 2017 ) is Fernando Nogueira , elected by the PenCe ( municipal move...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 696. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 697/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 697): 'Garcia de Luna fought on the Spanish side in the Battle of Carabobo , against Simón Bolívar and the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Garcia de Luna fought on the Spanish side in the Battle of Carabobo , against Simón Bolívar and the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was born in Toledo , Ohio , grew up in Minneapolis , Minnesota , and visited the High School for ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 697. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 698/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 698): 'Upland is mentioned in 2008 Hugh Laurie Film `` Street Kings '' as the home of the LAPD Internal Aff...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Upland is mentioned in 2008 Hugh Laurie Film `` Street Kings '' as the home of the LAPD Internal Aff...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Shiawassee County is a civil community of the Bennington Township in the U.S. state of Michigan ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 698. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 699/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 699): 'In the base version of the game , magic-user was one of the original character classes ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the base version of the game , magic-user was one of the original character classes ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He was a scholar in Metaphysical Literature , Theology and Classical sciences ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 699. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 700/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 700): 'In addition , it destroyed 340 houses and damaged 12 , most of which were in Collier County ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In addition , it destroyed 340 houses and damaged 12 , most of which were in Collier County ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Carl Smestad ( 8 May 1888 -- 29 June 1962 ) was a Norwegian industrialist , the son of Reidar Smesta...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 700. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 701/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 701): 'He was considered a liberal Spaniard who practiced liberal and democratic principles for the enforce...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was considered a liberal Spaniard who practiced liberal and democratic principles for the enforce...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During the palatial period , the walls and the most important public buildings were built within the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 701. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 702/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 702): '46 , XX/46 , XY chimerism can be identified during pregnancy , by genetic screening or in early chil...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '46 , XX/46 , XY chimerism can be identified during pregnancy , by genetic screening or in early chil...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tommy John ( born 12 February 1979 ) is an American entrepreneur , who founded the Tom Patterson com...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 702. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 703/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 703): 'Mr Mohammad Shah is the maternal grandfather of Syed Naveed Qamar , the Federal Minister for Petrole...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mr Mohammad Shah is the maternal grandfather of Syed Naveed Qamar , the Federal Minister for Petrole...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Des Moines are included in the Warren County -- West Des Moines , Metropolitan Statistical Area IA ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 703. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 704/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 704): 'Miechucino is a non-operational PKP railway station in the Pomeranian Voivodeship ( Miechucino ) , P...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Miechucino is a non-operational PKP railway station in the Pomeranian Voivodeship ( Miechucino ) , P...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When the Portishead Railway was built in 1866 , the ferry became popular with Clifton Bridge train s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 704. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 705/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 705): 'He is also the second cousin of Georgina Hagen that played Lauren Waters in `` Britannia High '' ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He is also the second cousin of Georgina Hagen that played Lauren Waters in `` Britannia High '' ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bergamo railway station is connected to Milan , Lecco , Cremona , Treviglio , Brescia and Monza with...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 705. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 706/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 706): 'The route was renumbered 450 in 1997 and acquired by the Punchbowl Bus Company the following year ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The route was renumbered 450 in 1997 and acquired by the Punchbowl Bus Company the following year ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It stars Richard Devon and was written by Devon and James Craig ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 706. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 707/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 707): 'The hyperbolic case is similar , with the area of a disk of the intrinsic radius '' R `` in the ( co...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The hyperbolic case is similar , with the area of a disk of the intrinsic radius '' R `` in the ( co...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Where codice 3 is a type qualifier , with the qualified type of codice 27 codice 28 and the unqualif...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 707. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 708/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 708): 'It was based on a novel by James Hardiman and was turned into a screenplay by Robert Suhosky ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was based on a novel by James Hardiman and was turned into a screenplay by Robert Suhosky ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He is a cousin of Hollywood - actor Nehemiah Persoff , composer / conductor Philip Green ( composer ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 708. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 709/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 709): 'In Denmark , there has been conscription since the Viking Age , where a physical man of every 10th c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In Denmark , there has been conscription since the Viking Age , where a physical man of every 10th c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'During the race , Joan Fontaine and Anthony Perkins took over the roles Deborah Kerr and John Kerr p...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 709. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 710/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 710): 'In 1999 Trinity merged with Trinity Mirror to become Mirror Group Newspapers , the largest stable of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1999 Trinity merged with Trinity Mirror to become Mirror Group Newspapers , the largest stable of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Just north of the Card Sound Road intersection , US 1 meets the southern end of Krome Avenue ( State...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 710. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 711/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 711): 'Bertlmann was a close friend and collaborator of the late John Stewart Bell and worked with Walter T...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bertlmann was a close friend and collaborator of the late John Stewart Bell and worked with Walter T...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This half-hour series was broadcast from 22 May to 10 July 1966 on Sundays at 3 p.m. ( East North Am...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 711. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 712/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 712): 'About 1838 , Stephenson returned to Manchester and established himself as a historical and landscape...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'About 1838 , Stephenson returned to Manchester and established himself as a historical and landscape...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Written by Michelle MacLaren and directed by George Mastras , it aired on AMC in the United States a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 712. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 713/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 713): 'Heysi Villarreal ( born 26 August 1986 in Cuba ) is an Olympic and national record holding swimmer f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Heysi Villarreal ( born 26 August 1986 in Cuba ) is an Olympic and national record holding swimmer f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some of the company documents were safeguarded by Victor Jaques , the former secretary of Ina Jorgen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 713. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 714/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 714): 'The immigrants of the postwar period founded the Belarusian Congress Committee of America here in 19...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The immigrants of the postwar period founded the Belarusian Congress Committee of America here in 19...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The magazine is indexed by Brill and published in Academic Search Complete and Scopus ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 714. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 715/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 715): 'A second stone is decorated with a large Latin cross coupled with forked terminals and two crosses i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A second stone is decorated with a large Latin cross coupled with forked terminals and two crosses i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mirambeau is situated on Via Turonensis , the old pilgrimage route from Santiago de Compostela via T...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 715. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 716/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 716): 'In 2012 , he went to Canada to play with London City in the Canadian Soccer League , returning to Se...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2012 , he went to Canada to play with London City in the Canadian Soccer League , returning to Se...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indecisive Marshal de Bono said after him `` Yes '' and towed with him the old ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 716. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 717/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 717): 'In November 2011 , Republicans were elected to all nine seats on the Board . In 2015 four were repla...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In November 2011 , Republicans were elected to all nine seats on the Board . In 2015 four were repla...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sharifah Aini was born on 2 July , 1953 , at Kampung Melayu Majidee , Johor Bahru , and grew up in t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 717. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 718/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 718): 'Nokia also launched mobile applications for its music application on the mobile phones iOS , Android...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nokia also launched mobile applications for its music application on the mobile phones iOS , Android...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the series finale , Mateus Ward at age 13 , portrayed by Stevie , is bar mitzvahed ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 718. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 719/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 719): 'The Lucknow -- Sitapur -- Seramow Provincial State Railway merged with the Bareilly -- Pilibheet Pro...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Lucknow -- Sitapur -- Seramow Provincial State Railway merged with the Bareilly -- Pilibheet Pro...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ayeza Khan ( born January 15 , 1991 in Kinza Khan ) , known as Aiza Khan , is a Pakistani television...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 719. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 720/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 720): 'Hucknall Town was a railway station on the Great Northern Railway from Nottingham to Shirebrook ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hucknall Town was a railway station on the Great Northern Railway from Nottingham to Shirebrook ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nick Swisher opened the top of the fifth inning with a double and achieved in a single to center fie...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 720. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 721/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 721): 'Lana was born on 20 December 1997 in Moscow . Her younger sister , Lina Alexeyevna Fedorova , is als...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lana was born on 20 December 1997 in Moscow . Her younger sister , Lina Alexeyevna Fedorova , is als...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a continental climate on the Werderaner Wachtelberg , which is characterised from the north...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 721. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 722/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 722): 'Stella was born in Nnewi Northern Nigeria into the family of Felix Ebelechukwu and Margaret Modebelu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stella was born in Nnewi Northern Nigeria into the family of Felix Ebelechukwu and Margaret Modebelu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Between 1971 and 1980 , Goolagong Cawley reached five finals , but won only her first and final fina...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 722. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 723/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 723): 'During the first round of the tournament , Sean Loeffler Baker defeated TKO at Bellator 16 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'During the first round of the tournament , Sean Loeffler Baker defeated TKO at Bellator 16 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In biology , biological specificity is the tendency of a characteristic , such as behavior or bioche...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 723. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 724/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 724): 'Redundant communication is supported with replicated data on both channels ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Redundant communication is supported with replicated data on both channels ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Mowbray Park , a public river park , was the site of a large swimming pool built into the river ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 724. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 725/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 725): 'These are the known open protocol specifications that cover the same or similar areas as AMQP :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'These are the known open protocol specifications that cover the same or similar areas as AMQP :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Prakash was the international CIO of Avaya , then the Group CIO of Sage Group and later the CIO of i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 725. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 726/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 726): 'Hjärup is the second largest city in Sweden , Scania , Staffanstorp Municipality , with more than 4,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hjärup is the second largest city in Sweden , Scania , Staffanstorp Municipality , with more than 4,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He played only 18 games and just came to beat 29 times ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 726. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 727/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 727): 'In 2008 the warrant officer ranks of the South African National Defence Force were expanded and the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 2008 the warrant officer ranks of the South African National Defence Force were expanded and the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jason Havelock also composed many songs , the Pop - Symphony - album under the pseudonym Éric Demars...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 727. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 728/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 728): 'She married Eero on June 10 , 1939 and she had two children : Eric Saarinen , born in 1942 , and Sus...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She married Eero on June 10 , 1939 and she had two children : Eric Saarinen , born in 1942 , and Sus...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Another Jesuit from England , William Good joined Daniel soon after , though they had a turbulent re...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 728. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 729/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 729): 'Private school Bal Bhavan is a public school in Mayur Vihar Ph - II near DDA - market Patparganj , D...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Private school Bal Bhavan is a public school in Mayur Vihar Ph - II near DDA - market Patparganj , D...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 1875 , he moved to Watervliet with his parents , who settled in Berrien County ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 729. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 730/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 730): 'Although the Maryland Department of Transportation is headquartered in Baltimore , three of its subo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Although the Maryland Department of Transportation is headquartered in Baltimore , three of its subo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He went to Al and said : `` You have lost a father '' and `` I lost a son '' ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 730. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 731/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 731): 'The inverse of the double exponential function is the double logarithm ( ln ( `` x '' ) ) ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The inverse of the double exponential function is the double logarithm ( ln ( `` x '' ) ) ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'is located at ( 38.998829 , -82.057204 ) along the Ohio River at the mouth of Leading Creek ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 731. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 732/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 732): 'In July 2011 , the competence for the Werris Creek to North Star route was transferred from the Coun...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In July 2011 , the competence for the Werris Creek to North Star route was transferred from the Coun...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hysterocladia unimana is a moth of the Megalopygidae family . It was described by Hopp in 1943 . It ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 732. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 733/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 733): 'There are three main components of the army : a national headquarters , independent commandos and te...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are three main components of the army : a national headquarters , independent commandos and te...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dorothy Kate Richmond , Frances Hodgkins , and Gwen Knight was a contemporary of Stewart ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 733. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 734/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 734): 'Default numeric speed limits apply to all roads where no specific lower maximum speed limit is alrea...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Default numeric speed limits apply to all roads where no specific lower maximum speed limit is alrea...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The area is famous for its sparkling wines , but also for its white wines ( white , red and rosé win...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 734. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 735/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 735): 'The Bozeman Yellowstone International Airport is located on the outskirts of Gallatin Speedway north...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Bozeman Yellowstone International Airport is located on the outskirts of Gallatin Speedway north...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The observable Formula 5 response to a time-dependent field formula 10 is :...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 735. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 736/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 736): 'She was trained in contemporary singing and classical music , and regularly performs in concerts ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She was trained in contemporary singing and classical music , and regularly performs in concerts ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Castle Peak Bay is a bay outside Tuen Mun ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 736. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 737/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 737): 'The role of the corpus callosum in epilepsy is the interhemispheric transmission of epileptiform dis...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The role of the corpus callosum in epilepsy is the interhemispheric transmission of epileptiform dis...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'However , most pink horses have white skin and some blue eyes ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 737. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 738/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 738): 'He was married to Madi Hedd . They acted together in Britain for six years before returning to Austr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was married to Madi Hedd . They acted together in Britain for six years before returning to Austr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are two PLC repeater stations : one at Gamaboi in Mozambique and one at Catope , South Africa ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 738. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 739/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 739): 'The 2007 Ballymore Cup is the fourth edition of the expanded Ballymore Cup and the eighth issue , if...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The 2007 Ballymore Cup is the fourth edition of the expanded Ballymore Cup and the eighth issue , if...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Valea Arsurii River is a tributary of the Valea Mică River in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 739. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 740/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 740): 'Alexandra Fusai and Nathalie Tauziat won 5 : 7 , 6 : 2 , 6 : 2 against Serena Williams and Venus Wil...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alexandra Fusai and Nathalie Tauziat won 5 : 7 , 6 : 2 , 6 : 2 against Serena Williams and Venus Wil...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was opened when the section from Amersfoort to Zutphen was completed ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 740. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 741/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 741): 'After 2015 season Seoul FC Martyrs joined the league , but three new teams Buyeo FC , Siheung Citize...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'After 2015 season Seoul FC Martyrs joined the league , but three new teams Buyeo FC , Siheung Citize...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Charlotte County and White Creek militia used Salem as its base in 1776 ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 741. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 742/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 742): 'In 1871 , Booth married Beatrice Webb , a niece of the historian Thomas Babington Macaulay , and was...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1871 , Booth married Beatrice Webb , a niece of the historian Thomas Babington Macaulay , and was...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Likewise , a non-Malay Malaysian who converts to Islam can claim Bumiputra privileges , provided he ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 742. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 743/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 743): 'By contrast , lemmings are aggressively colored , and behave conspicuously against predators and eve...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'By contrast , lemmings are aggressively colored , and behave conspicuously against predators and eve...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Depending on exact species , the Asian species include and weigh between and the smallest animals in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 743. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 744/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 744): 'However , Roma bought full ownership of David Pizarro , Mirko Vučinić and Marco Cassetti ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'However , Roma bought full ownership of David Pizarro , Mirko Vučinić and Marco Cassetti ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Barrallier Island is a very small uninhabited island , located north-west of French Island in Victor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 744. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 745/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 745): 'Phaecadophora fimbriata is a moth from the Tortricidae family , which is found in India , China , Th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Phaecadophora fimbriata is a moth from the Tortricidae family , which is found in India , China , Th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Banaue Rice Terraces were declared by the Philippine government as a National Cultural Treasure ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 745. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 746/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 746): '`` Crystal '' is the 19th episode of the first season of the CW television series `` The Secret Circ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Crystal '' is the 19th episode of the first season of the CW television series `` The Secret Circ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The architect was Mr. C. Morgan , the contractor Mr. J. D. Verhoewe and the chairman of the action c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 746. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 747/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 747): 'As predicted , only 28 % of the promised amount has been refunded since 2015 ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As predicted , only 28 % of the promised amount has been refunded since 2015 ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The title track was composed by V. Harikrishna and is sung with texts by Yugabharathi by Priya Hemes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 747. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 748/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 748): 'The unpublished ( and possibly unwritten ) stories of the three series are :...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The unpublished ( and possibly unwritten ) stories of the three series are :...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2001 , Sir Michael brought Frank Williams to Williams as Senior Operations Engineer ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 748. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 749/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 749): '`` Baseball Bugs '' was managed by Michael Maltese and written by Friz Freleng ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '`` Baseball Bugs '' was managed by Michael Maltese and written by Friz Freleng ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The company is currently managing opportunistic funds , special credit funds , including multi-strat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 749. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 750/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 750): 'This was the first season for the Giants after the AFL - NFL merger , in which ten American Football...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This was the first season for the Giants after the AFL - NFL merger , in which ten American Football...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was re-released in 2001 on Phyte Records ( CD ) and Platinum Recordings ( 7 `` Format ) and relea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 750. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 751/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 751): 'She was sold on 19 July 1973 and scrapped ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'She was sold on 19 July 1973 and scrapped ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Although sold in Italy , fonzies are manufactured by LU Snack Foods GmbH in Germany ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 751. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 752/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 752): 'The real basis of bloom is that , in the physical world , lenses can never focus perfectly ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The real basis of bloom is that , in the physical world , lenses can never focus perfectly ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leo Thomas Maher was ordained a priest on December 18 , 1943 by Archbishop Mitty in St. Mary 's Cath...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 752. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 753/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 753): 'The first cooperative shop in Wales was established in Bridge Road in 1860 in Cwmbach , which was de...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The first cooperative shop in Wales was established in Bridge Road in 1860 in Cwmbach , which was de...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'is a brominated derivative of phenol with the CHBrO molecular formula ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 753. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 754/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 754): 'In the United Kingdom , mescaline is a class A drug in dried powder form , but cleaned cactus can be...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the United Kingdom , mescaline is a class A drug in dried powder form , but cleaned cactus can be...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Then Martha destroys the evidence when Jack is arrested ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 754. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 755/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 755): 'The PacifiCats were designed by Philip Hercus of Vancouver and Robert Allan Limited of Australia ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The PacifiCats were designed by Philip Hercus of Vancouver and Robert Allan Limited of Australia ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The architect of the first station was Nikolai Kolli , who worked with Le Corbusier on the nearby Ts...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 755. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 756/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 756): 'It also opened for Shiatzy Chen , Yves Saint Laurent , Karl Lagerfeld and Alexander McQueen , and cl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It also opened for Shiatzy Chen , Yves Saint Laurent , Karl Lagerfeld and Alexander McQueen , and cl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Then Jesus attacks Luther before he hides himself in the bathroom ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 756. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 757/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 757): 'Dave Denine is a former Canadian politician in Newfoundland and Labrador , Canada , who served as Mi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dave Denine is a former Canadian politician in Newfoundland and Labrador , Canada , who served as Mi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2001 , Sir Michael brought Frank Williams to Williams as Senior Operations Engineer ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 757. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 758/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 758): 'Where Formula 11 is the natural inclusion of the natural factor and Formula 12 is the first projecti...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Where Formula 11 is the natural inclusion of the natural factor and Formula 12 is the first projecti...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It has served as a forum for speakers ranging from Henry James , William Butler Yeats and William Je...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 758. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 759/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 759): 'Charles Gowan was born in New York in 1849 or in 1850 and emigrated early to Wisconsin ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Charles Gowan was born in New York in 1849 or in 1850 and emigrated early to Wisconsin ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'September 2 : CF Michael Bourn and CF Drew Stubbs activated , C Caleb Joseph , LHP Jayson Aquino and...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 759. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 760/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 760): 'Felix researched in Bielsko , Vienna , Prague , and London . Between 1927 and 1945 , he worked in Je...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Felix researched in Bielsko , Vienna , Prague , and London . Between 1927 and 1945 , he worked in Je...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'He has also saved 3 and he has lost only two games ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 760. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 761/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 761): 'He was musically trained at the Art Academy in Zurich , where he and others also learned to use the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He was musically trained at the Art Academy in Zurich , where he and others also learned to use the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In 2007 Baiano back outside to play with FC Ararat first division team in Armenia ( Asia ) ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 761. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 762/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 762): 'He has edited several books on molecular dynamics and statistical mechanics developments , including...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He has edited several books on molecular dynamics and statistical mechanics developments , including...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Cormos River is a tributary of the River Agris in Romania ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 762. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 763/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 763): 'The fourth came in the second quarter to a pass from Dunlap to Stumpy Thomason ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The fourth came in the second quarter to a pass from Dunlap to Stumpy Thomason ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In the next thirty years , Kriebel and Bates marketed over 100 Warner Sallman works ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 763. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 764/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 764): 'The fortress was once again besieged by French troops under the command of General Zoller , from 22 ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The fortress was once again besieged by French troops under the command of General Zoller , from 22 ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chandos Leigh , 1st Baron Leigh ( June 27 , 1791 - September 27 , 1850 ) was a British poet and land...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 764. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 765/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 765): 'This marine genus occurs in the South China Sea and the East China Sea ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This marine genus occurs in the South China Sea and the East China Sea ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Didkovsky has composed for or performed on a number of CDs including :...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 765. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 766/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 766): 'Kossuth W. Duncan was born in Hindmarsh , the second son of R. B. Duncan , who arrived on board the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kossuth W. Duncan was born in Hindmarsh , the second son of R. B. Duncan , who arrived on board the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The current line - up is Chris Fogal on the guitar and vocals , Forrest Bartosh on drums and Johnny ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 766. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 767/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 767): 'On 26 July 2012 , Neil Heywood was charged with the assassination of Gu Kailai ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 26 July 2012 , Neil Heywood was charged with the assassination of Gu Kailai ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This individual mandate requires a certain amount of health insurance from most individuals and thei...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 767. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 768/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 768): 'Golfito Canton is an airport that serves Puerto Jiménez , the second district of Puerto Jiménez Airp...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Golfito Canton is an airport that serves Puerto Jiménez , the second district of Puerto Jiménez Airp...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sicha described it as `` huge , organic and ... seemingly seriously nocturnal '' -- in fact , active...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 768. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 769/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 769): 'Frank Frank Malina died in Boulogne Billancourt in 1981 , near Paris , France ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Frank Frank Malina died in Boulogne Billancourt in 1981 , near Paris , France ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This was a limited release -- only 300 red vinyl and 200 black vinyl copies were put out ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 769. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 770/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 770): 'Instead , AC3 allows producers to choose input levels over a wide range by representing a measured d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Instead , AC3 allows producers to choose input levels over a wide range by representing a measured d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The remixes for the song were made by Gloria Estefan ’ s personal remixer Pablo Flores and by Tommy ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 770. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 771/772. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 771): 'In 1964 , Igor Moskvin Tamara married Nikolayevna Bratus ....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In 1964 , Igor Moskvin Tamara married Nikolayevna Bratus ....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The 1978 Daytona 500 , the second race of the event , was the 20th round of the 1978 NASCAR Winston ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 771. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 772/772. Batch items: 57\nMLMGenerator.generate: First sentence in batch to be noised (chunk 772): 'He died in Westminster in 1821 , had married Elizabeth , daughter of George Germain , 1st Viscount S...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 57 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'He died in Westminster in 1821 , had married Elizabeth , daughter of George Germain , 1st Viscount S...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The hurricane killed one person directly , and indirectly two in the state ....'\n  MLMGenerator.mlm_infiller: Preparing to pad 57 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([57, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([57, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 57 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 772. Num noised sents from chunk: 57\nMLMGenerator.generate: Finished generate() method. Total sents_output: 49401\nSampling 20000 from 49401 for paws\nSaved 20000 samples for paws to /kaggle/working/alignscore_training_data_20k/paws_20k.jsonl\n\nProcessing dataset: xsum\nxsum: Selecting 40000 from 204045 for creating MLM source material.\nxsum: Using 40000 samples as source for MLM text_c generation.\nGenerating batch MLM summaries for xsum (from 40000 gold summaries)...\nInitializing MLM generator for xsum_gold_summ_batch...\nMLMGenerator: Initialized with 40000 sentences. Batch size: 64.\nMLMGenerator.generate: Starting. Corpus size: 40000, Batch size: 64\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"MLM Batch Processing:   0%|          | 0/625 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"44969685ae284dc995a2bb0946904069"}},"metadata":{}},{"name":"stdout","text":"MLMGenerator.generate: Processing chunk 1/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 1): 'As Chancellor George Osborne announced all English state schools will become academies, the Welsh Go...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As Chancellor George Osborne announced all English state schools will become academies, the Welsh Go...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Discounted bus tickets for 16 to 18 year olds will be rolled out in Greater Manchester, it has been ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 1. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 2/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 2): 'Head coach Jason Strange says Wales Under-20 can take positives from the 34-22 defeat by England in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Head coach Jason Strange says Wales Under-20 can take positives from the 34-22 defeat by England in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 70-year-old man has been found guilty of murdering a fellow pensioner in the Borders....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 2. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 3/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 3): 'A man has been arrested on suspicion of murder following the death of a second man after an incident...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been arrested on suspicion of murder following the death of a second man after an incident...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The firm behind plans for a £357m race track in Ebbw Vale is working on revising the project after t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 3. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 4/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 4): 'Instead of singing the praises of Scotland's capital, the Edinburgh Complaints Choir is voicing a ch...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Instead of singing the praises of Scotland's capital, the Edinburgh Complaints Choir is voicing a ch...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Government estimates for air pollution in Oxford have been deemed \"excessively optimistic\" by the ci...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 4. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 5/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 5): 'Business leaders and an academic have hit out at the Scottish and UK governments over their conduct ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Business leaders and an academic have hit out at the Scottish and UK governments over their conduct ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A request to take pioneer Amy Johnson's aeroplane to her home city of Hull has been refused by the S...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 5. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 6/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 6): 'A £1.1bn rail electrification plan for the Great Western line into south Wales may go over budget, a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A £1.1bn rail electrification plan for the Great Western line into south Wales may go over budget, a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Abyei town may not look like much - a few low brick buildings scattered amongst thatched huts and du...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 6. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 7/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 7): 'The BBC's Children in Need appeal has raised nearly £26.8m on the night, beating 2011's total of £26...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The BBC's Children in Need appeal has raised nearly £26.8m on the night, beating 2011's total of £26...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Romanian prosecutors have charged a communist-era prison commander, Alexander Visinescu, with genoci...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 7. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 8/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 8): 'Tests for diabetes in pregnancy - which affects the developing baby - are taking place too late, war...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tests for diabetes in pregnancy - which affects the developing baby - are taking place too late, war...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bank of England governor Mark Carney has warned of a consumer spending squeeze this year as inflatio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 8. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 9/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 9): 'With Syrian government forces insisting that the air and artillery bombardment of eastern Aleppo is ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With Syrian government forces insisting that the air and artillery bombardment of eastern Aleppo is ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A study of the world's largest subway networks has revealed that they are remarkably mathematically ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 9. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 10/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 10): 'Falkirk goalkeeper Danny Rogers and manager Peter Houston have won an awards double after their side...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Falkirk goalkeeper Danny Rogers and manager Peter Houston have won an awards double after their side...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police investigating the murder of restaurateur Nelson Cheung in County Antrim have charged a man wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 10. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 11/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 11): 'Bicester in Oxfordshire has been chosen as the site for the government's second new garden city, wit...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bicester in Oxfordshire has been chosen as the site for the government's second new garden city, wit...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two men from London have been sent to jail after being found guilty of defrauding two banks, Allied ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 11. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 12/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 12): 'A pilot killed when his light aircraft crashed in Oxfordshire has been named....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A pilot killed when his light aircraft crashed in Oxfordshire has been named....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'South Korea says it has seen indications that the North is preparing more missile launches, possibly...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 12. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 13/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 13): 'For both the political parties and voters, this election campaign has been strange....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'For both the political parties and voters, this election campaign has been strange....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'England forward Rachel Daly has been treated for heat exhaustion after collapsing at the end of a ma...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 13. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 14/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 14): 'The former Conservative MP Jack Aspinwall has died aged 82, his family have confirmed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The former Conservative MP Jack Aspinwall has died aged 82, his family have confirmed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The EU's 27 other leaders have met without the UK's Theresa May to discuss their Brexit negotiation ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 14. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 15/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 15): 'Australia took a giant stride towards levelling the Ashes series as they racked up a huge total and ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Australia took a giant stride towards levelling the Ashes series as they racked up a huge total and ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man in his 20s is recovering after being assaulted in what the police are describing as a paramili...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 15. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 16/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 16): 'A 17th Century wooden bust of the weeping virgin, said to be one of the finest examples of its kind,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 17th Century wooden bust of the weeping virgin, said to be one of the finest examples of its kind,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A baby's cot was damaged and a death threat daubed on a wall during a burglary at a young family's p...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 16. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 17/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 17): 'Jimmy Carr has said the furore over his tax affairs in 2012 could have ended his career....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jimmy Carr has said the furore over his tax affairs in 2012 could have ended his career....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Does the World Cup have to signify a month of booze and junk food in front of the TV, and an exercis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 17. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 18/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 18): 'A Lebanese Sunni Muslim cleric whose group is allied to Syria's government has been killed in the no...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Lebanese Sunni Muslim cleric whose group is allied to Syria's government has been killed in the no...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'UK inflation as measured by the Consumer Prices Index rose to 0.5% in March, according to the Office...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 18. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 19/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 19): 'French gymnast Samir Ait Said suffered a horrific leg break while performing in the vault at the Rio...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'French gymnast Samir Ait Said suffered a horrific leg break while performing in the vault at the Rio...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Watch the film, guess the year and mail us your entry with your name and town before 1230 on Wednesd...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 19. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 20/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 20): 'Republican Senator Lindsey Graham says he has further questions about President Donald Trump's busin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Republican Senator Lindsey Graham says he has further questions about President Donald Trump's busin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mae prinder gweinidogion a chynulleidfaoedd yn gostwng wedi arwain enwad y Presbyteriaid ar Ynys Môn...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 20. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 21/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 21): 'Prospect union members working for Highlands and Islands Airports Limited (Hial) have voted to accep...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Prospect union members working for Highlands and Islands Airports Limited (Hial) have voted to accep...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A teenager accused of helping kill three men who responded to a fake job advert on the Craigslist we...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 21. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 22/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 22): 'Care homes may be charging families for extended periods after a resident has died as well as large ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Care homes may be charging families for extended periods after a resident has died as well as large ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Boris Johnson has said there is an \"attractive alternative future\" for the UK outside the European U...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 22. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 23/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 23): 'Atletico Madrid gained a measure of revenge for their defeat by Real Madrid in last season's Champio...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Atletico Madrid gained a measure of revenge for their defeat by Real Madrid in last season's Champio...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Super League club Warrington Wolves have re-signed Matty Blythe on a one-year deal for the 2017 seas...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 23. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 24/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 24): 'Celtic have won the Scottish Premiership title after nearest challengers Aberdeen lost to Dundee Uni...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Celtic have won the Scottish Premiership title after nearest challengers Aberdeen lost to Dundee Uni...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pat Hickey, a senior member of the International Olympic Committee, has temporarily stood down from ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 24. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 25/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 25): 'Fidget spinners that can puncture the skin have been discovered for sale in the UK by a BBC Watchdog...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fidget spinners that can puncture the skin have been discovered for sale in the UK by a BBC Watchdog...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Andy Robertson has targeted a win over England to make Scotland genuine contenders to reach the 2018...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 25. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 26/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 26): 'Sky News reporter Colin Brazier has admitted he was wrong to handle victims' belongings at the MH17 ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sky News reporter Colin Brazier has admitted he was wrong to handle victims' belongings at the MH17 ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Google has revealed the most popular searches for people around the world looking for universities....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 26. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 27/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 27): 'The deadly 15-hour siege on Pakistan's Mehran naval airbase in Karachi on Monday was carried out by ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The deadly 15-hour siege on Pakistan's Mehran naval airbase in Karachi on Monday was carried out by ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 21-year-old man has died in a collision between a van and a car in Barnsley,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 27. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 28/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 28): 'Final results for every event of the 2014 Sochi Winter Olympics....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Final results for every event of the 2014 Sochi Winter Olympics....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Five hundred permanent jobs are to be created at a new Amazon distribution centre in Bedfordshire....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 28. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 29/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 29): 'US authorities have charged a Ukrainian man alleged to be the mastermind of the world's biggest onli...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'US authorities have charged a Ukrainian man alleged to be the mastermind of the world's biggest onli...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chelsea have \"solemnly and sincerely\" apologised after Brazilian Kenedy posted offensive social medi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 29. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 30/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 30): 'A school's memorial honouring 27 former pupils who died in World War One has been found in a cathedr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A school's memorial honouring 27 former pupils who died in World War One has been found in a cathedr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An America author has won the 2014 International Dylan Thomas Prize....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 30. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 31/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 31): 'Australian Treasurer Scott Morrison has unveiled a new budget which includes a surprise rise in taxa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Australian Treasurer Scott Morrison has unveiled a new budget which includes a surprise rise in taxa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dereck Chisora threw a table at Dillian Whyte during a heated news conference before their British h...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 31. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 32/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 32): 'The mysterious origins of a cathedral are to be the focus of a five-year, £2.5m regeneration project...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The mysterious origins of a cathedral are to be the focus of a five-year, £2.5m regeneration project...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Landlords should be spared any new tax and regulation changes after a \"weak start\" to 2017 for the U...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 32. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 33/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 33): 'Venues across Northern Ireland are being encouraged to sign up to a major breastfeeding support sche...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Venues across Northern Ireland are being encouraged to sign up to a major breastfeeding support sche...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An elderly Chilean tourist who went missing in Edinburgh has been found....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 33. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 34/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 34): 'Sri Lanka's Yala National Park inhabits a remote and wild corner of the south-east, but anarchic beh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sri Lanka's Yala National Park inhabits a remote and wild corner of the south-east, but anarchic beh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ruth Davidson has warned the SNP against using Brexit as an excuse to \"start yet another fratricidal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 34. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 35/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 35): 'Fulham boss Slavisa Jokanovic has criticised the club's transfer policy, declaring he is \"not an imp...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fulham boss Slavisa Jokanovic has criticised the club's transfer policy, declaring he is \"not an imp...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'England captain Alastair Cook's form is a \"big worry\" ahead of the World Cup in Australia and New Ze...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 35. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 36/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 36): 'A serving Royal Marine from Northern Ireland accused of terrorism, fraud and drugs offences will sta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A serving Royal Marine from Northern Ireland accused of terrorism, fraud and drugs offences will sta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dipa Karmakar has become the first Indian woman gymnast to qualify for the Olympic games....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 36. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 37/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 37): 'Port Vale eased to a comfortable win over a lacklustre Doncaster side struggling for goals this seas...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Port Vale eased to a comfortable win over a lacklustre Doncaster side struggling for goals this seas...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A jury in Canada has acquitted a New Brunswick pet shop owner whose python asphyxiated two young boy...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 37. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 38/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 38): 'Technology usually associated with Hollywood blockbusters is being used to help tackle arthritis....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Technology usually associated with Hollywood blockbusters is being used to help tackle arthritis....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than one home every minute will need to be refurbished in the UK between now and 2050, experts ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 38. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 39/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 39): 'Chris Jones has signed a new contract with Cardiff Devils to remain at the Ice Arena Wales for the 2...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Chris Jones has signed a new contract with Cardiff Devils to remain at the Ice Arena Wales for the 2...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Output from Scotland's manufacturing and service sectors fell for the first time in six months durin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 39. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 40/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 40): 'Saudi Arabia has said its military coalition will scale back operations against rebels in Yemen....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Saudi Arabia has said its military coalition will scale back operations against rebels in Yemen....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir Ivan Rogers has resigned from the civil service, days after quitting as the UK's ambassador to t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 40. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 41/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 41): 'A 32-year-old man has been arrested after a six-year-old girl was allegedly abducted from her home....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 32-year-old man has been arrested after a six-year-old girl was allegedly abducted from her home....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rangers manager Ally McCoist reckons Celtic counterpart Ronny Deila would be wrong to write off the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 41. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 42/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 42): 'Shares in Nintendo have fallen sharply after the Japanese gaming giant said Pokemon Go's success wou...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Shares in Nintendo have fallen sharply after the Japanese gaming giant said Pokemon Go's success wou...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 100-year-old Tall Ship from Denmark is to be restored in Northumberland in the hope of recreating ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 42. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 43/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 43): 'A hillwalker has been rescued after getting lost in thick mist and strong winds on the top of Scotla...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A hillwalker has been rescued after getting lost in thick mist and strong winds on the top of Scotla...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nearly 1,000 dead bodies of political activists and suspected armed separatists have been found in P...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 43. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 44/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 44): 'The Rugby Football League will conduct an investigation into crowd trouble that followed Salford's M...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Rugby Football League will conduct an investigation into crowd trouble that followed Salford's M...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '(Close): The London market shrugged off early losses to close higher, helped by gains in bottling fi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 44. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 45/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 45): 'Liberal Democrat leader Nick Clegg has significantly changed his position on the risk of a second el...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Liberal Democrat leader Nick Clegg has significantly changed his position on the risk of a second el...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Despite briefly studying theology at university, it is not often these days, in truth, that I contem...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 45. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 46/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 46): 'On Wednesday, four of the world's largest banks - JP Morgan, Barclays, Citigroup and Royal Bank of S...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On Wednesday, four of the world's largest banks - JP Morgan, Barclays, Citigroup and Royal Bank of S...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The president of Brazil's construction giant Odebrecht has been charged with corruption and money la...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 46. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 47/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 47): 'Plans to turn the old Royal High School building in Edinburgh into a luxury hotel have been rejected...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Plans to turn the old Royal High School building in Edinburgh into a luxury hotel have been rejected...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Swansea City boss Paul Clement has won the Barclays Premier League manager of the month award after ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 47. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 48/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 48): 'Sheffield City Council has agreed to suspend a temporary injunction preventing tree protestors takin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sheffield City Council has agreed to suspend a temporary injunction preventing tree protestors takin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kiefer Sutherland has confirmed he will \"definitely not return in any way\" to his hit TV show, 24....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 48. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 49/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 49): 'David Cameron may look at today's stats on unemployment and wonder why on earth his party is only ne...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'David Cameron may look at today's stats on unemployment and wonder why on earth his party is only ne...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Super League side Wakefield Wildcats have re-signed Huddersfield Giants full-back Scott Grix on a tw...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 49. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 50/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 50): 'The government is to introduce new rules to stop \"politically-motivated\" boycotts by local councils....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government is to introduce new rules to stop \"politically-motivated\" boycotts by local councils....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A house which is said to have inspired Peter Pan author JM Barrie is among several historic sites ac...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 50. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 51/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 51): 'Alfie Hewett reached the British Open final with a 6-3 1-6 6-3 victory over Gordon Reid - only the s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Alfie Hewett reached the British Open final with a 6-3 1-6 6-3 victory over Gordon Reid - only the s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A magistrate who did not report the fact that a criminal suspect was living at his home has been sac...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 51. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 52/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 52): 'An \"unprecedented\" decision was taken to shut Birmingham Cathedral in response to the national terro...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An \"unprecedented\" decision was taken to shut Birmingham Cathedral in response to the national terro...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Vulnerable young people should be allowed to stay in care until they are aged 25, the government's c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 52. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 53/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 53): 'A former captain of one of England's oldest rowing clubs poured beer over a woman before pulling up ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A former captain of one of England's oldest rowing clubs poured beer over a woman before pulling up ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'French businesses are largely continuing to operate normally after the Paris attacks....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 53. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 54/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 54): 'Syrian government warplanes are reported to have bombed several areas in the central province of Ham...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Syrian government warplanes are reported to have bombed several areas in the central province of Ham...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The life of one of World War Two's Spitfire Women has been remembered at a thanksgiving service....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 69]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 69, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 54. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 55/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 55): 'Thousands of workers on zero hours contracts miss out on paid holiday because they are lied to or do...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thousands of workers on zero hours contracts miss out on paid holiday because they are lied to or do...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A new joint task force to help tackle cross-border organised and paramilitary crime is due to have i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 55. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 56/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 56): 'There are worries that changes to funding could hit specialist support for 23,500 pupils who do not ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are worries that changes to funding could hit specialist support for 23,500 pupils who do not ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australia will host England in a three-match series for the first time, after the 2015-16 Premiershi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 56. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 57/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 57): 'A controversial smartphone app which allows passengers to hail a taxi using a mobile phone has launc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A controversial smartphone app which allows passengers to hail a taxi using a mobile phone has launc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leicestershire wicketkeeper Niall O'Brien could be out until the end of July with a calf muscle tear...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 57. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 58/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 58): 'Two towns in the south Wales valleys have been promised an extra £3.2m in European aid for regenerat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two towns in the south Wales valleys have been promised an extra £3.2m in European aid for regenerat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who beheaded his wife at their home has been detained indefinitely under the Mental Health Act...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 58. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 59/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 59): 'More support and recognition is needed for the UK's hyperlocal media sector, a conference on the fut...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More support and recognition is needed for the UK's hyperlocal media sector, a conference on the fut...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The White House has released a picture of Barack Obama skeet-shooting - seemingly to settle a row ov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 59. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 60/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 60): 'Jonathan Rea completed his 13th career double by winning race two in the World Superbikes round at A...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jonathan Rea completed his 13th career double by winning race two in the World Superbikes round at A...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Relatives of men killed in the Kingsmills massacre have accused Republic of Ireland authorities of f...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 60. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 61/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 61): 'Almost half of pupils in England have failed to meet a new tough standard in reading, writing and ma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Almost half of pupils in England have failed to meet a new tough standard in reading, writing and ma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who fell from a pram during an organised race event has died....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 61. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 62/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 62): 'In an editorial I wrote on Monday, after a week of intense anti-terror activity in Brussels, I used ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In an editorial I wrote on Monday, after a week of intense anti-terror activity in Brussels, I used ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been knocked down and killed by a hit-and-run driver in south London....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 63]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 63, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 62. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 63/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 63): 'Liverpool's Raheem Sterling is expected to tell the club he wants a move away from Anfield this summ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Liverpool's Raheem Sterling is expected to tell the club he wants a move away from Anfield this summ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dev Patel was 18 years old when I first interviewed him in 2008 for Danny Boyle's Slumdog Millionair...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 63. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 64/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 64): 'Turkish forces have shot down a Syrian military jet they say was violating their airspace despite wa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Turkish forces have shot down a Syrian military jet they say was violating their airspace despite wa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The BBC says it will not be re-commissioning a third series of Atlantis because the corporation says...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 64. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 65/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 65): 'Leicester manager Claudio Ranieri says he is \"very, very angry\" his team cannot replicate their Cham...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leicester manager Claudio Ranieri says he is \"very, very angry\" his team cannot replicate their Cham...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leyton Orient winger Dean Cox will be out for six months after damaging the cruciate ligament in his...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 65. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 66/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 66): 'Dirk Kuyt says \"everyone laughed\" when he said Feyenoord could win their first Dutch title since 199...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dirk Kuyt says \"everyone laughed\" when he said Feyenoord could win their first Dutch title since 199...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'UK county councils could be \"wasting millions\" on IT services they could buy more cheaply through th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 66. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 67/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 67): 'A grave containing the skeleton of a 12th century woman discovered during museum redevelopment works...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A grave containing the skeleton of a 12th century woman discovered during museum redevelopment works...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A chronology of key events:...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 67. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 68/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 68): 'Tata Steel workers belonging to the Unite union have voted to go on strike in protest at the closure...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tata Steel workers belonging to the Unite union have voted to go on strike in protest at the closure...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mark Allen says he must not allow himself to get frustrated when he faces debutant Mitchell Mann in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 68. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 69/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 69): 'Lawyers for a disabled man who was removed from his Birmingham home and taken to hospital at night a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Lawyers for a disabled man who was removed from his Birmingham home and taken to hospital at night a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'UK Oil & Gas Investments PLC (UKOG) has said its estimation of potential oil near Gatwick airport wa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 69. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 70/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 70): 'An 83-year-old woman with a broken hip waited for an ambulance for three hours in the rain, her son ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An 83-year-old woman with a broken hip waited for an ambulance for three hours in the rain, her son ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Five teenagers who murdered a man in a Liverpool launderette when some of them were 13 years old hav...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 70. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 71/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 71): 'Poor weather conditions could hamper a record-breaking attempt to cross the Pacific Ocean using a so...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Poor weather conditions could hamper a record-breaking attempt to cross the Pacific Ocean using a so...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A group of six holidaymakers has been rescued from Buchan Hill in Galloway by an RAF search and resc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 71. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 72/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 72): 'Celtic manager Ronny Deila praised the impact of midfielders Callum McGregor and Scott Allan in the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Celtic manager Ronny Deila praised the impact of midfielders Callum McGregor and Scott Allan in the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Today is the one day in the year when it's not (that) weird to see Dennis the Menace food shopping w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 72. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 73/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 73): 'Houses were set on fire and an elderly woman was stripped of her clothing and paraded naked through ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Houses were set on fire and an elderly woman was stripped of her clothing and paraded naked through ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 47,500 dogs were abandoned by their owners in the UK last year, figures from the Dogs Trus...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 73. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 74/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 74): 'The mother of Charlie Gard has suggested Â£1.3m donated by the public for her son to undergo experim...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The mother of Charlie Gard has suggested Â£1.3m donated by the public for her son to undergo experim...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Adebayo Akinfenwa scored his first Wycombe goal as they battled hard to earn a 1-1 draw with Accring...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 74. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 75/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 75): 'Comic Relief will no longer invest in tobacco, arms or alcohol companies, after reviewing its invest...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Comic Relief will no longer invest in tobacco, arms or alcohol companies, after reviewing its invest...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leeds Rhinos have confirmed that their half-back Danny McGuire suffered a broken leg in Friday's def...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 75. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 76/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 76): 'A woman whose home was targeted in an arson attack in the Waterside area of Londonderry has said she...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman whose home was targeted in an arson attack in the Waterside area of Londonderry has said she...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Car parts and bikes retailer Halfords has reported a 11.3% rise in pre-tax annual profit to £83.8m....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 76. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 77/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 77): 'Plans to reduce the speed limit in the whole of Belfast city centre to 20 miles per hour have been p...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Plans to reduce the speed limit in the whole of Belfast city centre to 20 miles per hour have been p...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Birmingham boss Gianfranco Zola says an argument between several players after the draw at Rotherham...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 101]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 101, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 77. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 78/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 78): 'Fast-food chain McDonald's has dropped its appeal against a decision to reject plans for a new resta...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fast-food chain McDonald's has dropped its appeal against a decision to reject plans for a new resta...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bidders for the West Midlands rail franchise are being given permission to remove seats and create m...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 78. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 79/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 79): 'One of six people arrested in a counter-terrorism operation in London on Thursday was once suspected...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of six people arrested in a counter-terrorism operation in London on Thursday was once suspected...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A court in France has fined an internet user €2,500 (£1,800; $2,800) for posting a false and malicio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 79. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 80/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 80): 'RBS has finally reached a £200m settlement with investors who say they were duped into handing £12bn...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'RBS has finally reached a £200m settlement with investors who say they were duped into handing £12bn...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'League One newcomers AFC Wimbledon have signed former Shrewsbury Town and Peterborough striker Tyron...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 80. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 81/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 81): 'Trains on Britain's railways are 21 years old on average, an investigation by the Press Association ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Trains on Britain's railways are 21 years old on average, an investigation by the Press Association ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Universities in England face funding cuts of £4.2bn in the coming Spending Review, an e-mail leaked ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 81. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 82/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 82): 'A breed of sheep described as \"the cutest in the world\" has been introduced to Wales for the first t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A breed of sheep described as \"the cutest in the world\" has been introduced to Wales for the first t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Professional Footballers' Association (PFA) will send a booklet on handling depression to all ex...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 82. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 83/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 83): 'Grime star Stormzy hit headlines earlier this week after an unexpected act of generosity....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Grime star Stormzy hit headlines earlier this week after an unexpected act of generosity....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An MP who wrongly claimed Wolverhampton City Council had spent £1,428 on pizzas in India has been ac...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 83. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 84/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 84): 'Pine martens could be reintroduced into the Forest of Dean after an absence of 200 years....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pine martens could be reintroduced into the Forest of Dean after an absence of 200 years....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been charged with attempted rape after a woman was attacked in Shropshire, police said....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 84. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 85/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 85): 'Double Paralympic champion Kadeena Cox MBE has had two of her IPC Athletics World Championships meda...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Double Paralympic champion Kadeena Cox MBE has had two of her IPC Athletics World Championships meda...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A young fox was saved from a sticky situation after its head became wedged in a jam jar....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 85. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 86/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 86): 'On Wednesday Greece votes on the second tranche of reforms required to secure a third bailout from i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On Wednesday Greece votes on the second tranche of reforms required to secure a third bailout from i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'One of Nato's biggest military exercises is under way, with large parts of the training taking place...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 86. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 87/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 87): 'Anne Wood, creator of children's television series In The Night Garden and the Teletubbies, believes...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Anne Wood, creator of children's television series In The Night Garden and the Teletubbies, believes...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'President Donald Trump has decided to delay moving the US embassy in Israel from Tel Aviv to Jerusal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 87. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 88/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 88): 'Noel Edmonds has written to the Lloyds Banking Group chairman accusing the bank of \"foot dragging\" o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Noel Edmonds has written to the Lloyds Banking Group chairman accusing the bank of \"foot dragging\" o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A road rage driver ordered to knit items to avoid a harsher sentence has been admonished after a she...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 88. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 89/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 89): 'Dalbir Singh wades through a field of marigold at his sprawling family farm on the outskirts of Delh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dalbir Singh wades through a field of marigold at his sprawling family farm on the outskirts of Delh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The single TV channel on Vanuatu was established with the help of Radio France Overseas (RFO) and br...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 89. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 90/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 90): 'Eyewitnesses have been giving their accounts of the shooting attack at the Olympia shopping centre i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Eyewitnesses have been giving their accounts of the shooting attack at the Olympia shopping centre i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Lotus technical director James Allison, one of the most highly regarded design engineers in F1, is t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 90. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 91/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 91): 'British javelin record holder Goldie Sayers says she has considered not competing at August's Rio Ol...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'British javelin record holder Goldie Sayers says she has considered not competing at August's Rio Ol...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Colchester were relegated from League One with a home defeat by Burton, who boosted their own promot...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 91. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 92/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 92): 'At least seven villagers have been killed after being kidnapped by suspected Taliban militants, a se...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At least seven villagers have been killed after being kidnapped by suspected Taliban militants, a se...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Stoke City manager Mark Hughes is hoping his side have rediscovered their form in time for the busin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 92. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 93/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 93): 'A six-month-old girl was rescued after her pram was blown into a river by a gust of wind....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A six-month-old girl was rescued after her pram was blown into a river by a gust of wind....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'West Ham defender Angelo Ogbonna has signed a new five-year contract at the Premier League club....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 93. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 94/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 94): 'Glasgow City Council is flying the French flag at half-mast as a mark of respect for those who died ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Glasgow City Council is flying the French flag at half-mast as a mark of respect for those who died ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Like other terror attacks in Europe: London, Paris and Brussels, Manchester was fundamentally a huma...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 94. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 95/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 95): 'Pregnant women should be careful when taking paracetamol as long-term use could affect the reproduct...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pregnant women should be careful when taking paracetamol as long-term use could affect the reproduct...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Italy head coach Conor O'Shea has made four changes to his side to face Scotland in the final round ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 95. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 96/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 96): 'Laura Delany will succeed Isobel Joyce as the new captain of the Ireland women's team....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Laura Delany will succeed Isobel Joyce as the new captain of the Ireland women's team....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'New insights have been gained into the \"lost years\" of loggerhead turtles....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 96. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 97/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 97): 'Smartphone users can do \"very little\" to stop security services getting \"total control\" over their d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Smartphone users can do \"very little\" to stop security services getting \"total control\" over their d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Warwickshire beat Lancashire by 237 runs at Edgbaston to ensure safety from relegation in the County...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 97. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 98/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 98): 'Great Britain's Jamie Nicholls won a bronze medal at the final World Cup snowboard slopestyle of the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Great Britain's Jamie Nicholls won a bronze medal at the final World Cup snowboard slopestyle of the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Alliance party MP threatened with death has called for \"mature political leadership from those w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 98. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 99/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 99): 'The blasts in Tianjin on Wednesday night were so large that they registered as seismic activity in C...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The blasts in Tianjin on Wednesday night were so large that they registered as seismic activity in C...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'In our series of letters from African journalists, film-maker and columnist Farai Sevenzo looks at t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 99. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 100/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 100): 'Two girls have been taken to hospital after being knocked down by a van in Aberdeen....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two girls have been taken to hospital after being knocked down by a van in Aberdeen....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nicola Sturgeon has defended the funding deal for Scottish councils - and called on them to implemen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 100. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 101/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 101): 'There has been a big fall in graduate unemployment in the UK, the latest figures suggest....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There has been a big fall in graduate unemployment in the UK, the latest figures suggest....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former boarding school worker who was found dead while he faced a sex abuse trial was the subject ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 101. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 102/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 102): 'A retired orthopaedic surgeon has been cleared of sexually assaulting a girl during an examination....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A retired orthopaedic surgeon has been cleared of sexually assaulting a girl during an examination....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Josh Windass scored twice in a minute for Accrington Stanley in a comfortable win over Exeter City....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 102. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 103/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 103): 'A proposed redevelopment of Swansea city centre could see the construction of a \"business district\" ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A proposed redevelopment of Swansea city centre could see the construction of a \"business district\" ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sam Hutchinson scored in injury time as Sheffield Wednesday claimed a point at Brentford in a game w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 103. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 104/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 104): 'Warwickshire have awarded professional contracts to seam bowlers Grant Thornton and Mitchell Spencer...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Warwickshire have awarded professional contracts to seam bowlers Grant Thornton and Mitchell Spencer...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A drug which helps prevent the transmission of HIV should be offered on the Welsh NHS following a co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 104. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 105/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 105): 'A member of Japan's royal family, Princess Mako, is to surrender her royal status by marrying a comm...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A member of Japan's royal family, Princess Mako, is to surrender her royal status by marrying a comm...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ride-sharing company Uber has said it will conduct an “urgent investigation” into claims of sexual h...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 105. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 106/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 106): 'Paralympic long jump champion Markus Rehm has a dream of competing at both the Rio Olympics and Para...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Paralympic long jump champion Markus Rehm has a dream of competing at both the Rio Olympics and Para...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An MP has suggested adults could be posing as teenage asylum seekers to gain entry to the UK....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 106. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 107/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 107): 'A new computer model predicts that multi-bed hospital wards increase bacterial hand contamination by...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A new computer model predicts that multi-bed hospital wards increase bacterial hand contamination by...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brighton's Jamie Murphy and Aberdeen duo Kenny McLean and Mark Reynolds have been called up to the S...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 107. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 108/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 108): 'Cardiff City manager Neil Warnock will make a flying visit to Malaysia to discuss summer transfer de...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cardiff City manager Neil Warnock will make a flying visit to Malaysia to discuss summer transfer de...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Michael Bisping has a chance to become the UK's first UFC champion after stepping in to fight Luke R...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 108. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 109/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 109): 'Venezuela says it has \"ended\" steps towards restoring diplomatic ties with the US, after comments by...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Venezuela says it has \"ended\" steps towards restoring diplomatic ties with the US, after comments by...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sevenoaks Suns won their first WBBL title when they beat the Leicester Riders 82-67 in the Trophy fi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 109. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 110/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 110): 'More investment is needed to beat tuberculosis - the joint most deadly infectious disease in the wor...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More investment is needed to beat tuberculosis - the joint most deadly infectious disease in the wor...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Four players are set to make their tournament debuts for England Women at Euro 2017 after being name...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 110. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 111/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 111): 'A party is campaigning for the Welsh Assembly to be abolished as an \"expensive mistake\"....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A party is campaigning for the Welsh Assembly to be abolished as an \"expensive mistake\"....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The story of a 10-year project to help ospreys breed in mid Wales when they returned to the country ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 111. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 112/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 112): 'Salford owner Marwan Koukash says it would be \"a dream\" to hold one-off games at Old Trafford or the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Salford owner Marwan Koukash says it would be \"a dream\" to hold one-off games at Old Trafford or the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has died in a house fire in County Durham....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 112. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 113/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 113): 'A package of savings totalling £42.8m over four years has been agreed by Highland Council....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A package of savings totalling £42.8m over four years has been agreed by Highland Council....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The perjury trial of former News of the World editor Andy Coulson will begin in Scotland later this ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 78]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 78, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 113. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 114/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 114): 'England forward Geoff Parling says the squad seemed united during the World Cup, despite reports to ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'England forward Geoff Parling says the squad seemed united during the World Cup, despite reports to ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A builder has been cleared of killing his brother-in-law....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 114. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 115/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 115): 'Scientists say they have found a way to make rice less calorific - boil it with coconut oil and then...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scientists say they have found a way to make rice less calorific - boil it with coconut oil and then...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fernando Torres scored twice as Atletico Madrid ended life at the Vicente Calderon with victory over...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 115. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 116/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 116): 'Microsoft has been fined 561m euros ($731m; £484m) for failing to promote a range of web browsers, r...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Microsoft has been fined 561m euros ($731m; £484m) for failing to promote a range of web browsers, r...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Scotland women's coach Anna Signeul has announced an experienced squad for the opening Euro 2017 qua...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 116. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 117/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 117): 'A man has pleaded guilty to murdering another man who was stabbed to death at a flat in Brighton on ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has pleaded guilty to murdering another man who was stabbed to death at a flat in Brighton on ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'California regulators have accepted an offer from farmers to reduce their water usage by 25% in an e...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 117. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 118/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 118): 'A 60-year-old man has been arrested in connection with the death of a man found seriously injured in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 60-year-old man has been arrested in connection with the death of a man found seriously injured in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Blackburn Rovers extended their unbeaten Championship run to eight games as they were held to a goal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 118. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 119/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 119): 'As the White House mulls its next move in conflict-hit Afghanistan, the Taliban offer their advice i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As the White House mulls its next move in conflict-hit Afghanistan, the Taliban offer their advice i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Heather Olver and Lauren Smith's Rio 2016 hopes were boosted as they came from behind to win the wom...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 119. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 120/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 120): 'A triple killer was \"ecstatic\" when she saw news reports that she was wanted by police, her friend h...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A triple killer was \"ecstatic\" when she saw news reports that she was wanted by police, her friend h...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A lighthouse is \"perilously close\" to falling into the sea after being exposed by coastal erosion, a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 120. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 121/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 121): 'It is one of the most famous recording studios in the world - where Queen recorded Bohemian Rhapsody...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is one of the most famous recording studios in the world - where Queen recorded Bohemian Rhapsody...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Seventy seven people who sent personal information to a Commons select committee have been told it m...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 121. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 122/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 122): 'Initial proposals for a £22m hospital to replace two community hospitals in Denbighshire have been a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Initial proposals for a £22m hospital to replace two community hospitals in Denbighshire have been a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Premier League leaders Manchester City continued their 100% start to the season with an injury-time ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 122. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 123/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 123): 'Boreham Wood have named Luke Garrard as manager, making him the youngest boss in England's top five ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Boreham Wood have named Luke Garrard as manager, making him the youngest boss in England's top five ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wearing a lightly-coloured checked shirt, shorts, and with a soft English accent, Cal Henderson deli...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 123. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 124/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 124): 'Big Ben's famous chimes will fall silent from next week until 2021 to allow essential repair works t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Big Ben's famous chimes will fall silent from next week until 2021 to allow essential repair works t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'US retail giant Walmart has rejected that it is deliberately stalling a legal action related to a ca...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 124. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 125/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 125): 'A bear has bitten a visitor at a Chinese drive-through wildlife park where a woman was fatally attac...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A bear has bitten a visitor at a Chinese drive-through wildlife park where a woman was fatally attac...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 30 firefighters have tackled a blaze at a primary school in the Waterside area of Derry....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 125. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 126/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 126): 'St Johnstone have agreed a contract with Simon Lappin after the midfielder was freed by Cardiff City...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'St Johnstone have agreed a contract with Simon Lappin after the midfielder was freed by Cardiff City...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Josh da Silva has become the first player from England Handball's post-London 2012 performance progr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 126. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 127/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 127): 'What would be the repercussions if Welsh, Scottish and Northern Irish MPs were barred from voting on...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What would be the repercussions if Welsh, Scottish and Northern Irish MPs were barred from voting on...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two men have been charged with murdering a teenager during a fight in Birmingham....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 127. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 128/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 128): 'Danske Bank Schools' Cup fourth round results...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Danske Bank Schools' Cup fourth round results...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oscar-winning actor Jessica Lange is set to return to New York's Broadway, after a decade, in Eugene...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 128. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 129/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 129): 'The First Minister Arlene Foster is travelling to China on Sunday....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The First Minister Arlene Foster is travelling to China on Sunday....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australia will largely end granting visas to foreign workers to fill jobs in the fast food industry,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 129. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 130/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 130): 'A 12-year-old girl was among six injured at a shooting during a memorial for a victim of gun violenc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 12-year-old girl was among six injured at a shooting during a memorial for a victim of gun violenc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tanzania's President John Magufuli has been condemned for comments that girls who give birth should ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 130. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 131/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 131): 'Shares in Nintendo have surged after the company announced that a new version of its popular Super M...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Shares in Nintendo have surged after the company announced that a new version of its popular Super M...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A woman and her 12-year-old son have gone missing from the Balintore area of Easter Ross....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 131. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 132/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 132): 'Manager Gordon Strachan has \"put a smile back on Scottish soccer\", says former Scotland hero Jim McC...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Manager Gordon Strachan has \"put a smile back on Scottish soccer\", says former Scotland hero Jim McC...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Security officials in Ukraine say the downed Malaysia Airlines jet in eastern Ukraine suffered an ex...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 65]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 65, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 132. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 133/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 133): 'A man from the Bristol area has been charged with common assault and aggravated trespass by officers...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man from the Bristol area has been charged with common assault and aggravated trespass by officers...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man charged with murdering Labour MP Jo Cox has appeared before a judge at the Old Bailey....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 133. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 134/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 134): 'Top Indian Congress party leaders Sonia and Rahul Gandhi have been ordered to appear in court for al...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Top Indian Congress party leaders Sonia and Rahul Gandhi have been ordered to appear in court for al...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ten clubs have been handed spots in the first season of England's new women's domestic rugby union c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 134. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 135/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 135): 'Wild lynx, extinct in Britain for more than 1,300 years, could be released on to privately-owned est...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wild lynx, extinct in Britain for more than 1,300 years, could be released on to privately-owned est...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'British world number 708 Marcus Willis beat Japan's 99th-ranked Yuichi Sugita in their Wimbledon qua...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 135. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 136/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 136): 'How will the result of the EU referendum in the UK affect Welsh expats living in Spain?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'How will the result of the EU referendum in the UK affect Welsh expats living in Spain?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This week, major film adaptations of Emily Bronte's Wuthering Heights and Charlotte Bronte's Jane Ey...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 82]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 82, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 136. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 137/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 137): 'Labour's former culture secretary Tessa Jowell has announced she will run for the next mayor of Lond...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Labour's former culture secretary Tessa Jowell has announced she will run for the next mayor of Lond...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Netherlands coach Louis van Gaal says Tim Krul's greater height and reach was the reason he sent the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 77]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 77, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 137. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 138/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 138): 'Ollie Devoto and Josh Beaumont have been withdrawn from the England squad ahead of Saturday's Six Na...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ollie Devoto and Josh Beaumont have been withdrawn from the England squad ahead of Saturday's Six Na...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former teacher at a Catholic home and school for delinquent boys in East Yorkshire has been acquit...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 138. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 139/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 139): 'Former Norwich and Wigan striker Grant Holt has become Neil Lennon's first signing as Hibernian mana...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Former Norwich and Wigan striker Grant Holt has become Neil Lennon's first signing as Hibernian mana...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Winks, whistles, weird noises....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 139. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 140/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 140): 'Wicketkeeper-batsman Steven Davies will leave Surrey at the end of the season after turning down a n...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wicketkeeper-batsman Steven Davies will leave Surrey at the end of the season after turning down a n...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some maintenance staff at a leading cancer hospital were \"unknowingly exposed\" to airborne asbestos ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 140. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 141/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 141): 'The safety of military aircraft combat exercises over populated areas has been questioned after a US...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The safety of military aircraft combat exercises over populated areas has been questioned after a US...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former boarding school headmaster serving a 21-year jail sentence for sexually abusing boys has di...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 141. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 142/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 142): 'A painting by Norman Cornish, the last of the \"Pitman painters\", is to go on permanent display at th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A painting by Norman Cornish, the last of the \"Pitman painters\", is to go on permanent display at th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Glasgow's Scotland flanker Ryan Wilson has been cited for allegedly grabbing the testicles of Northa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 142. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 143/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 143): 'A hospital trust's new boss has said plans to have one accident and emergency department instead of ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A hospital trust's new boss has said plans to have one accident and emergency department instead of ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Huddersfield Giants half-back Luke Robinson has been forced to quit at the age of 31 because of a hi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 143. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 144/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 144): 'Councillors in Swindon have voted to create three new parish councils in a bid save borough council ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Councillors in Swindon have voted to create three new parish councils in a bid save borough council ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chelsea Ladies won the Women's Super League One Spring Series with a comfortable 2-0 final-day victo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 144. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 145/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 145): 'Corofin produced a superb display to outclass Slaughtneil on a 1-14 to 0-7 scoreline in the All-Irel...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Corofin produced a superb display to outclass Slaughtneil on a 1-14 to 0-7 scoreline in the All-Irel...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man in his 30s has died in a multi-vehicle road crash on the M2 in County Antrim....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 145. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 146/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 146): 'An ex-Wales footballer has denied being part of an alleged multi-million pound fraud involving appre...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An ex-Wales footballer has denied being part of an alleged multi-million pound fraud involving appre...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A US plan to build a moderate fighting force to take on the Islamic State (IS) group in Syria has be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 146. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 147/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 147): 'Kittens were thrown at a train in what police described as a \"horrendous\" incident....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kittens were thrown at a train in what police described as a \"horrendous\" incident....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 17th Century barn at a Powys farm was destroyed during strong winds in the early hours, the owner ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 147. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 148/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 148): 'Police in Belgium have arrested a ninth suspect in connection with last month's Paris attacks, which...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Police in Belgium have arrested a ninth suspect in connection with last month's Paris attacks, which...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sherpas repairing the climbing route on Mount Everest destroyed by the Nepal earthquake in April say...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 148. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 149/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 149): 'The Mayor of London has stepped in to adjudicate on a controversial planning application opposed by ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Mayor of London has stepped in to adjudicate on a controversial planning application opposed by ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been arrested after firing a rifle inside a pizza restaurant in Washington DC that was the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 149. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 150/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 150): 'Wales' Helen Jenkins strengthened her case to be selected as Britain's third female triathlete for t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wales' Helen Jenkins strengthened her case to be selected as Britain's third female triathlete for t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who drifted a mile out to sea in a toy dinghy he barely fitted into has been rescued....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 150. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 151/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 151): 'Voters are going to the polls in two Westminster by-elections....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Voters are going to the polls in two Westminster by-elections....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been airlifted to hospital after falling four metres down a cliff in Aberdeenshire....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 151. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 152/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 152): 'The biggest change to student finance in Wales in a generation has been unveiled by the education se...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The biggest change to student finance in Wales in a generation has been unveiled by the education se...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A major new bypass in Devon will be open by Christmas, according to the county council....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 152. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 153/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 153): 'Sarah Crossan's novel One, which tells the story of conjoined twins, has won The Bookseller's 2016 p...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sarah Crossan's novel One, which tells the story of conjoined twins, has won The Bookseller's 2016 p...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Alemarah, an app for Android phones created by Islamist fundamentalist group the Taliban, has been r...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 153. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 154/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 154): 'In the light of Ed Balls's speech today, which claims that the Tories would cut public spending by a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In the light of Ed Balls's speech today, which claims that the Tories would cut public spending by a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The United Nations has criticised Thailand for deporting two people who had been given refugee statu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 154. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 155/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 155): 'India is being called the bright spot among the world's big emerging nations, according to a World B...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'India is being called the bright spot among the world's big emerging nations, according to a World B...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former Northern Ireland and Premier League footballer Jim Magilton has appeared in court accused of ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 155. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 156/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 156): 'A 10-year-old boy has been awarded £5,000 after a judge ruled his human rights had been breached whi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 10-year-old boy has been awarded £5,000 after a judge ruled his human rights had been breached whi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The family of a 16-year-old boy who died in a suspected drug-related incident have paid tribute to t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 156. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 157/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 157): 'Green entrepreneur Arthur Kay wants the red buses that have become a landmark of London to run on fu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Green entrepreneur Arthur Kay wants the red buses that have become a landmark of London to run on fu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bristol Rovers will not be pursuing their complaint against rivals Bristol City over the transfer of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 157. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 158/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 158): 'CCTV images showing burglars pulling off the \"audacious\" Hatton Garden jewellery heist have been rel...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'CCTV images showing burglars pulling off the \"audacious\" Hatton Garden jewellery heist have been rel...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The customer discontent over energy bills has rumbled on for years....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 158. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 159/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 159): 'Online poker players are being targeted by a computer virus that spies on their virtual cards....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Online poker players are being targeted by a computer virus that spies on their virtual cards....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'David Cameron has pledged to examine concerns over the independence of a serious case review after a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 159. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 160/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 160): 'A convicted murderer who stamped a woman to death has absconded from an open prison in Derbyshire....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A convicted murderer who stamped a woman to death has absconded from an open prison in Derbyshire....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Critics have given a lukewarm reaction to Elf the Musical, the West End version of the hit 2003 come...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 160. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 161/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 161): 'The government is set to announce \"significant\" changes to its planned rules on an in-out EU referen...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government is set to announce \"significant\" changes to its planned rules on an in-out EU referen...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who robbed and racially abused a shop worker before punching a police officer in the face has ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 161. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 162/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 162): 'Australia and India have pledged to push for a major free trade deal, as Indian PM Narendra Modi mad...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Australia and India have pledged to push for a major free trade deal, as Indian PM Narendra Modi mad...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gold medallist Dan Wallace says Scottish swimmers have proved at Glasgow 2014 that they are now amon...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 162. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 163/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 163): 'Internet marketplace giant Amazon reported a surprise profit for the second quarter in a row thanks ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Internet marketplace giant Amazon reported a surprise profit for the second quarter in a row thanks ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 12-year-old boy has been charged by police after a priest and parishioners at a Fife church were a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 163. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 164/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 164): 'This year's Royal National Mod in Oban is estimated to have brought more than £3m to the local econo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'This year's Royal National Mod in Oban is estimated to have brought more than £3m to the local econo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Summer football transfer spending by Premier League clubs in England has risen for the sixth year in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 164. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 165/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 165): 'Scientists say a study involving pregnant women in Brazil \"strengthens\" the theory that Zika is link...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scientists say a study involving pregnant women in Brazil \"strengthens\" the theory that Zika is link...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Liberia's Ebola epidemic is over, says the World Health Organization (WHO), effectively putting an e...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 165. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 166/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 166): 'A woman who was involved in a crash while taking part in a national cycling event has died from her ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman who was involved in a crash while taking part in a national cycling event has died from her ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two brothers who kicked a hedgehog to death have been jailed for six weeks....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 166. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 167/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 167): 'UK house prices accelerated in February with property values rising by 4.5% in a year, the Nationwid...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'UK house prices accelerated in February with property values rising by 4.5% in a year, the Nationwid...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Following the death of Jade Anderson, the 14-year-old girl who was attacked and killed by four dogs,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 167. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 168/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 168): 'Cardiff Blues prop Taufa'ao Filise admits 40 is too old for modern rugby, but won't let it stop him ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cardiff Blues prop Taufa'ao Filise admits 40 is too old for modern rugby, but won't let it stop him ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'England boss Gareth Southgate believes video technology \"won't always get it 100% right\" after Franc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 168. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 169/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 169): 'A cyclist found using a section of the M25 as a shortcut, has been stopped by police....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A cyclist found using a section of the M25 as a shortcut, has been stopped by police....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two English cities have overcome a major hurdle in their attempts to host the 2022 Commonwealth Game...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 169. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 170/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 170): 'A man has been charged in connection with an alleged threat to behead a UKIP candidate in Newcastle....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been charged in connection with an alleged threat to behead a UKIP candidate in Newcastle....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man accused of killing a soldier on a night out was not involved in the fight which allegedly led ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 75]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 75, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 170. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 171/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 171): 'Parents in England whose children are injured at birth may benefit from a new government compensatio...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Parents in England whose children are injured at birth may benefit from a new government compensatio...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Britain's Simon Yates won stage six of the Vuelta a Espana to claim his first Grand Tour stage victo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 171. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 172/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 172): 'A Welsh MP who was a minister under Tony Blair and Gordon Brown has quit the Labour frontbench....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Welsh MP who was a minister under Tony Blair and Gordon Brown has quit the Labour frontbench....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been found guilty of murdering a suspected drug dealer in an alleged \"contract killing\"....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 172. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 173/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 173): 'There is no place for captain Wayne Rooney in England's starting XI, but his 18-year-old Manchester ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There is no place for captain Wayne Rooney in England's starting XI, but his 18-year-old Manchester ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The number of people in Scotland assessed as homeless or under the threat of being homeless went dow...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 173. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 174/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 174): 'Kent off-spinner Adam Riley has extended his contract with the club....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kent off-spinner Adam Riley has extended his contract with the club....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A video showing SNP councillors burning a copy of the Smith Commission report on more powers for Sco...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 174. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 175/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 175): 'South Korea's Kim In-kyung extended her lead at the Women's British Open to six shots after a third-...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'South Korea's Kim In-kyung extended her lead at the Women's British Open to six shots after a third-...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sunderland Ladies have signed FFC Frankfurt goalkeeper Anke Preuss and ASGM Verona midfielder Domini...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 175. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 176/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 176): 'A week on from the US midterm elections, the whole shebang is still best described in one acerbic tw...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A week on from the US midterm elections, the whole shebang is still best described in one acerbic tw...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The New Saints secured a narrow victory in the first leg of their Champions League first qualifying ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 176. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 177/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 177): 'Colchester United have accepted bids for midfielder George Moncur from Barnsley and Peterborough Uni...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Colchester United have accepted bids for midfielder George Moncur from Barnsley and Peterborough Uni...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The man accused of murdering children's author Helen Bailey \"grinned\" when questioned by police, a c...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 177. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 178/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 178): 'Ospreys earned a place in the European Challenge Cup quarter-finals with a seven-try hammering of Ly...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ospreys earned a place in the European Challenge Cup quarter-finals with a seven-try hammering of Ly...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The best friend of a student thought to have died after taking toxic diet pills bought online says s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 178. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 179/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 179): 'A \"criminal hand\" may have been behind the deadly wildfires that have raged through central Portugal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A \"criminal hand\" may have been behind the deadly wildfires that have raged through central Portugal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Kusal Perera's failed drugs test could be part of a \"conspiracy\" against the wicketkeeper-batsman, a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 179. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 180/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 180): 'People with epilepsy are facing discrimination and many worry about leaving their homes in case they...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'People with epilepsy are facing discrimination and many worry about leaving their homes in case they...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indonesian rescuers have recovered the remains of 54 people who died onboard a Trigana Air plane tha...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 180. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 181/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 181): 'Changes to qualification mean that from the end of next season, nations with teams in the Pro12 coul...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Changes to qualification mean that from the end of next season, nations with teams in the Pro12 coul...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Four members of an armed moped gang intercepted during the attempted robbery of a watch shop have be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 181. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 182/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 182): 'The West Wing star Rob Lowe is to play John F Kennedy in a US TV movie marking the 50th anniversary ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The West Wing star Rob Lowe is to play John F Kennedy in a US TV movie marking the 50th anniversary ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Labour in Wales will not \"fall into the trap of arguing with ourselves\", First Minister Carwyn Jones...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 182. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 183/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 183): 'A jealous man who murdered his partner after finding out she was having an affair has been jailed fo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A jealous man who murdered his partner after finding out she was having an affair has been jailed fo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A major search operation is under way to find three people missing after a building at Didcot Power ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 183. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 184/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 184): 'A teenager caught in the Hillsborough disaster tried in vain to save her younger sister as the crush...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A teenager caught in the Hillsborough disaster tried in vain to save her younger sister as the crush...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A tradesman lied to police when he said he had been injured while tackling a knife-wielding man dres...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 184. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 185/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 185): 'Two further bombs have been discovered in an extensive PSNI search operation in Lurgan, County Armag...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two further bombs have been discovered in an extensive PSNI search operation in Lurgan, County Armag...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Zinedine Zidane's eldest son, Enzo, made his debut as a substitute for Real Madrid 'B' in a 2-1 win ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 185. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 186/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 186): 'The race is on to find ways to prevent and cure the Ebola virus - a disease that has killed more tha...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The race is on to find ways to prevent and cure the Ebola virus - a disease that has killed more tha...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Roger Federer warmed up for Wimbledon by winning a record ninth title at the Gerry Weber Open in Hal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 186. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 187/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 187): 'An 18-year-old man has been raped in a street attack....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An 18-year-old man has been raped in a street attack....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Torquay United's takeover has yet to be ratified by the National League....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 187. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 188/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 188): 'Viola Beach have entered the singles chart at number 11, a week after the Warrington band died in a ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Viola Beach have entered the singles chart at number 11, a week after the Warrington band died in a ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The company behind Manchester's Parklife festival has been fined £70,000 after sending promotional t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 188. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 189/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 189): 'Former team captain Carlos Tevez has denied Manchester City manager Roberto Mancini's claims that he...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Former team captain Carlos Tevez has denied Manchester City manager Roberto Mancini's claims that he...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Zimbabwe's 93-year-old President Robert Mugabe has begun a series of rallies across the country in a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 189. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 190/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 190): 'A former mayor has failed in his bid to over-turn a five-year order banning him from running for off...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A former mayor has failed in his bid to over-turn a five-year order banning him from running for off...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ireland earned a remarkable first Test win in South Africa despite CJ Stander's 23rd-minute red card...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 190. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 191/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 191): 'Internal photographs have revealed the extent of the damage to a 16th Century hall in Manchester sev...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Internal photographs have revealed the extent of the damage to a 16th Century hall in Manchester sev...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A charity fundraiser has achieved his goal of running 44 marathons on consecutive days - one in each...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 191. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 192/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 192): 'Burton Albion have signed midfielder Hope Akpan on a one-year contract....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Burton Albion have signed midfielder Hope Akpan on a one-year contract....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rory McAllister and Shane Sutherland both bagged braces as Peterhead came from behind to beat Albion...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 192. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 193/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 193): 'Welsh golfer Jamie Donaldson says the first Golfsixes event at Centurion Golf Club could offer a new...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Welsh golfer Jamie Donaldson says the first Golfsixes event at Centurion Golf Club could offer a new...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The front-runner in the Republican presidential nomination race, Donald Trump, won a decisive victor...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 193. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 194/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 194): 'Swansea City Under-21s will play League One Coventry City at home in the quarter-finals of the EFL T...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Swansea City Under-21s will play League One Coventry City at home in the quarter-finals of the EFL T...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Aberdeen's Richie Ramsay says he is in dreamland after heading into the final two days of the Open C...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 194. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 195/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 195): 'Republican frontrunner Donald Trump has mocked Hillary Clinton for apparently taking a toilet break ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Republican frontrunner Donald Trump has mocked Hillary Clinton for apparently taking a toilet break ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Council-funded meals on wheels could be scrapped in Caerphilly county in a bid to save £252,000 a ye...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 195. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 196/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 196): 'Scientists say they have found the \"missing link\" in the debate over the risk of pesticides to bees....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scientists say they have found the \"missing link\" in the debate over the risk of pesticides to bees....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nepal's employment ministry has lifted a ban on the country's women going to Gulf countries to work ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 196. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 197/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 197): 'To celebrate 50 years of Doctor Who here are 50 fantastic, fascinating facts about one of the best-l...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'To celebrate 50 years of Doctor Who here are 50 fantastic, fascinating facts about one of the best-l...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rapper 50 Cent has filed for Chapter 11 bankruptcy protection, according to reports in the US....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 197. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 198/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 198): 'The UN spends almost $8bn (£6.5bn) on peacekeeping in Africa - supporting some 65,000 troops in nine...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The UN spends almost $8bn (£6.5bn) on peacekeeping in Africa - supporting some 65,000 troops in nine...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Black rats may not have been to blame for numerous outbreaks of the bubonic plague across Europe, a ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 198. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 199/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 199): 'More than 600 new victims of female genital mutilation (FGM) have been identified in seven months in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More than 600 new victims of female genital mutilation (FGM) have been identified in seven months in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At the scene of one of India's greatest triumphs came one of their most damaging defeats....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 199. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 200/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 200): 'Scientists have developed a robotic sleeve that can help hearts pump when they are failing....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scientists have developed a robotic sleeve that can help hearts pump when they are failing....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'President: Abdiweli Mohamed Ali \"Gas\"...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 200. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 201/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 201): 'Leon Clarke's ninth goal of the season saw Bury overcome Colchester and move up to third place in Le...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leon Clarke's ninth goal of the season saw Bury overcome Colchester and move up to third place in Le...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sex abuse victims of former Sussex bishop Peter Ball are suing the Church of England for hundreds of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 201. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 202/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 202): 'Donegal defeated Ulster Championship holders Monaghan by a point in a pulsating semi-final replay be...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Donegal defeated Ulster Championship holders Monaghan by a point in a pulsating semi-final replay be...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been jailed for life for murdering his friend before dismembering his body and disposing o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 202. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 203/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 203): 'Christmas shoppers in Northern Ireland lost over Â£150,000 during the 2014 holiday season to online ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Christmas shoppers in Northern Ireland lost over Â£150,000 during the 2014 holiday season to online ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The owner of Neath Rugby Club has been released from police bail, one year after being arrested on s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 203. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 204/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 204): 'Neil Lennon believes Jason Cummings' goal was wrongly ruled out for offside as Hibernian slumped to ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neil Lennon believes Jason Cummings' goal was wrongly ruled out for offside as Hibernian slumped to ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gabon intends to use its successful bid to host the 2017 Africa Cup of Nation as a platform to win t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 204. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 205/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 205): 'Six senior members of a notorious Chicago gang accused of murder, robbery and drug dealing have been...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Six senior members of a notorious Chicago gang accused of murder, robbery and drug dealing have been...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When Joanne Drayson regularly walked her dogs in the woodland near her home in Guildford, Surrey, sh...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 205. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 206/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 206): 'Russia says it is \"outrageous\" that the US has not yet handed back two Russian intelligence compound...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Russia says it is \"outrageous\" that the US has not yet handed back two Russian intelligence compound...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Blackpool Airport could be transformed into a site for up to 140 new businesses after the government...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 206. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 207/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 207): 'A young child was left behind in woodland by nursery school staff at the end of a walk, the BBC unde...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A young child was left behind in woodland by nursery school staff at the end of a walk, the BBC unde...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Housebuilder Redrow is to raise £80m in an issue of new shares to fund its expansion plans, in a sig...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 207. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 208/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 208): 'A teenager accused of plotting a terror attack in the UK is to go on trial....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A teenager accused of plotting a terror attack in the UK is to go on trial....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Fifteen people have been evacuated from a Glasgow block of flats after a fire in the close area....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 208. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 209/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 209): 'Xherdan Shaqiri scored one of the goals of the season as Stoke earned a thrilling win at Everton thr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Xherdan Shaqiri scored one of the goals of the season as Stoke earned a thrilling win at Everton thr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man in his 40s has died after a two-vehicle crash in Newry, County Down....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 209. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 210/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 210): 'Mae mewnwr Cymru, Gareth Davies wedi ymddiheuro ar ôl i fideo gael ei gyhoeddi ble mae'n ymddangos f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Mae mewnwr Cymru, Gareth Davies wedi ymddiheuro ar ôl i fideo gael ei gyhoeddi ble mae'n ymddangos f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hollywood star George Clooney has visited a sandwich shop which helps homeless people during a visit...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 210. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 211/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 211): 'Toshiba chairman Shigenori Shiga has resigned, hours after the Japanese conglomerate revealed detail...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Toshiba chairman Shigenori Shiga has resigned, hours after the Japanese conglomerate revealed detail...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A top Spanish judge has issued international arrest warrants for 12 Russians suspected of organised ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 211. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 212/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 212): 'US actor Ed Harris is to make his West End stage debut this year in a revival of Sam Shepard's play ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'US actor Ed Harris is to make his West End stage debut this year in a revival of Sam Shepard's play ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A funeral service has been held for the son of former loyalist paramilitary leader Johnny Adair who ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 212. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 213/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 213): 'A former S4C executive has called on the Welsh language broadcaster to display English subtitles aut...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A former S4C executive has called on the Welsh language broadcaster to display English subtitles aut...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An attempt to crowdfund Greece's overdue €1.6 billion ($1.8bn; £1.1bn) debt repayment has passed the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 213. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 214/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 214): 'Four people have been arrested after a 19-year-old woman took ecstasy and died in Manchester....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Four people have been arrested after a 19-year-old woman took ecstasy and died in Manchester....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '(Closed): Wall Street markets sank on Monday, as oil prices dropped 2% to three-month lows and inves...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 214. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 215/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 215): 'Sweden's Foreign Minister Margot Wallstrom has emerged from bitter rows with Saudi Arabia and Israel...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sweden's Foreign Minister Margot Wallstrom has emerged from bitter rows with Saudi Arabia and Israel...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who has spent 25 years trying to solve the Loch Ness Monster mystery has been honoured with a ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 215. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 216/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 216): 'Wales will not rush to give Ben Woodburn a senior cap, says assistant manager Osian Roberts....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wales will not rush to give Ben Woodburn a senior cap, says assistant manager Osian Roberts....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Britain's Chris Froome won the Tour de France for the fourth time as Dylan Groenewegen sprinted to v...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 216. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 217/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 217): 'Paul Trollope has emerged as strong favourite to succeed Russell Slade as Cardiff City boss....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Paul Trollope has emerged as strong favourite to succeed Russell Slade as Cardiff City boss....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Prosecutors are considering a file for a possible corporate prosecution over phone hacking at the Ne...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 217. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 218/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 218): 'Jaguar Land Rover is to make vehicles in China for the first time after Beijing approved a £1bn join...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jaguar Land Rover is to make vehicles in China for the first time after Beijing approved a £1bn join...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Russia will miss this summer's World Championships after athletics' governing body voted to extend t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 218. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 219/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 219): 'Emergency workers are searching for some 20 people feared dead after two buses plunged into a river ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Emergency workers are searching for some 20 people feared dead after two buses plunged into a river ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Linfield have completed the signing of former youth player Michael McLellan from Championship One si...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 219. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 220/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 220): 'An Irish primary school pupil who wrote to the Queen requesting that she turn Northern Ireland over ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An Irish primary school pupil who wrote to the Queen requesting that she turn Northern Ireland over ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Detailed MRI scans should be offered to some women in pregnancy to help spot brain defects in the de...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 220. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 221/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 221): 'A Japanese-style garden which was once described as the best of its kind in the west has been recogn...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Japanese-style garden which was once described as the best of its kind in the west has been recogn...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Joe Allen is not likely to forget 2016 in a hurry - it was an eventful year for the Welsh midfielder...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 221. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 222/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 222): 'A Syrian has attempted to kill himself in a detention camp for refugees and migrants on the Greek is...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Syrian has attempted to kill himself in a detention camp for refugees and migrants on the Greek is...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A vote on EFL Trophy changes may not have even gone ahead had clubs known some Premier League sides ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 222. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 223/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 223): 'A US drug company has agreed to pay out $1.6bn (£1bn) after improperly marketing a mood-stabilising ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A US drug company has agreed to pay out $1.6bn (£1bn) after improperly marketing a mood-stabilising ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man in the car at the time an unarmed man was shot dead by police said he was not ordered to raise...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 223. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 224/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 224): 'When American football player Colin Kaepernick refused to stand for the national anthem, he unleashe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When American football player Colin Kaepernick refused to stand for the national anthem, he unleashe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A woman who attended a summer Solstice party on the Isle of Wight was rescued after falling down an ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 224. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 225/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 225): 'Scotland prop Simon Berghan insists Edinburgh are a side on the up after signing a new two-year deal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scotland prop Simon Berghan insists Edinburgh are a side on the up after signing a new two-year deal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police in El Salvador say the country has gone 24 hours without any murders, a rare occurrence in a ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 225. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 226/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 226): 'The European Central Bank (ECB) says it will no longer produce the €500 (£400; $575) note because of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The European Central Bank (ECB) says it will no longer produce the €500 (£400; $575) note because of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Armenia has maintained a special relationship with Russia since the Soviet Union collapsed in 1991, ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 226. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 227/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 227): 'The Highways Agency is warning motorists about M1 slip road closures in Bedfordshire....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Highways Agency is warning motorists about M1 slip road closures in Bedfordshire....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The UK has signed a deal with the West African nation of Ghana for the transfer of prisoners between...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 227. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 228/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 228): 'Manchester United captain Wayne Rooney says he is \"honoured\" to be level with Sir Bobby Charlton as ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Manchester United captain Wayne Rooney says he is \"honoured\" to be level with Sir Bobby Charlton as ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Prime Minister David Cameron has invited two Bristol students to present a film about female genital...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 69]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 69, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 228. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 229/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 229): 'Jordy Hiwula kept Walsall's League One automatic promotion hopes alive as his late winner downed mid...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jordy Hiwula kept Walsall's League One automatic promotion hopes alive as his late winner downed mid...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An exhibition exploring the origins of ancient skeletons in Sussex, including a woman from sub-Sahar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 229. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 230/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 230): 'Oil services company Wood Group is looking to cut about 300 jobs....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Oil services company Wood Group is looking to cut about 300 jobs....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bracing the cold weather on a boat in December doesn't seem like the best idea, however, that's exac...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 230. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 231/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 231): 'Iran has begun installing advanced centrifuge machines for enriching uranium at its nuclear plant at...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Iran has begun installing advanced centrifuge machines for enriching uranium at its nuclear plant at...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Four of the original 'silver tickets' issued to the 50 supporters who helped fund the Bristol Old Vi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 231. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 232/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 232): 'Officials have now confirmed dozens of deaths in snowstorms that have struck a popular Nepalese trek...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Officials have now confirmed dozens of deaths in snowstorms that have struck a popular Nepalese trek...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Championship Whitehaven have re-signed ex-Warrington Wolves half-back Louis Jouffret after his contr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 232. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 233/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 233): 'Drivers on London's Night Tube have voted to strike in a row over jobs....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Drivers on London's Night Tube have voted to strike in a row over jobs....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Southampton has hosted its first full marathon in more than 30 years....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 233. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 234/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 234): 'As protesters in support of lorry drivers threaten to demonstrate at the Port of Dover, what is the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'As protesters in support of lorry drivers threaten to demonstrate at the Port of Dover, what is the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Derry beat Antrim 0-16 to 0-11 to set up an Ulster Under-21 Football quarter-final against Donegal n...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 234. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 235/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 235): 'A row over a handwritten score \"by Beethoven\" being sold at auction for up to £200,000 has broken ou...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A row over a handwritten score \"by Beethoven\" being sold at auction for up to £200,000 has broken ou...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pro-democracy activists have strongly denied Hong Kong leader CY Leung's claim that \"external forces...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 235. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 236/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 236): 'The family of Australian cricketer Phillip Hughes walked out of an inquest into his death....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The family of Australian cricketer Phillip Hughes walked out of an inquest into his death....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'League One side Southend United have signed central midfielder Luke Amos on loan from Premier League...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 236. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 237/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 237): 'Usain Bolt collected his 11th World Championships gold medal as Jamaica won the 4x100m relay in Beij...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Usain Bolt collected his 11th World Championships gold medal as Jamaica won the 4x100m relay in Beij...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 92-year-old woman who was found dead in the Avon Gorge had \"long term issues with periodic depress...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 237. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 238/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 238): 'BBC News Online looks at the timeline of events which led to the sentencing of Colin Howell and his ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'BBC News Online looks at the timeline of events which led to the sentencing of Colin Howell and his ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The owners of Oxford United's Kassam Stadium have failed with a second appeal to prevent the ground ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 238. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 239/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 239): 'It's the Queen's 90th birthday today, and we've been taking a look back at some of the big things th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's the Queen's 90th birthday today, and we've been taking a look back at some of the big things th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A police officer who raped a woman as she slept has been sacked by the force....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 239. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 240/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 240): 'The threat to Indonesia from militant groups is likely to remain active and high for the forseeable ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The threat to Indonesia from militant groups is likely to remain active and high for the forseeable ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A record number of school exclusions were issued to pupils last year for drug and alcohol related is...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 240. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 241/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 241): 'A young bald eagle, which vanished following a birds of prey display, has flown back to his nest aft...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A young bald eagle, which vanished following a birds of prey display, has flown back to his nest aft...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australia's Prime Minister Malcolm Turnbull has declared victory for his conservative coalition in l...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 241. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 242/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 242): 'Campaigners working to reopen a historical railway tunnel to tourists have criticised the Welsh gove...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Campaigners working to reopen a historical railway tunnel to tourists have criticised the Welsh gove...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Princess Royal has written about her passion for lighthouses in the foreword for a new book....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 84]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 84, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 242. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 243/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 243): 'Former Nottingham Forest and Netherlands midfielder Johnny Metgod has rejoined the club as a directo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Former Nottingham Forest and Netherlands midfielder Johnny Metgod has rejoined the club as a directo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tranmere Rovers have agreed new one-year contracts with teenagers Luke Pilling, Evan Gumbs and Mitch...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 243. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 244/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 244): 'So it turns out that a prime minister's word isn't always sacrosanct - because, after all, he or she...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'So it turns out that a prime minister's word isn't always sacrosanct - because, after all, he or she...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Commonwealth Games gold medallist Euan Burton wants judo to become \"an important sport to Scotland\"....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 244. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 245/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 245): 'A young couple have attempted to commit suicide in the grounds of the Taj Mahal, India's famed monum...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A young couple have attempted to commit suicide in the grounds of the Taj Mahal, India's famed monum...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Liverpool striker Mario Balotelli faces a reprimand from manager Brendan Rodgers after swapping shir...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 245. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 246/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 246): 'Veteran actor John Hurt has received a knighthood in the New Year Honours....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Veteran actor John Hurt has received a knighthood in the New Year Honours....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police in Brazil have arrested a third man accused of robbing and raping a foreign tourist on a mini...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 246. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 247/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 247): 'Geraint Thomas can one day emulate Sir Bradley Wiggins and add the Tour de France title to his Olymp...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Geraint Thomas can one day emulate Sir Bradley Wiggins and add the Tour de France title to his Olymp...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Slovenian Timi Max Elsnik scored the winning spot-kick as Derby beat Carlisle 14-13 on penalties to ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 247. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 248/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 248): 'Hundreds of snow leopards are being killed by poachers every year across the high mountain ranges of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hundreds of snow leopards are being killed by poachers every year across the high mountain ranges of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Grace Reid and Katherine Torrance won synchronised 3m gold at the British National Diving Cup, despi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 248. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 249/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 249): 'Kent have appointed former player Matt Walker as the club's new head coach....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Kent have appointed former player Matt Walker as the club's new head coach....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A social worker who sold the address of an adopted child to her birth mother in order to fund a Cari...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 249. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 250/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 250): 'A Christian pastor in China who refused to remove a cross from his church's roof has been jailed for...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Christian pastor in China who refused to remove a cross from his church's roof has been jailed for...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A number of chemotherapy medicines have been recalled in the Republic of Ireland as a precautionary ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 250. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 251/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 251): 'Norwich went top of the Championship as they got the better of a stubborn 10-man Burton Albion side ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Norwich went top of the Championship as they got the better of a stubborn 10-man Burton Albion side ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Up to £600m is to be spent on a new metro for south east Wales within five years, it has been announ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 251. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 252/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 252): 'A man who attacked three women with a claw hammer in a London hotel room boasted to police about lic...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man who attacked three women with a claw hammer in a London hotel room boasted to police about lic...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cameroon goalkeeper Andre Onana has committed his future to Dutch club Ajax Amsterdam until June 202...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 252. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 253/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 253): 'Britain's Johanna Konta let two match points and a commanding lead slip as she lost to Russia's Ekat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Britain's Johanna Konta let two match points and a commanding lead slip as she lost to Russia's Ekat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Al-Qaeda has confirmed that Nasser al-Wuhayshi, the leader of its offshoot in the Arabian Peninsula,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 253. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 254/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 254): 'Air India has stopped serving non-vegetarian meals to its economy class passengers on domestic fligh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Air India has stopped serving non-vegetarian meals to its economy class passengers on domestic fligh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Up to £50m is still needed to fund a flood alleviation scheme on the lower part of the River Thames,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 254. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 255/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 255): 'A local businessman has been chosen by the Conservatives to try and win back Tooting from Labour in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A local businessman has been chosen by the Conservatives to try and win back Tooting from Labour in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Taiwan's Foxconn Technology Group, which assembles most of the world's iPhones, has offered about 62...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 255. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 256/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 256): 'Palestinians in the West Bank have pitched a protest camp where Israel plans to build new settlement...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Palestinians in the West Bank have pitched a protest camp where Israel plans to build new settlement...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Asad Shafiq and Younis Khan centuries helped Pakistan open up a lead over England in the final Test ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 256. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 257/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 257): 'A £300,000 facelift is planned at Kelso racecourse to help bring its facilities up to modern standar...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A £300,000 facelift is planned at Kelso racecourse to help bring its facilities up to modern standar...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 26-year-old man has died and two others are in hospital after a mass street brawl in south London....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 257. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 258/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 258): 'With almost a third of Brazil's cabinet under investigation for alleged corruption, BBC News takes a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With almost a third of Brazil's cabinet under investigation for alleged corruption, BBC News takes a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Britain's Catriona Matthew and Holly Clyburn share the lead at eight under par after the second roun...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 258. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 259/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 259): 'The future for adult social care services in England \"looks bleak\", a think tank has warned....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The future for adult social care services in England \"looks bleak\", a think tank has warned....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Johanna Konta missed a chance to become the first British woman to break into the world's top 10 for...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 259. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 260/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 260): 'A six-foot mechanical polar bear that dances and sings Christmas carols is being investigated after ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A six-foot mechanical polar bear that dances and sings Christmas carols is being investigated after ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A memorial has been unveiled in honour of a World War One hero from Surrey who was awarded the Victo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 260. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 261/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 261): 'The killer of a man who died after being punched at a music festival is \"one shot away\" from capture...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The killer of a man who died after being punched at a music festival is \"one shot away\" from capture...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bassist Andy Fraser, who co-wrote Free's 1970 hit All Right Now, has died in California aged 62....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 261. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 262/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 262): 'A consultation is to be held over proposed measures to cut anti-social behaviour and vandalism in th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A consultation is to be held over proposed measures to cut anti-social behaviour and vandalism in th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's official: Slash and Axl Rose are going to perform together as Guns N' Roses for the first time ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 262. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 263/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 263): 'Amnesty International says there is \"strong evidence\" Israel committed war crimes in Gaza following ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Amnesty International says there is \"strong evidence\" Israel committed war crimes in Gaza following ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man claiming to be an estranged cousin of one of India's most popular politicians, J Jayalalitha, ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 263. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 264/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 264): 'Hong Kong has joined China in suspending meat imports from Brazil....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hong Kong has joined China in suspending meat imports from Brazil....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The vice-chancellor of Plymouth University has been suspended pending a review....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 264. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 265/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 265): 'The government has given the strongest signal yet that the Brexit process could take a lot longer th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government has given the strongest signal yet that the Brexit process could take a lot longer th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Is India now living on woman power?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 265. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 266/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 266): 'Glasgow Warriors have signed Sean Maitland following the 24-year-old's departure from Crusaders....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Glasgow Warriors have signed Sean Maitland following the 24-year-old's departure from Crusaders....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Middlesbrough maintained their unbeaten Premier League start in a dull goalless draw at West Brom....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 266. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 267/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 267): 'A man has appeared in court charged with the murder of a Cardiff woman whose body was found in a hot...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has appeared in court charged with the murder of a Cardiff woman whose body was found in a hot...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Scottish brewer BrewDog has postponed the launch of production at its new US headquarters, following...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 267. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 268/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 268): 'BBC drama Wolf Hall has been voted the best TV drama of 2015 at the Voice of the Listener and Viewer...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'BBC drama Wolf Hall has been voted the best TV drama of 2015 at the Voice of the Listener and Viewer...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Port Vale have signed striker Theo Robinson until the end of the season, as well as bringing in wing...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 268. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 269/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 269): 'Hollywood actress Anne Hathaway will co-host this year's Nobel peace prize concert in Norway with Os...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hollywood actress Anne Hathaway will co-host this year's Nobel peace prize concert in Norway with Os...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'New details about a long lost ring that belonged to a Scottish woman who died in Auschwitz will be r...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 269. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 270/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 270): 'A man who died suddenly at a supported living home could possibly have been saved if there were more...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man who died suddenly at a supported living home could possibly have been saved if there were more...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The benefits that EU migrants can claim in another EU country vary across the 28-nation bloc, but ce...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 270. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 271/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 271): 'Media in China are demanding an investigation into the chaotic surge in Shanghai's stock exchange tr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Media in China are demanding an investigation into the chaotic surge in Shanghai's stock exchange tr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Duchess of Cambridge has given birth to a girl, Kensington Palace has announced....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 271. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 272/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 272): 'Switching to a low-carbon economy offers cities \"significant economic opportunities\", an assessment ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Switching to a low-carbon economy offers cities \"significant economic opportunities\", an assessment ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former bouncer Levi Bellfield, 43, has been convicted of murdering three young women and trying to k...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 272. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 273/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 273): 'Meet the men and women who have been given the job of persuading Britain to stay in the EU in 23 Jun...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Meet the men and women who have been given the job of persuading Britain to stay in the EU in 23 Jun...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three men have been arrested as part of an ongoing investigation into historical child sexual exploi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 273. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 274/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 274): 'Burger chain McDonald's has said it is \"disappointed\" by Labour's decision to ban the company from i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Burger chain McDonald's has said it is \"disappointed\" by Labour's decision to ban the company from i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Welsh Rugby Union had a record turnover of £73.3m last year which allowed it to reinvest £33m in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 274. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 275/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 275): 'Olympic champion Katherine Grainger is in danger of missing out on a fifth Games in Rio after her pa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Olympic champion Katherine Grainger is in danger of missing out on a fifth Games in Rio after her pa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The European Commission has proposed that member states restrict the use of certain classes of pesti...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 275. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 276/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 276): 'Ulster have signed Australia fly-half Christian Lealiifano on a deal which will run until the end of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ulster have signed Australia fly-half Christian Lealiifano on a deal which will run until the end of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wales' largest castle has had its fair share of strife and wear and tear over the centuries but it i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 76]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 76, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 276. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 277/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 277): 'Fifa has defended its decision to scrap an anti-racism taskforce, with critics branding the move \"sh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Fifa has defended its decision to scrap an anti-racism taskforce, with critics branding the move \"sh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'British number one and top seed Johanna Konta reached the second round of the Nottingham Open as Hea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 277. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 278/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 278): 'A loggerhead turtle that washed up on a County Donegal beach and was being looked after at an aquari...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A loggerhead turtle that washed up on a County Donegal beach and was being looked after at an aquari...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The London School of Economics has been heavily criticised for a \"chapter of failures\" in its links ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 278. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 279/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 279): 'Cliftonville boss Gerard Lyttle says he won't need to motivate his players for the game against lead...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cliftonville boss Gerard Lyttle says he won't need to motivate his players for the game against lead...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A ban to stop people from smoking in cars when children are present has been passed by the Welsh ass...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 279. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 280/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 280): 'Reams of sheet gold, chunks of solid silver shaped into horses' heads and acres of exuberantly colou...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Reams of sheet gold, chunks of solid silver shaped into horses' heads and acres of exuberantly colou...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Warren Gatland will be the one to decide whether changes are needed to his coaching team, according ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 280. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 281/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 281): 'No new laws are needed to deal with social media - just a better understanding of the existing ones,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'No new laws are needed to deal with social media - just a better understanding of the existing ones,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man shot in the leg on Thursday in Shawlands in Glasgow had just finished strapping his four-year-...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 281. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 282/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 282): 'North Korea appears to have revealed details of two as-yet untested missile systems in its press cov...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'North Korea appears to have revealed details of two as-yet untested missile systems in its press cov...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Olympic champion Andy Murray beat South Africa's Kevin Anderson 6-3 6-2 to reach the quarter-finals ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 282. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 283/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 283): 'Government forces have broken a siege by Islamic State (IS) of an airbase in northern Syria, state m...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Government forces have broken a siege by Islamic State (IS) of an airbase in northern Syria, state m...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'New plans for a riverfront office, restaurant and car park development in Pontypridd have been submi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 283. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 284/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 284): 'An animal welfare charity said it released a captive fox from a private outbuilding, hours before th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An animal welfare charity said it released a captive fox from a private outbuilding, hours before th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A make-up trailer that police claimed was destined for the set of television drama Downton Abbey has...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 284. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 285/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 285): 'Arsenal boss Arsene Wenger hopes midfielder Jack Wilshere will spend the rest of his career at the c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Arsenal boss Arsene Wenger hopes midfielder Jack Wilshere will spend the rest of his career at the c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been jailed for 23 years after a businessman was shot and killed during a robbery at a war...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 285. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 286/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 286): 'A teenager killed after being hit by a car in Bridgend was \"a young man just starting out in the wor...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A teenager killed after being hit by a car in Bridgend was \"a young man just starting out in the wor...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A digger has smashed through the front of a bank in an unsuccessful attempt to steal a cash machine....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 286. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 287/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 287): 'Australia has blocked the sale of Ausgrid, the country's biggest energy grid, to two Chinese compani...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Australia has blocked the sale of Ausgrid, the country's biggest energy grid, to two Chinese compani...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'One of the suspects questioned by British police about Madeleine McCann's disappearance has said he ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 287. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 288/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 288): 'Boxer Carl Frampton has joined his travelling supporters for a celebratory pint in a US bar after he...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Boxer Carl Frampton has joined his travelling supporters for a celebratory pint in a US bar after he...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hundreds of people have taken part in a candlelit vigil led by the Bishop of Birmingham in sympathy ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 288. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 289/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 289): 'There have been no changes in the control of the three main councils in Gloucestershire....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There have been no changes in the control of the three main councils in Gloucestershire....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Restrictions on radio communication between teams and drivers have been strengthened in the build-up...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 289. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 290/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 290): 'Police in South Korea have arrested a man accused of making an online threat to kill the US ambassad...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Police in South Korea have arrested a man accused of making an online threat to kill the US ambassad...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Azerbaijan's President, Ilham Aliyev, has pardoned 148 inmates, including 14 activists seen as polit...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 290. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 291/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 291): 'US jobs growth remained solid in November as the economy added 211,000 jobs, slightly above expectat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'US jobs growth remained solid in November as the economy added 211,000 jobs, slightly above expectat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Experts have begun checking whether businesses which took advantage of a lucrative green energy sche...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 291. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 292/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 292): 'A student attacked the PayPal website as part of a concerted effort by the Anonymous \"hacktivists\" t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A student attacked the PayPal website as part of a concerted effort by the Anonymous \"hacktivists\" t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'High-resolution sites are proving music to the ears of fans who want the best possible sound....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 292. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 293/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 293): 'Canterbury and England midfielder Susannah Townsend has revealed how her dissertation is helping her...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Canterbury and England midfielder Susannah Townsend has revealed how her dissertation is helping her...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A report is to be carried out into the feasibility of opening a £2.2m play park in County Tyrone, on...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 293. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 294/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 294): 'South Korea's President Park Geun-hye has said she has asked parliament to help her find a way to st...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'South Korea's President Park Geun-hye has said she has asked parliament to help her find a way to st...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Archaeologists have released an image showing where human remains were found at an Iron Age site in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 294. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 295/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 295): 'Thai-owned Scotch whisky producer Inver House Distillers has reported a sharp fall in revenue and pr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thai-owned Scotch whisky producer Inver House Distillers has reported a sharp fall in revenue and pr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Six people have been killed in a rescue helicopter crash in a mountainous area of central Italy, off...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 65]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 65, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 295. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 296/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 296): 'The government must secure a transitional Brexit deal to protect the future of the UK car industry, ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government must secure a transitional Brexit deal to protect the future of the UK car industry, ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Premiership club Sale Sharks have signed Racing Metro second row Juandre Kruger and Saracens tight-h...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 296. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 297/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 297): 'Wales' Michael White does \"not know where to turn\" with his game after revealing he suffers from dep...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wales' Michael White does \"not know where to turn\" with his game after revealing he suffers from dep...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'This is such a crucial time for Tottenham's future and the direction they want to go in after taking...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 297. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 298/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 298): 'India batsman Virat Kohli says he is ready for the challenge posed by Australia in the winner-takes-...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'India batsman Virat Kohli says he is ready for the challenge posed by Australia in the winner-takes-...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Banning cars on Saturdays in Mexico City hasn't reduced air pollutants, according to a new study....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 298. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 299/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 299): 'On Sunday Theresa May will land in smoggy Delhi with a large entourage of diplomats, advisers, busin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On Sunday Theresa May will land in smoggy Delhi with a large entourage of diplomats, advisers, busin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Anti-Japanese protests have taken place in cities across China after Japanese nationalists raised th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 299. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 300/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 300): 'A man who sent abusive Twitter messages to politician Stella Creasy has abandoned an appeal against ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man who sent abusive Twitter messages to politician Stella Creasy has abandoned an appeal against ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Manchester City manager Pep Guardiola will not make a decision on Joe Hart's future until the end of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 80]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 80, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 300. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 301/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 301): 'People caught eating rare wild animals in China could be jailed for up to 10 years, state media repo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'People caught eating rare wild animals in China could be jailed for up to 10 years, state media repo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Republican presidential candidate Ted Cruz has asked his campaign spokesman to resign after the staf...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 301. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 302/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 302): 'When International Animal Rescue (IAR) found the baby orangutan in a cardboard box in Borneo he was ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When International Animal Rescue (IAR) found the baby orangutan in a cardboard box in Borneo he was ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The cancellation of a key political rally that was to kick-start the election campaign of one of the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 302. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 303/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 303): 'The dawn of a new season brings fresh hope and optimism of what could be in store....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The dawn of a new season brings fresh hope and optimism of what could be in store....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An investigation into bullying allegations and the death of a young Conservative Party activist will...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 303. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 304/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 304): 'A request by the Scottish government to attend EU steel talks in Brussels has been rejected by the U...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A request by the Scottish government to attend EU steel talks in Brussels has been rejected by the U...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The new national poet of Wales has officially started work after a formal handover at the Hay Festiv...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 304. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 305/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 305): 'When Philip Russell's friends gathered for his 29th birthday drinks, the mood was sombre not celebra...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When Philip Russell's friends gathered for his 29th birthday drinks, the mood was sombre not celebra...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Power sockets are being sucked dry at the CES tech show as thousands of new gadgets vie for attentio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 305. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 306/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 306): 'Retail sales rose slightly in Scotland in the first three months of this year but still lagged the U...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Retail sales rose slightly in Scotland in the first three months of this year but still lagged the U...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Work to produce a detailed three-dimensional survey of a 12th Century cathedral in Orkney is under w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 306. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 307/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 307): 'Real Madrid president Florentino Perez says he has not spoken to Cristiano Ronaldo about his future,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Real Madrid president Florentino Perez says he has not spoken to Cristiano Ronaldo about his future,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A new musical starring Catherine Tate has opened in London - but most reviewers have said it is more...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 307. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 308/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 308): 'Neymar scored the winning penalty as hosts Brazil beat Germany 5-4 on penalties in Rio to win their ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Neymar scored the winning penalty as hosts Brazil beat Germany 5-4 on penalties in Rio to win their ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There are few areas of life in which comic and actor Lenny Henry has not made an impact - working in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 308. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 309/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 309): 'When asked on the Andrew Marr Show about the warnings given by the Bank of England, the IMF and the ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When asked on the Andrew Marr Show about the warnings given by the Bank of England, the IMF and the ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jennifer Lawrence has said she \"will never get Twitter\"....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 309. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 310/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 310): 'England manager Roy Hodgson was happy with his side's display in their friendly against Sweden on We...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'England manager Roy Hodgson was happy with his side's display in their friendly against Sweden on We...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leicester Tigers chief executive Simon Cohen says the club can win trophies this year despite recent...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 310. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 311/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 311): 'On 16 March, goals from Luis Suarez, Neymar and Lionel Messi eased Barcelona to a 3-1 Champions Leag...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'On 16 March, goals from Luis Suarez, Neymar and Lionel Messi eased Barcelona to a 3-1 Champions Leag...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Council tenants in Cardiff could lose the right to buy their home under plans to address the shortag...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 311. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 312/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 312): 'Russia's lower house of parliament has adopted a controversial bill that labels foreign-funded non-g...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Russia's lower house of parliament has adopted a controversial bill that labels foreign-funded non-g...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Campaigners aiming to retain children's heart surgery in Leicester have welcomed a High Court ruling...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 312. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 313/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 313): 'Major Tim Peake has been back on Earth for three weeks now, but what's it really like to live in spa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Major Tim Peake has been back on Earth for three weeks now, but what's it really like to live in spa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'She has already won a Brit award and been nominated for the Mercury Music Prize twice....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 69]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 69, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 313. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 314/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 314): 'Avoiding Premier League relegation would be a \"remarkable achievement\" says Swansea manager Paul Cle...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Avoiding Premier League relegation would be a \"remarkable achievement\" says Swansea manager Paul Cle...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's a simple question - whose job is it to make sure there are enough teachers in the classroom?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 314. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 315/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 315): 'Women on HRT pills should be aware that there is a small chance of an increased risk of blood clots ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Women on HRT pills should be aware that there is a small chance of an increased risk of blood clots ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The two organisations which run the separate school transfer tests in Northern Ireland have said the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 315. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 316/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 316): 'An anti-gun campaigner has admitted possessing an imitation gun after a dispute that saw police seal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An anti-gun campaigner has admitted possessing an imitation gun after a dispute that saw police seal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Use #24HoursInEngland on social media to share your stories....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 316. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 317/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 317): 'Luke Berry scored twice as Cambridge eased past Notts County 4-0....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Luke Berry scored twice as Cambridge eased past Notts County 4-0....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The number of Syrians trying to cross into Turkey amid an upsurge of fighting in northern Syria has ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 317. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 318/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 318): 'When Jude Mayall first launched her Australian native food business, Outback Chef, \"no one wanted to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'When Jude Mayall first launched her Australian native food business, Outback Chef, \"no one wanted to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Neat stacks of medical text books, a sharply-designed carrier bag from a clothes store, an English n...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 318. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 319/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 319): 'Rules to stop companies using complex tax arrangements to avoid paying corporate tax have been agree...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Rules to stop companies using complex tax arrangements to avoid paying corporate tax have been agree...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More work is needed to protect children in Birmingham, according to the commissioner appointed to ov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 36]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 36, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 319. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 320/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 320): 'Beavers should be re-introduced to England to improve water supplies, prevent floods and tackle soil...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Beavers should be re-introduced to England to improve water supplies, prevent floods and tackle soil...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two heritage projects in Gloucester have been given millions of pounds to help plans for development...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 75]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 75, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 320. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 321/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 321): 'A paedophile once dubbed one of the \"vilest men in Britain\" has been jailed for 24 years for child a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A paedophile once dubbed one of the \"vilest men in Britain\" has been jailed for 24 years for child a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A station master in southern Italy has admitted he allowed a train to go on a single track, minutes ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 321. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 322/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 322): 'Former pop star Louise Redknapp is the sixth celebrity to join this year's Strictly Come Dancing lin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Former pop star Louise Redknapp is the sixth celebrity to join this year's Strictly Come Dancing lin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 1,800 police fitness tests were failed by officers in England and Wales in the space of 12...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 322. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 323/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 323): 'Full-time working fathers out-earn their childless counterparts by more than a fifth, research sugge...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Full-time working fathers out-earn their childless counterparts by more than a fifth, research sugge...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Super League side Widnes reached the Challenge Cup sixth round by thrashing League One leaders Rochd...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 323. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 324/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 324): 'Labour left-winger Jeremy Corbyn can overcome media attacks and \"could well\" become Prime Minister, ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Labour left-winger Jeremy Corbyn can overcome media attacks and \"could well\" become Prime Minister, ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Vic Reeves and Bob Mortimer have been recognised as comedy legends at Bristol's annual Slapstick Fes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 324. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 325/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 325): 'John Anderson and Max Sorensen have been called into the Ireland squad for this week's one-day inter...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'John Anderson and Max Sorensen have been called into the Ireland squad for this week's one-day inter...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Meg Lanning hit a stunning century as Australia beat England to level the Women's Ashes series at Br...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 325. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 326/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 326): 'Czech footballer Frantisek Rajtoral has died at the age of 31 in an apparent suicide....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Czech footballer Frantisek Rajtoral has died at the age of 31 in an apparent suicide....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A student who died in the Manchester Arena attack had won a place at university to study paediatrics...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 326. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 327/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 327): 'At least 30 people have been killed and 25 wounded in a bomb attack on a Sunni mosque on the outskir...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'At least 30 people have been killed and 25 wounded in a bomb attack on a Sunni mosque on the outskir...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A series of strikes called ahead of Christmas show \"contempt\" for ordinary people and are \"completel...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 327. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 328/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 328): 'The Conservative Party's chief whip is meeting with the Democratic Unionist Party (DUP) in Belfast a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Conservative Party's chief whip is meeting with the Democratic Unionist Party (DUP) in Belfast a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Rotherham United have signed goalkeeper Lewis Price on a two-year contract following the end of his ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 328. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 329/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 329): 'News of the closure of the Imperial Tobacco factory in Nottingham came as a huge shock to staff and ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'News of the closure of the Imperial Tobacco factory in Nottingham came as a huge shock to staff and ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A murder inquiry has been started after the body of a woman was found at a house in Bradford, police...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 329. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 330/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 330): 'A 90-year-old retired forensic pathologist has given evidence in the trial of a man accused of murde...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 90-year-old retired forensic pathologist has given evidence in the trial of a man accused of murde...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Trump Taj Mahal, the Atlantic City casino, founded by Republican presidential nominee Donald Trump b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 330. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 331/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 331): 'Landslides and floods in southern Brazil over the weekend are now known to have left a dozen people ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Landslides and floods in southern Brazil over the weekend are now known to have left a dozen people ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Leeds Rhinos recorded their third straight Super League win, at the expense of West Yorkshire rivals...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 331. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 332/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 332): 'The body of a goose that was allegedly shot dead at point-blank range in Hertfordshire has been exhu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The body of a goose that was allegedly shot dead at point-blank range in Hertfordshire has been exhu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'St George of Ethiopia became the final team to reach the African Champions League Round of 32 when b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 332. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 333/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 333): 'Plans to partly demolish a derelict Denbighshire landmark, building up to 200 homes and 34 apartment...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Plans to partly demolish a derelict Denbighshire landmark, building up to 200 homes and 34 apartment...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Cambridge United have confirmed head coach Shaun Derry is to undergo a \"small routine medical proced...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 333. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 334/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 334): 'An Egyptian human rights lawyer has been sentenced to five years in jail and 300 lashes by a court i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An Egyptian human rights lawyer has been sentenced to five years in jail and 300 lashes by a court i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The latest in self-driving car technology has been shown off at the Consumer Electronics Show in Las...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 334. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 335/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 335): 'Opening batsman Azhar Ali scored an unbeaten century to lead Pakistan to 310 for six on a rain-inter...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Opening batsman Azhar Ali scored an unbeaten century to lead Pakistan to 310 for six on a rain-inter...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An electrical fault may have caused a fire in a room at a primary school in Inverness, the Scottish ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 335. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 336/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 336): 'A woman who has been making involuntary hiccup-like yelping sounds for eight years hopes to finally ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman who has been making involuntary hiccup-like yelping sounds for eight years hopes to finally ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The UK government has promised to step up pressure for official recognition of atrocities committed ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 336. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 337/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 337): 'A dramatic cliff face walk in County Antrim that was built more than a century ago has reopened to t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A dramatic cliff face walk in County Antrim that was built more than a century ago has reopened to t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gone With The Wind actress Olivia de Havilland has been honoured by satirical magazine The Oldie....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 337. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 338/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 338): 'BT has started trials of the next version of the net's addressing scheme known as IP version 6....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'BT has started trials of the next version of the net's addressing scheme known as IP version 6....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A proposed merger between top French sides Racing 92 and Stade Francais has been called off....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 338. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 339/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 339): 'The government agency that funds English state schools must be \"smarter\" at spotting poor money mana...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The government agency that funds English state schools must be \"smarter\" at spotting poor money mana...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It will become harder to qualify to be a teacher in Wales, but teacher training will be the best in ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 339. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 340/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 340): 'The pilots of at least 20 aircraft taking part in a vintage plane rally have been detained in Ethiop...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The pilots of at least 20 aircraft taking part in a vintage plane rally have been detained in Ethiop...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 12-year-old girl was grabbed by a man as she walked along a footpath in North Lanarkshire....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 340. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 341/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 341): 'A £40m undersea electricity cable has been laid between Jersey and France....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A £40m undersea electricity cable has been laid between Jersey and France....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'South Korea's Mi Hyang Lee and American Paula Creamer are tied for the lead at the Lotte Championshi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 341. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 342/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 342): 'A Welsh adventurer is to scale Mount Everest in a world-first bid to collect health data from the mo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Welsh adventurer is to scale Mount Everest in a world-first bid to collect health data from the mo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir Ian Burnett has been appointed as the new Lord Chief Justice, the head of the judiciary in Engla...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 342. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 343/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 343): 'Jason Marr's first-half strike earned Alloa Athletic a place in the Scottish League Cup quarter-fina...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jason Marr's first-half strike earned Alloa Athletic a place in the Scottish League Cup quarter-fina...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Major League Baseball says it held \"a very good meeting\" with Mayor of London Sadiq Khan about playi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 343. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 344/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 344): 'Hundreds of families in Cornwall, who spent money on care they say the NHS should have paid for, may...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hundreds of families in Cornwall, who spent money on care they say the NHS should have paid for, may...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'World War One was commemorated by swimmers in fancy dress who took to the cold water off the Pembrok...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 73]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 73, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 344. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 345/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 345): 'British politicians have shown \"complacency\" about revelations of mass surveillance by the security ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'British politicians have shown \"complacency\" about revelations of mass surveillance by the security ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former care home manager has been jailed for neglect following the death of a resident....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 345. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 346/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 346): 'Hundreds of staff at Scotland's largest local authority are to be asked to vote on strike action ove...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hundreds of staff at Scotland's largest local authority are to be asked to vote on strike action ove...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police are searching for a group of teenagers after a primary school's shed was destroyed by a delib...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 346. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 347/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 347): 'UKIP will \"live to fight another day\" despite poor local election results, the party's leader in the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'UKIP will \"live to fight another day\" despite poor local election results, the party's leader in the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Scunthorpe moved within four points of a League One play-off spot following victory over Bury at Gla...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 347. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 348/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 348): 'Banking giant HSBC, which was hit with a US fine for money laundering last year, is facing fresh acc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Banking giant HSBC, which was hit with a US fine for money laundering last year, is facing fresh acc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A controversial campaigner accused of being \"pro-rape\" has been forced to cancel fan meet-ups that w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 348. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 349/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 349): 'It's the last Commons week before Christmas, and business in Parliament has a distinctly European fl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It's the last Commons week before Christmas, and business in Parliament has a distinctly European fl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Joshua Buatsi will become the first British boxer to win an Olympic medal in Rio after beating Alger...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 349. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 350/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 350): 'A man has died after suffering serious head injuries in an alleged assault in Leamington Spa....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has died after suffering serious head injuries in an alleged assault in Leamington Spa....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sir John Cunliffe, the deputy governor of the Bank of England, has said Greece is in a \"very dangero...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 350. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 351/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 351): 'Hibernian insist that they are not involved in a \"cash grab\" with a proposal to change the rules ove...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hibernian insist that they are not involved in a \"cash grab\" with a proposal to change the rules ove...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A mother who falsely claimed a Primark security guard snatched her baby from her while she was breas...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 351. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 352/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 352): 'Google has bought a biotech company that has developed a spoon designed to make life easier for peop...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Google has bought a biotech company that has developed a spoon designed to make life easier for peop...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 1,000 new year revellers kicked off 2017 with a bracing dip in the River Forth in the trad...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 352. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 353/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 353): 'Britain's Chris Froome finished sixth on stage one of the Herald Sun Tour in Australia to move fifth...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Britain's Chris Froome finished sixth on stage one of the Herald Sun Tour in Australia to move fifth...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Apple's iOS 11 mobile operating system will not be available for the iPhone 5 and 5C or the iPad 4 w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 353. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 354/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 354): 'The owner of a care home where an 80-year-old woman was found dead under a fallen wardrobe has been ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The owner of a care home where an 80-year-old woman was found dead under a fallen wardrobe has been ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Formula 1 bosses have decided to abandon plans to reintroduce refuelling from 2017....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 354. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 355/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 355): 'The international governing body for fishing has applied for angling to be part of the 2020 Tokyo Ol...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The international governing body for fishing has applied for angling to be part of the 2020 Tokyo Ol...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Asian banks are taking a hard look at the political and economic uncertainty in the UK - and some of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 355. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 356/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 356): 'The discovery of a baby quokka in a fire-hit area of Western Australian has given hope to conservati...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The discovery of a baby quokka in a fire-hit area of Western Australian has given hope to conservati...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The three men who carried out Tuesday's deadly attack on Istanbul's Ataturk airport were all from pa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 356. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 357/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 357): 'A mother whose children both had stem cell transplants has called for a rethink over the ending of N...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A mother whose children both had stem cell transplants has called for a rethink over the ending of N...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The route for a corridor of pylons that will connect a new nuclear facility in Cumbria to the Nation...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 357. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 358/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 358): 'Gregor Townsend says Scotland did not match the level they showed to beat Australia in the 27-22 def...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gregor Townsend says Scotland did not match the level they showed to beat Australia in the 27-22 def...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Researchers say they have discovered a new frog species with distinctive yellow eyebrows in Colombia...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 358. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 359/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 359): 'Gerry Adams has refused to withdraw remarks he made about the IRA holding a newspaper editor at gunp...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Gerry Adams has refused to withdraw remarks he made about the IRA holding a newspaper editor at gunp...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A police force's open letter to a suspected burglar - which included emojis and hashtags - has met w...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 63]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 63, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 359. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 360/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 360): 'The King of Morocco, Mohammed VI, has called on Moroccans living abroad, many of them in Europe, to ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The King of Morocco, Mohammed VI, has called on Moroccans living abroad, many of them in Europe, to ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mario Balotelli scored twice to send Nice four points clear at the top of Ligue 1 - as they beat Dij...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 360. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 361/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 361): 'Hundreds of people have attended a public meeting about plans for opencast coal mining close to a na...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hundreds of people have attended a public meeting about plans for opencast coal mining close to a na...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sinn Féin  is to seek an extra £1.5bn for Northern Ireland in negotiations with an incoming governme...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 80]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 80, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 361. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 362/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 362): 'Bristol hooker Rob Hawkins is to retire at the end of the season....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bristol hooker Rob Hawkins is to retire at the end of the season....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A campaign to highlight the prevalence of dyslexia in the farming industry is being taken to MSPs in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 362. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 363/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 363): 'I cannot wait for the Premier League to get started and I am looking forward to being on the first M...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'I cannot wait for the Premier League to get started and I am looking forward to being on the first M...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A construction company has been fined for polluting a river in County Londonderry while building a g...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 363. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 364/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 364): 'A hearing into a social worker who allegedly failed the murdered toddler Liam Fee has been told it s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A hearing into a social worker who allegedly failed the murdered toddler Liam Fee has been told it s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Liz Lochhead has been confirmed as the new Scots Makar, or national poet....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 364. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 365/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 365): 'The head of Chesterfield's commercial department has left the club after a winning raffle entry was ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The head of Chesterfield's commercial department has left the club after a winning raffle entry was ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three men have appeared in court in Dublin charged with illegal immigration offences....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 365. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 366/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 366): 'A Newport woman has been jailed for three-and-a-half years for setting fire to her neighbour's home....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Newport woman has been jailed for three-and-a-half years for setting fire to her neighbour's home....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Campaigners for a Leave vote have said money Wales gets from Brussels would be maintained by the UK ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 366. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 367/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 367): 'Stephen King has admitted he is nervous about the reaction to his forthcoming sequel to his novel Th...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stephen King has admitted he is nervous about the reaction to his forthcoming sequel to his novel Th...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An action plan to improve cleanliness and hygiene techniques has been put in place at operating thea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 367. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 368/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 368): 'Port Vale have made their seventh new signing of the summer by bringing in experienced former Barnsl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Port Vale have made their seventh new signing of the summer by bringing in experienced former Barnsl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hit musical Miss Saigon is to return to London's West End in May of 2014, its 25th anniversary year....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 368. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 369/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 369): 'A Russian billionaire has been ordered to pay his estranged wife £453m in a divorce settlement at a ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Russian billionaire has been ordered to pay his estranged wife £453m in a divorce settlement at a ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Residents in a Blackburn street have been left without postal deliveries for months after postmen we...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 369. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 370/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 370): 'A draft 25-year government plan sets out a bold vision for nature in England, but campaigners say it...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A draft 25-year government plan sets out a bold vision for nature in England, but campaigners say it...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The son of a pensioner swindled out of her savings by a friend has called for a change in the power ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 370. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 371/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 371): 'BBC England has a Pinterest account where we will be pinning the best of our stories, features and v...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'BBC England has a Pinterest account where we will be pinning the best of our stories, features and v...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Russia will decide later on Monday whether to appeal against its total ban from the Rio 2016 Paralym...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 371. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 372/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 372): 'A council beach sign sparked a few chuckles after stating dogs were banned until September 31, despi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A council beach sign sparked a few chuckles after stating dogs were banned until September 31, despi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tunnelling work across London for the £14.8bn Crossrail scheme has been finished....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 372. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 373/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 373): 'Edinburgh have signed loose-head prop Darryl Marfo from English Premiership side Bath on a one-year ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Edinburgh have signed loose-head prop Darryl Marfo from English Premiership side Bath on a one-year ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Text reminders have cut the number of patients missing States medical appointments, figures suggest....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 373. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 374/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 374): 'British actor Peter Vaughan, best known for roles in Game of Thrones and Porridge, has died at the a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'British actor Peter Vaughan, best known for roles in Game of Thrones and Porridge, has died at the a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Spain's Feliciano Lopez finally ended the wait for a first Aegon Championships title with victory ov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 374. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 375/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 375): 'A new law removing restrictions on public sector strikes is being proposed by the Welsh Government....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A new law removing restrictions on public sector strikes is being proposed by the Welsh Government....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A \"small number\" of Plusnet mobile network users have been unable to access 3G and 4G data services ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 375. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 376/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 376): 'Two boys have been arrested after an alleged end-of-term smoke grenade prank saw an entire school ev...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two boys have been arrested after an alleged end-of-term smoke grenade prank saw an entire school ev...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A fire at a chemical factory near the Spanish capital, Madrid, has injured at least 15 people, three...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 376. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 377/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 377): 'Cheryl Cole has landed the fourth solo number one of her career, becoming only the third British fem...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Cheryl Cole has landed the fourth solo number one of her career, becoming only the third British fem...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former world number one and 2005 champion Vijay Singh made a strong start for a share of the lead af...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 377. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 378/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 378): 'Leeds slumped to their seventh defeat in nine games as two Shaun Lunt tries helped fellow Super Leag...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leeds slumped to their seventh defeat in nine games as two Shaun Lunt tries helped fellow Super Leag...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Welsh footballer Ched Evans \"cannot go back\" to playing the game after his rape conviction, First Mi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 378. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 379/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 379): 'A man has been arrested on suspicion of murdering missing chef Claudia Lawrence....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been arrested on suspicion of murdering missing chef Claudia Lawrence....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Plans for a Swansea Bay tidal lagoon would be approved by the Liberal Democrats immediately, the par...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 379. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 380/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 380): 'German Chancellor Angela Merkel has proposed changes to make it easier to deport asylum-seekers who ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'German Chancellor Angela Merkel has proposed changes to make it easier to deport asylum-seekers who ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 40 people are to be charged after drivers were seen photographing and filming a crash on t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 380. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 381/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 381): 'Brazilian police have arrested a man who they say has confessed to at least 39 murders over a three-...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Brazilian police have arrested a man who they say has confessed to at least 39 murders over a three-...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A new headquarters for Northumbria Police has opened its doors to the public in Newcastle city centr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 381. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 382/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 382): 'Romanian Fed Cup captain Ilie Nastase's presence at the Madrid Open trophy presentation ceremony was...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Romanian Fed Cup captain Ilie Nastase's presence at the Madrid Open trophy presentation ceremony was...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chelsea's FA Cup fifth-round tie with Manchester City will be live on BBC One on Sunday, 21 February...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 382. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 383/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 383): 'Samsung says an audit of 105 of its suppliers in China has identified \"several instances of inadequa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Samsung says an audit of 105 of its suppliers in China has identified \"several instances of inadequa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Middlesex pace bowler Tom Helm has signed a new contract with the club, keeping him at Lord's until ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 383. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 384/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 384): 'Firefighters have tackled a blaze at an industrial unit in Dundee....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Firefighters have tackled a blaze at an industrial unit in Dundee....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'South Park creators Trey Parker and Matt Stone have taken to the West End stage to introduce their s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 384. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 385/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 385): 'More than 900 authors are making a public appeal to Amazon to end a bitter publishing dispute that t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More than 900 authors are making a public appeal to Amazon to end a bitter publishing dispute that t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A two-year-old boy has died following a car crash in Dundonald, on the outskirts of east Belfast....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 385. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 386/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 386): 'A dog found at the top of England's highest mountain has been reunited with its Cumbrian owner....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A dog found at the top of England's highest mountain has been reunited with its Cumbrian owner....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There is a strong case to reopen two railway stations in Powys and Ceredigion, claims a regional tra...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 386. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 387/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 387): 'Most parents still don't know how best to put their babies to sleep, a new survey has shown....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Most parents still don't know how best to put their babies to sleep, a new survey has shown....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 100 iPhones have been found in a single backpack after people at the Coachella music festi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 387. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 388/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 388): 'Three men, including a police officer, have been charged over a hoax terror plot to kidnap an office...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Three men, including a police officer, have been charged over a hoax terror plot to kidnap an office...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A convicted murderer has been jailed for life for a \"horror film\" hammer attack on two police office...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 388. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 389/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 389): 'Bernie Ecclestone will \"walk away\" from Formula 1 if new owners Liberty Media interfere with his run...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bernie Ecclestone will \"walk away\" from Formula 1 if new owners Liberty Media interfere with his run...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is appalling Welsh ministers are spending nearly £20m preparing for a planned M4 relief road arou...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 389. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 390/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 390): 'Its artificial intelligence division, DeepMind, has cut Google's data centres' energy consumption by...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Its artificial intelligence division, DeepMind, has cut Google's data centres' energy consumption by...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was the last televised debate for the main six parties in Wales - and a lively audience at Cardif...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 390. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 391/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 391): 'Campaigners are fighting plans to turn a Victorian Grade II*-listed building into flats....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Campaigners are fighting plans to turn a Victorian Grade II*-listed building into flats....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The first free issue of British music magazine NME has been distributed around the UK, featuring Rih...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 391. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 392/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 392): 'Nigeria international defender Kenneth Omeruo has agreed to return for a second loan spell at Englis...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nigeria international defender Kenneth Omeruo has agreed to return for a second loan spell at Englis...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A row over a caravan pitch at a travellers' site led to two men being stabbed to death, a court has ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 392. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 393/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 393): 'Britain's Hannah Cockroft won her third gold medal of the World Para-athletics Championships in Lond...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Britain's Hannah Cockroft won her third gold medal of the World Para-athletics Championships in Lond...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An appeal has been launched to trace a commuter who punched a train conductor when he stopped him fr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 393. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 394/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 394): 'The value of oil and gas produced in Scotland fell to its lowest level since 1999, despite an increa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The value of oil and gas produced in Scotland fell to its lowest level since 1999, despite an increa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Four fluffy  gentoo penguinchicks have hatched at Edinburgh Zoo in Scotland....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 394. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 395/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 395): 'The work of the board of Sport Wales, the former Sport's Council for Wales, has been temporarily sus...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The work of the board of Sport Wales, the former Sport's Council for Wales, has been temporarily sus...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Exeter's teenage scrum-half Jack Maunder says he is adapting well to the pace of top-flight rugby....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 395. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 396/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 396): '\"Heartbreaking\" graffiti uncovered in a Cambridgeshire church has revealed how three sisters from on...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '\"Heartbreaking\" graffiti uncovered in a Cambridgeshire church has revealed how three sisters from on...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A single mother with four children, including one with cerebral palsy, has come forward to claim her...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 396. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 397/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 397): 'Britain's four-time Olympic champion Sir Mo Farah says he is \"relieved\" he can return to his US home...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Britain's four-time Olympic champion Sir Mo Farah says he is \"relieved\" he can return to his US home...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nearly half of Britons think the government should raise taxes and increase spending, an annual surv...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 397. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 398/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 398): 'England footballer Adam Johnson has denied that a fear of losing his career and £60,000 per week sal...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'England footballer Adam Johnson has denied that a fear of losing his career and £60,000 per week sal...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Neolithic markings carved into a stone in Orkney that were missed for years by archaeologists have b...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 398. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 399/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 399): 'The New Saints were knocked out of the Champions League in the second qualifying round despite a bra...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The New Saints were knocked out of the Champions League in the second qualifying round despite a bra...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hamilton Academical surrendered a lead for the second week running as Inverness Caledonian Thistle s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 399. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 400/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 400): 'Serbia captain Branislav Ivanovic says their 6-1 win over Wales in 2012 will have no bearing Sunday ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Serbia captain Branislav Ivanovic says their 6-1 win over Wales in 2012 will have no bearing Sunday ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'China has said that 13 North Korean restaurant workers who defected to South Korea last week had bee...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 400. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 401/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 401): 'High winds caused a giant marquee to be lifted up and blown across a field at the Orkney County Show...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'High winds caused a giant marquee to be lifted up and blown across a field at the Orkney County Show...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wigan have re-signed defender Maynor Figueroa on a month's loan from Hull....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 401. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 402/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 402): 'Two primary schools in Lewes have been earmarked for closure due to falling pupil numbers....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two primary schools in Lewes have been earmarked for closure due to falling pupil numbers....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The family of teenager Kayleigh Haywood have called for new internet laws following her death last m...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 402. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 403/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 403): 'A legal challenge to the way the PSNI has investigated a murder linked to a loyalist supergrass has ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A legal challenge to the way the PSNI has investigated a murder linked to a loyalist supergrass has ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nokia says it is \"regrettable\" that problems with its Health Mate fitness-tracking app have frustrat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 403. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 404/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 404): 'Donegal manager Rory Gallagher says he is \"unconcerned\" by Jim McGuinness' commentary on his team's ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Donegal manager Rory Gallagher says he is \"unconcerned\" by Jim McGuinness' commentary on his team's ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The popular Islam Today website, run by the Saudi cleric Salman al-Awdah, has closed a section that ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 404. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 405/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 405): 'England put in an excellent display to thrash West Indies by 112 runs in the third women's one-day i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'England put in an excellent display to thrash West Indies by 112 runs in the third women's one-day i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hospital departments that treat the most seriously ill patients are too full and seriously understaf...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 405. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 406/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 406): 'Microsoft chief executive Steve Ballmer said the company is being restructured in what is the first ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Microsoft chief executive Steve Ballmer said the company is being restructured in what is the first ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The UK stock market edged higher, with drinks giant Diageo leading the way after its sales growth be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 70]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 70, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 406. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 407/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 407): 'A man has been seriously injured when violence flared during a town's annual summer celebrations....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been seriously injured when violence flared during a town's annual summer celebrations....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Imagine you had to start paying to view content on all your favourite websites....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 407. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 408/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 408): 'Hotel guests in Jersey had to wait five hours for an ambulance to remove the body of a dead family m...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hotel guests in Jersey had to wait five hours for an ambulance to remove the body of a dead family m...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oscar-winning actor Sir Daniel Day-Lewis has recited seven of Wilfred Owen's most famous works to he...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 408. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 409/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 409): 'England's unbeaten run stretched back 17 months to the damp day in Sao Paulo when two goals from Lui...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'England's unbeaten run stretched back 17 months to the damp day in Sao Paulo when two goals from Lui...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brian Little will discuss his future as Jersey manager with the island Football Association in the n...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 78]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 78, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 409. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 410/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 410): 'Venezuela says it is sending 2,600 troops to the western region of Tachira to quell looting and riot...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Venezuela says it is sending 2,600 troops to the western region of Tachira to quell looting and riot...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'David Cameron has renewed his vow to boost NHS funding and create a \"seven-day\" health service in hi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 410. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 411/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 411): 'US car giant Ford has recalled more than 4,500 of its Kuga model in South Africa for safety checks a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'US car giant Ford has recalled more than 4,500 of its Kuga model in South Africa for safety checks a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Working people typically face house prices of more than seven times their annual earnings as afforda...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 411. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 412/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 412): 'A court battle over the streaming rights to Prince's back catalogue has been triggered, after the la...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A court battle over the streaming rights to Prince's back catalogue has been triggered, after the la...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A series of changes has left pupils in England with special educational needs and disability (Send) ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 412. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 413/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 413): 'A US grand jury has decided not to bring charges against a white policeman over the killing of a 12-...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A US grand jury has decided not to bring charges against a white policeman over the killing of a 12-...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Much of the focus of this election has been on 18 year olds - those born the year the Good Friday Ag...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 413. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 414/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 414): 'The husband of reality TV star and former singer Kerry Katona has appeared in court accused of beati...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The husband of reality TV star and former singer Kerry Katona has appeared in court accused of beati...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The first phase of a £927,000 project to transform a Pembrokeshire harbour into an international mar...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 414. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 415/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 415): 'An international surfer has spoken about the moment he was hit by tonnes of water at a big wave comp...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An international surfer has spoken about the moment he was hit by tonnes of water at a big wave comp...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Each day we feature a photograph sent in from across England....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 415. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 416/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 416): 'The former Argentine President, Cristina Fernandez de Kirchner, has refused to testify at a court he...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The former Argentine President, Cristina Fernandez de Kirchner, has refused to testify at a court he...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'There has been a widespread welcome for news that a new therapy involving stem cell transplants has ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 416. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 417/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 417): 'Jordan Clark produced career-best List A performances with both bat and ball as Lancashire sent Worc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jordan Clark produced career-best List A performances with both bat and ball as Lancashire sent Worc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Lewis Hamilton said he would regroup after a dispiriting Singapore Grand Prix as he attempts to get ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 417. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 418/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 418): 'The nation's hopes will be pinned on Lucie Jones this year as she heads to Eurovision in the hope of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The nation's hopes will be pinned on Lucie Jones this year as she heads to Eurovision in the hope of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Only £5,000 of a £500,000 Welsh Government grant to a Denbighshire hotel which went into administrat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 418. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 419/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 419): 'A 19-year-old man is missing and two other men have been airlifted to hospital after being pulled fr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 19-year-old man is missing and two other men have been airlifted to hospital after being pulled fr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'August's total solar eclipse in the US will almost certainly be the most watched such event in histo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 419. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 420/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 420): 'Two men who were arrested after a car chase involving police in north Belfast on Wednesday have been...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two men who were arrested after a car chase involving police in north Belfast on Wednesday have been...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jenson Button says it was a \"bit of a struggle to find my feet\" during his first day back in a Formu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 420. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 421/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 421): 'The Six Nations will be played over six weeks, reduced from seven, under plans by the Rugby Football...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Six Nations will be played over six weeks, reduced from seven, under plans by the Rugby Football...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ismail Abedi, the brother of Manchester bomber Salman Abedi, has been released without charge....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 421. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 422/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 422): 'A  man with chronic schizophrenia who killed his mother and sister has been jailed for their manslau...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A  man with chronic schizophrenia who killed his mother and sister has been jailed for their manslau...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A shed turned into a mobile nightclub has officially been recognised as the world's smallest by Guin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 422. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 423/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 423): 'British steeplechaser Hatti Archer says she feels \"cheated\" after being upgraded to a silver medal f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'British steeplechaser Hatti Archer says she feels \"cheated\" after being upgraded to a silver medal f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Network Rail has admitted that train punctuality has been inadequate....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 423. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 424/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 424): 'A French journalist and an Iraqi journalist have been killed by a mine explosion in the Iraqi city o...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A French journalist and an Iraqi journalist have been killed by a mine explosion in the Iraqi city o...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Women's Super League One Spring Series leaders Liverpool were held to a 1-1 draw at lowly Bristol Ci...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 424. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 425/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 425): 'Human rights groups have condemned a Singapore court's decision that a law banning gay sex is consti...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Human rights groups have condemned a Singapore court's decision that a law banning gay sex is consti...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Work is about to begin on a new study to find the earliest signs of Alzheimer's disease, many years ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 425. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 426/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 426): 'Consumers are facing a \"customer service lottery\" among energy companies, a charity has said as it c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Consumers are facing a \"customer service lottery\" among energy companies, a charity has said as it c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'SpaceX has put its Dragon astronaut capsule through a practice abort....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 426. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 427/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 427): 'The number of cranes that pepper the skyline is a useful indicator of economic activity....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The number of cranes that pepper the skyline is a useful indicator of economic activity....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A train almost veered onto the wrong track after a line fault at Cardiff Central, Network Rail said....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 95]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 95, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 427. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 428/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 428): 'The prime minister's claim she \"ensured justice for families of Hillsborough\" is \"delusional\", veter...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The prime minister's claim she \"ensured justice for families of Hillsborough\" is \"delusional\", veter...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Health officials are calling for a ban on the sale of confectionary-like flavours in e-cigarettes ov...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 428. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 429/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 429): 'Egypt has asked Cyprus to extradite the man accused of hijacking an airliner on Tuesday, Egyptian pr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Egypt has asked Cyprus to extradite the man accused of hijacking an airliner on Tuesday, Egyptian pr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wylfa nuclear power station on Anglesey has been closed for more than five months, it has emerged....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 429. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 430/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 430): 'The mayor of Colombia's capital, Bogota, Gustavo Petro, has been sacked following allegations of mis...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The mayor of Colombia's capital, Bogota, Gustavo Petro, has been sacked following allegations of mis...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Facebook has developed AI software to help understand what people are talking about in posts to the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 430. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 431/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 431): 'An intrigued Rory McIlroy peered into the bag of a potential rival for the Abu Dhabi title last week...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An intrigued Rory McIlroy peered into the bag of a potential rival for the Abu Dhabi title last week...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Great Britain's women lost 3-1 to Kazakhstan to end their hopes of qualifying for the Winter Olympic...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 431. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 432/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 432): 'Children as young as 11 are among more than 1,000 alleged victims of revenge porn who reported offen...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Children as young as 11 are among more than 1,000 alleged victims of revenge porn who reported offen...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An HGV lorry driver who was caught driving the wrong way along a dual carriageway in Flintshire afte...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 79]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 79, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 432. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 433/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 433): 'The Republic of Ireland's foreign affairs minister has announced over €1.2m (£1.02m) of funding in s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Republic of Ireland's foreign affairs minister has announced over €1.2m (£1.02m) of funding in s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australia's Flying Kangaroo is facing the most tempestuous times in its long history....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 433. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 434/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 434): 'Jonathan Rea began the defence of his World Superbike title with a thrilling victory over Welshman C...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jonathan Rea began the defence of his World Superbike title with a thrilling victory over Welshman C...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'BPP University College is to charge £5,000 per year in tuition fees for three-year courses from 2012...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 434. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 435/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 435): 'A seven-year-old Afghan boy who was in a sealed lorry was rescued by UK police after texting he was ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A seven-year-old Afghan boy who was in a sealed lorry was rescued by UK police after texting he was ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A cycle network in Deeside will be improved after £1.3m has been secured to help regenerate the Flin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 435. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 436/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 436): 'World number one Andy Murray will defend his title at next month's Aegon Championships as six of the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'World number one Andy Murray will defend his title at next month's Aegon Championships as six of the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More police officers have been tasked with catching speeding drivers in the Highlands....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 436. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 437/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 437): 'A man suffered severe burns in a fire believed to have been caused by an exploding halogen heater, S...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man suffered severe burns in a fire believed to have been caused by an exploding halogen heater, S...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Five men have been arrested in connection with the death of a man who was found stabbed outside a fo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 437. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 438/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 438): 'Tiger Woods will start the US PGA on Thursday after recovering from the back injury that forced him ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Tiger Woods will start the US PGA on Thursday after recovering from the back injury that forced him ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An Easyjet flight from the UK to Greece was diverted and delayed for six-and-a-half hours after the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 438. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 439/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 439): 'Talks over Neil Warnock's future as Cardiff City manger are progressing, according to club sources....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Talks over Neil Warnock's future as Cardiff City manger are progressing, according to club sources....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Berlin is the latest city that has suffered a \"terrorist attack\" as a man driving a lorry ploughed i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 77]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 77, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 439. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 440/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 440): 'Leicestershire completed a 16-run One-Day Cup victory over Worcestershire under the Duckworth/Lewis ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Leicestershire completed a 16-run One-Day Cup victory over Worcestershire under the Duckworth/Lewis ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Largely driven by the outrages perpetrated by the so-called Islamic State, the Syrian settlement pro...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 76]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 76, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 440. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 441/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 441): 'Being made redundant hurts no matter at what age - but what happens to those who lose their jobs lat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Being made redundant hurts no matter at what age - but what happens to those who lose their jobs lat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Work to clear the rubble from the site of the collapsed Didcot Power Station will begin on Saturday,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 441. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 442/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 442): 'Nightclubs, pigeon lofts and a wet fish stall are among some of the assets owned by UK councils, acc...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Nightclubs, pigeon lofts and a wet fish stall are among some of the assets owned by UK councils, acc...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A cheap test which could detect even low levels of viruses and some cancers has been developed by UK...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 442. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 443/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 443): 'One of the UK's leading experts in child health is calling for stronger warnings on alcohol to alert...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of the UK's leading experts in child health is calling for stronger warnings on alcohol to alert...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'How do threats of increased gun control affect gun sales in the US?...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 99]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 99, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 443. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 444/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 444): 'Stephen Crabb has been appointed as the new work and pensions secretary, after Iain Duncan Smith res...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Stephen Crabb has been appointed as the new work and pensions secretary, after Iain Duncan Smith res...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former Wrexham striker Bradley Reid has rejoined the National League club on a month's loan from Wol...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 444. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 445/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 445): 'Brazilian President Michel Temer has revoked a decree that deployed troops in the capital, Brasilia,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Brazilian President Michel Temer has revoked a decree that deployed troops in the capital, Brasilia,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Yves Bonnefoy, one of France's most esteemed modern poets, has died at the age of 93, French media r...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 445. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 446/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 446): 'One of the biggest events in women's sport has been taking place in stadiums across Northern Ireland...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of the biggest events in women's sport has been taking place in stadiums across Northern Ireland...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jordan Rossiter says he is fitter than ever having returned to the Rangers squad after an injury-pla...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 446. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 447/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 447): 'What do you do if you get more than three billion queries a day?...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'What do you do if you get more than three billion queries a day?...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nathan Craig's journey to Caernarfon Town's Welsh Cup semi-final started with a tape to BBC's Footba...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 447. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 448/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 448): 'The army in Egypt has warned it will not allow the country to descend into \"uncontrollable conflict\"...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The army in Egypt has warned it will not allow the country to descend into \"uncontrollable conflict\"...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'William Trevor, the Irish novelist, playwright and short story writer, has died at the age of 88, hi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 448. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 449/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 449): 'More than 700 schools in South Korea have been closed as a third person died from the Mers virus and...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'More than 700 schools in South Korea have been closed as a third person died from the Mers virus and...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wales places will be at stake at Saturday's Judgement Day double-header at the Principality Stadium,...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 449. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 450/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 450): 'A woman who bit off part of another woman's nose at Butlins during a children's pantomime has been j...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman who bit off part of another woman's nose at Butlins during a children's pantomime has been j...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nine-year-old Zion Harvey made history when he became the world's youngest double hand transplant pa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 450. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 451/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 451): 'A man has been charged with murdering a 48-year-old who died from head injuries....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been charged with murdering a 48-year-old who died from head injuries....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A Hull KR player has been dropped by his club after being questioned by police over allegations of g...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 451. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 452/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 452): 'A South Sudanese immigrant and prominent high school basketball player in Canada has been arrested a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A South Sudanese immigrant and prominent high school basketball player in Canada has been arrested a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Moon Express has become the first private firm to win US approval for an unmanned mission to the moo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 452. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 453/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 453): 'Wolves have increased their goalkeeping options by signing Andy Lonergan from Championship rivals Fu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wolves have increased their goalkeeping options by signing Andy Lonergan from Championship rivals Fu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A Liberal Democrat MEP was one of the South West's highest profile casualties in the European electi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 453. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 454/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 454): 'Syrian rebels have left the last areas they held in Aleppo's old city, while calling for a five-day ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Syrian rebels have left the last areas they held in Aleppo's old city, while calling for a five-day ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Summer signing Marley Watkins believes adaptability will be crucial if Norwich are to mount a promot...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 68]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 68, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 454. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 455/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 455): 'The editor-in-chief of left-leaning French newspaper Liberation has resigned after a bitter row with...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The editor-in-chief of left-leaning French newspaper Liberation has resigned after a bitter row with...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A girl who suffered serious burns when her \"normal, 100% cotton\" dress was set alight by a spark fro...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 455. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 456/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 456): 'A 50-year-old British man has been killed in a shark attack off a beach in Byron Bay, the most easte...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 50-year-old British man has been killed in a shark attack off a beach in Byron Bay, the most easte...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 60-year-old greyhound breeder who trafficked drugs in the Lothians and Borders has been jailed....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 456. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 457/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 457): 'The Duchess of Cornwall has viewed an exhibition by Angel of the North sculptor Antony Gormley on a ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Duchess of Cornwall has viewed an exhibition by Angel of the North sculptor Antony Gormley on a ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Beth Tweddle has pulled out of the reality show The Jump, after crashing during a practice....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 67]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 67, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 457. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 458/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 458): 'Former Olympic Council of Ireland (OCI) president Pat Hickey has been released from Bangu Prison in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Former Olympic Council of Ireland (OCI) president Pat Hickey has been released from Bangu Prison in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former NHS administrator at a Powys GP surgery has been fined for unlawfully accessing patient rec...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 458. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 459/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 459): 'A fireworks display for the opening of the world's thinnest tall building has been called off becaus...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A fireworks display for the opening of the world's thinnest tall building has been called off becaus...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Egypt has opened a major expansion of the Suez Canal, which deepens the main waterway and provides s...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 459. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 460/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 460): 'Wycombe boss Gareth Ainsworth has said he may take a look at some Stourbridge players after their FA...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wycombe boss Gareth Ainsworth has said he may take a look at some Stourbridge players after their FA...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Nigeria women's captain, Evelyn Nwabuoku, says she is excited about joining French club En Avant de ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 460. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 461/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 461): 'Ceri Large scored two first-half tries as England made it four wins from four in the Women's Six Nat...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ceri Large scored two first-half tries as England made it four wins from four in the Women's Six Nat...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'BlaBlaCar - a long distance ride sharing platform - was, like many start-ups, invented to solve a si...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 461. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 462/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 462): 'The pound rose by more than a cent against the dollar after Bank of England governor Mark Carney sai...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The pound rose by more than a cent against the dollar after Bank of England governor Mark Carney sai...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Bosses at Glastonbury Abbey have said the site still needs to raise around £240,000 to save its anci...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 462. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 463/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 463): 'Social services alerted police to a possible relationship between County Tyrone schoolgirl Arlene Ar...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Social services alerted police to a possible relationship between County Tyrone schoolgirl Arlene Ar...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Car sales in America - the world's second-largest market - are stalling, but there's debate about wh...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 463. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 464/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 464): 'A lifeboat crew member who has volunteered for RNLI Rhyl for more than 30 years has been appointed a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A lifeboat crew member who has volunteered for RNLI Rhyl for more than 30 years has been appointed a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The daughter of Tyrone Gaelic football manager Mickey Harte was strangled, a post-mortem has reveale...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 464. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 465/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 465): 'Residents in Cardiff are being asked to donate unwanted clothes as part of a campaign to collect fiv...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Residents in Cardiff are being asked to donate unwanted clothes as part of a campaign to collect fiv...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Real Madrid kept pace with Barcelona and Atletico Madrid at the top of La Liga by comfortably beatin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 465. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 466/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 466): 'A man has appeared in court charged with murder after the death from stab injuries of a man in West ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has appeared in court charged with murder after the death from stab injuries of a man in West ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The unemployment rate in the eurozone has fallen to its lowest since February 2009, according to the...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 92]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 92, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 466. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 467/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 467): 'A Cardiff PE teacher has been cleared of raping a woman after a night out....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Cardiff PE teacher has been cleared of raping a woman after a night out....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Several people have been injured in southern Sri Lanka during a protest against allowing China to bu...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 467. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 468/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 468): 'A conman once jailed for posing as a royal protection police officer has failed to turn up for sente...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A conman once jailed for posing as a royal protection police officer has failed to turn up for sente...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Jose Mourinho insists he is not concerned about his future as Chelsea manager as he looks to revive ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 468. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 469/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 469): 'Thirty bodies have so far been recovered from a warehouse in Oakland, California, following a deadly...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Thirty bodies have so far been recovered from a warehouse in Oakland, California, following a deadly...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As a growing number of pregnant women are joining prenatal exercises classes, the BBC's Sarah Porter...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 469. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 470/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 470): 'Police are continuing to question three men about a bomb attack on a prison officer in Belfast last ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Police are continuing to question three men about a bomb attack on a prison officer in Belfast last ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been charged over the sexual assault and stabbing of a British backpacker in Australia....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 470. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 471/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 471): 'The annual growth in UK house prices slowed to 8.2% in November compared with 8.8% in October, accor...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The annual growth in UK house prices slowed to 8.2% in November compared with 8.8% in October, accor...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'US President Barack Obama says the US is \"not as divided as some have suggested\" in the wake of fata...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 471. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 472/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 472): 'Eurostar has reported a fall in passengers using the high-speed rail service, saying travellers \"rem...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Eurostar has reported a fall in passengers using the high-speed rail service, saying travellers \"rem...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sweden is the best place in the world to be old and Afghanistan the worst, according to a UN-backed ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 78]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 78, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 472. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 473/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 473): 'Jess Glynne's Take Me Home has been named as this year's official single for BBC Children in Need....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jess Glynne's Take Me Home has been named as this year's official single for BBC Children in Need....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Government papers from 1987 have been released 28 years after publication as part of phased changes ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 473. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 474/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 474): 'The highest court in Egypt has overturned a decree by President Mohammed Mursi to recall parliament....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The highest court in Egypt has overturned a decree by President Mohammed Mursi to recall parliament....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dundee United say that Justine Mitchell has stepped down as a director as she wants to concentrate o...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 474. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 475/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 475): 'An increasing number of rats in areas of the west of England are mutating to become more resistant t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An increasing number of rats in areas of the west of England are mutating to become more resistant t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hundreds of contract workers have downed tools at an oil refinery in North Lincolnshire over \"safety...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 475. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 476/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 476): 'Emergency departments across Northern Ireland are currently experiencing a high level of pressure, a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Emergency departments across Northern Ireland are currently experiencing a high level of pressure, a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Birthday boy Billy Waters and Jack Munns struck as Cheltenham ended a six-match winless League Two r...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 476. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 477/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 477): 'A Birmingham man has been arrested on suspicion of the \"commission, preparation or instigation\" of a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Birmingham man has been arrested on suspicion of the \"commission, preparation or instigation\" of a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'EU foreign ministers have agreed to restrict exports of inflatable boats and outboard motors to Liby...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 477. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 478/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 478): 'Juan Manuel Santos has won re-election in Colombia's most dramatic presidential contest in years....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Juan Manuel Santos has won re-election in Colombia's most dramatic presidential contest in years....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When Kanhaiyalal Gupta jumped off from the engine driver's cabin with a pair of red and green flags ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 478. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 479/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 479): 'In a recent column for the Apple Daily newspaper, the woman often called Asia's most famous lesbian ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In a recent column for the Apple Daily newspaper, the woman often called Asia's most famous lesbian ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Liverpool defender Mamadou Sakho's 30-day suspension for failing a drugs test has been extended worl...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 479. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 480/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 480): 'Bradford Bulls' future has been secured after the administrators confirmed the Super League club has...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bradford Bulls' future has been secured after the administrators confirmed the Super League club has...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The provision of air traffic control at individual Scottish islands airports could be replaced by a ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 63]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 63, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 480. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 481/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 481): 'A man has been arrested after an attack on an SDLP constituency office in Strabane, County Tyrone....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man has been arrested after an attack on an SDLP constituency office in Strabane, County Tyrone....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wakefield have signed forward James Hasson from Super League rivals Salford on a deal until the end ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 113]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 113, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 481. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 482/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 482): 'Aaron Ramsey has revealed how Wales will be inspired by their rugby counterparts' triumphs over Engl...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Aaron Ramsey has revealed how Wales will be inspired by their rugby counterparts' triumphs over Engl...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'For centuries the Gobi Desert has been regarded as a place to avoid....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 482. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 483/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 483): 'Top Gear presenter Jeremy Clarkson has hinted that the time may have come for him to leave the show....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Top Gear presenter Jeremy Clarkson has hinted that the time may have come for him to leave the show....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hostage drama Argo was the big winner at this year's Critics' Choice Awards, hours after director Be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 483. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 484/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 484): 'Early in February, several newspapers ran a story claiming Sir Alex Ferguson rated Tottenham boss Ma...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Early in February, several newspapers ran a story claiming Sir Alex Ferguson rated Tottenham boss Ma...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A giant offshore wind farm that could provide power for up to two million homes has been given the g...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 484. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 485/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 485): 'Exam papers for this year's Higher English tests have had to be replaced at short notice amid concer...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Exam papers for this year's Higher English tests have had to be replaced at short notice amid concer...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Amec Foster Wheeler has agreed to a £2.2bn takeover by Wood Group in a deal that brings together two...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 485. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 486/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 486): 'A man who sexually touched three young girls in an Enniskillen public swimming pool has been jailed ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A man who sexually touched three young girls in an Enniskillen public swimming pool has been jailed ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The funeral of Sir Terry Wogan will take place next week, the BBC has said....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 86]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 86, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 486. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 487/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 487): 'Donors at a conference in Geneva have pledged nearly $1.1bn (Â£857m) to Yemen to help relieve the \"w...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Donors at a conference in Geneva have pledged nearly $1.1bn (Â£857m) to Yemen to help relieve the \"w...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wales football manager Chris Coleman has been revealed as the mystery runner in an annual race....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 487. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 488/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 488): 'Residents of a Damascus suburb are working to bring a sense of normality back to their lives after s...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Residents of a Damascus suburb are working to bring a sense of normality back to their lives after s...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A jump in height of thousands of metres can do pretty odd things to the body, especially when you co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 488. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 489/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 489): 'Ferry passengers between the Channel Islands and the UK face major disruption on Monday with Condor'...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ferry passengers between the Channel Islands and the UK face major disruption on Monday with Condor'...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Hillary Clinton has endured an 11-hour hearing before a Congress committee over the deadly attack on...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 489. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 490/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 490): 'An al-Qaeda training manual was found at the Aberdeen flat of a man accused of terrorism offences, a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An al-Qaeda training manual was found at the Aberdeen flat of a man accused of terrorism offences, a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man from south Wales injured in the 7 July bombings in London has criticised the time it has taken...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 490. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 491/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 491): 'A scheme has been set up to help more female performers top the bill at music festivals....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A scheme has been set up to help more female performers top the bill at music festivals....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Yorkshire pace bowler Ben Coad took a career-best 6-25 as Lancashire were skittled for just 123 on d...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 491. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 492/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 492): '\"I am the bullet in the chamber\" ran the strapline for the Nike advert featuring Paralympic champion...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: '\"I am the bullet in the chamber\" ran the strapline for the Nike advert featuring Paralympic champion...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two men have been jailed for grooming and sex attacks on underage girls in Essex....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 492. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 493/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 493): 'David Sterling has been appointed as the new interim head of the Northern Ireland Civil Service....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'David Sterling has been appointed as the new interim head of the Northern Ireland Civil Service....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Barclays has agreed to sell its retail banking arm in the United Arab Emirates to Abu Dhabi Islamic ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 493. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 494/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 494): 'An Edwardian lobby removed as part of a renovation of Gloucester Cathedral has been put up for sale....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An Edwardian lobby removed as part of a renovation of Gloucester Cathedral has been put up for sale....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An iron gate bearing the Nazi slogan 'Arbeit Macht Frei' ('Work sets you free') has been stolen from...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 494. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 495/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 495): 'If Britain votes to leave the European Union, could it prompt London to demand its own exit - in thi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If Britain votes to leave the European Union, could it prompt London to demand its own exit - in thi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Snow has been falling in some parts of the UK with roads closed and drivers urged to extra care on i...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 85]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 85, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 495. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 496/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 496): 'Plans to give Scotland's new financial watchdog the power to make independent forecasts of the count...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Plans to give Scotland's new financial watchdog the power to make independent forecasts of the count...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'England's Test against Samoa on Saturday, 6 May will be the headline event of a Pacific triple-heade...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 496. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 497/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 497): 'Chelsea manager Jose Mourinho said his side's Premier League title chances were over after a lacklus...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Chelsea manager Jose Mourinho said his side's Premier League title chances were over after a lacklus...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A three-year-old boy who was killed after being struck accidentally by a car driven by his mother di...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 61]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 61, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 497. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 498/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 498): 'Hurricane Matthew has left 108 people dead in Haiti, the interior minister has told AFP news agency....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Hurricane Matthew has left 108 people dead in Haiti, the interior minister has told AFP news agency....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dale Jennings, by his own admission, is not a man to shirk a challenge....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 72]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 72, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 498. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 499/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 499): 'Great Britain's Freddie Woodward and James Heatly won bronze in the men's 3m synchronised final at t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Great Britain's Freddie Woodward and James Heatly won bronze in the men's 3m synchronised final at t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Distressed A-level chemistry students have taken to Twitter after exam questions they claim strayed ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 499. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 500/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 500): 'Bastia's Ligue 1 home match against Nantes on Saturday has been postponed because of violent clashes...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bastia's Ligue 1 home match against Nantes on Saturday has been postponed because of violent clashes...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Spain winger Jesus Navas has rejoined Sevilla on a free transfer after he was released by Manchester...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 500. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 501/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 501): 'Carlisle earned their first points of the new League Two season with victory at Cambridge United....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Carlisle earned their first points of the new League Two season with victory at Cambridge United....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The planet Mercury is about 7km smaller today than when its crust first solidified over four billion...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 501. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 502/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 502): 'An investigation into claims two-time Super Bowl winner Peyton Manning used performance-enhancing dr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An investigation into claims two-time Super Bowl winner Peyton Manning used performance-enhancing dr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A £45m plan to improve flood defences along the River Hull has been agreed....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 502. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 503/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 503): 'Dunfermline ended promotion hopefuls Greenock Morton's year-long unbeaten run at home with a narrow ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Dunfermline ended promotion hopefuls Greenock Morton's year-long unbeaten run at home with a narrow ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It is 80 years since the Spitfire's first flight and for one Belfast man the anniversary brings memo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 503. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 504/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 504): 'The World Cup, the British Invasion, the Summer of Love, imported teams - and a bunch of US business...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The World Cup, the British Invasion, the Summer of Love, imported teams - and a bunch of US business...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Shares in UK retailer Halfords have fallen 9% after it reported a near 6% drop in half-year profits ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 504. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 505/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 505): 'Calls for a review into online adverts offering young, vulnerable people accommodation in exchange f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Calls for a review into online adverts offering young, vulnerable people accommodation in exchange f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Arsenal manager Arsene Wenger says last season's home defeat by Swansea \"killed\" his side's title ho...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 71]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 71, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 505. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 506/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 506): 'Britain's David Smith says he could have died on his bike if he had delayed surgery on a spinal tumo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Britain's David Smith says he could have died on his bike if he had delayed surgery on a spinal tumo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The sale of a key part of the UK's energy infrastructure should be halted, according to the GMB unio...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 506. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 507/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 507): 'Australia will take part in the Eurovision Song Contest final for the third year running after makin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Australia will take part in the Eurovision Song Contest final for the third year running after makin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Authorities in Fiji are assessing the damage after the most powerful cyclone in the Pacific nation's...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 507. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 508/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 508): 'The number of staff working for Transport for London (TfL) and earning more than £100,000 has reache...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The number of staff working for Transport for London (TfL) and earning more than £100,000 has reache...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Pakistan-born ex-Sussex player Ashar Zaidi says Somerset's Craig Overton should apologise after alle...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 88]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 88, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 508. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 509/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 509): 'Olympic cycling superstar Laura Trott has said \"it wasn't love at first sight\" when she first met fi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Olympic cycling superstar Laura Trott has said \"it wasn't love at first sight\" when she first met fi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Debris has been found in the search for a light aircraft which went missing as it flew over the Iris...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 509. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 510/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 510): 'Boys receive £2.20 more pocket money a week than girls, a survey has found, suggesting the gender pa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Boys receive £2.20 more pocket money a week than girls, a survey has found, suggesting the gender pa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'British star James Corden will host the 2017 Grammy Awards, it has been announced....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 510. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 511/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 511): 'The director of the US Office of Personnel Management (OPM) has resigned after a massive data breach...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The director of the US Office of Personnel Management (OPM) has resigned after a massive data breach...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Singer Ed Sheeran has performed his only gig of 2016 at a fundraising event for a children's hospice...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 511. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 512/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 512): 'Algeria Football Federation (FAF) president Mohamed Raouraoua has strongly denied reports that they ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Algeria Football Federation (FAF) president Mohamed Raouraoua has strongly denied reports that they ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police have warned about the dangers of legal highs after two people in Stirling were hospitalised....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 512. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 513/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 513): 'Police in the Glasgow area have raided four properties as part of an investigation into human traffi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Police in the Glasgow area have raided four properties as part of an investigation into human traffi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Wales flanker Justin Tipuric says Ospreys need to be \"on the money\" for their European Challenge Cup...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 513. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 514/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 514): 'The Red Arrows team will not put on a display at the Suffolk Show this year, after the area was deem...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Red Arrows team will not put on a display at the Suffolk Show this year, after the area was deem...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Organisers of a comic convention have accused a council of elitism after being told a theatre is not...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 514. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 515/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 515): 'International observers have described Madagascar's presidential election as free and transparent, a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'International observers have described Madagascar's presidential election as free and transparent, a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Greece has submitted a revised reform plan to the European Union (EU) and International Monetary Fun...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 515. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 516/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 516): 'Will this be the World Cup when Lionel Messi joins the likes of Pele and Maradona in leading his tea...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Will this be the World Cup when Lionel Messi joins the likes of Pele and Maradona in leading his tea...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 100 women and girls have come forward with reports of sexual assault and robbery by gangs ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 516. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 517/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 517): 'Celtic clocked up another dominant performance and victory over Kilmarnock thanks to strikes by Jame...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Celtic clocked up another dominant performance and victory over Kilmarnock thanks to strikes by Jame...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'When Dawn Bonfield, the former chief executive of the Women's Engineering Society, ran a stand recen...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 517. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 518/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 518): 'A \"culture of excess\" in alcohol and junk food advertising is harming Scotland's health, doctors hav...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A \"culture of excess\" in alcohol and junk food advertising is harming Scotland's health, doctors hav...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: '(Close): Wall Street ended the week higher after rebounding from falls on Thursday....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 518. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 519/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 519): 'Michael Hoey made the cut at the Lyonness Open in Austria after a 69 on Friday but Gareth Maybin pul...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Michael Hoey made the cut at the Lyonness Open in Austria after a 69 on Friday but Gareth Maybin pul...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Scotland assistant manager Mark McGhee says the national team will be spurred on by the pain of miss...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 519. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 520/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 520): 'A new wave of protests by university students demanding free education has spread across South Afric...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A new wave of protests by university students demanding free education has spread across South Afric...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some foreign patients could be charged for emergency treatment or for calling out an ambulance under...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 520. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 521/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 521): 'Paulo Dybala scored a hat-trick as Serie A champions Juventus came from 2-0 down to beat Genoa....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Paulo Dybala scored a hat-trick as Serie A champions Juventus came from 2-0 down to beat Genoa....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sport England has warned the Lawn Tennis Association it faces a critical summer that will dictate wh...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 521. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 522/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 522): 'Surrey all-rounder Zafar Ansari will miss Saturday's One-Day Cup final with Gloucestershire at Lord'...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Surrey all-rounder Zafar Ansari will miss Saturday's One-Day Cup final with Gloucestershire at Lord'...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A second-half Cardiff Blues revival was not enough to stop Harlequins winning an entertaining Europe...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 522. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 523/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 523): 'A school has been put into special measures following an inspection which found staff did not unders...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A school has been put into special measures following an inspection which found staff did not unders...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'US department store Macy's has seen its income plunge 40% in the first three months of the year and ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 62]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 62, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 523. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 524/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 524): 'Aslef members have rejected a deal with Southern rail that would have ended a long-running industria...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Aslef members have rejected a deal with Southern rail that would have ended a long-running industria...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three people will go on trial accused of an £800,000 bus firm fraud....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 524. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 525/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 525): 'Satellite images of Mosul have revealed how fighters from so-called Islamic State have constructed m...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Satellite images of Mosul have revealed how fighters from so-called Islamic State have constructed m...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Canadian intelligence officials are warning \"hacktavists\" might try to meddle in the next federal el...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 525. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 526/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 526): 'Afghan authorities are investigating how a suicide bomber was able to enter the offices of the  Kabu...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Afghan authorities are investigating how a suicide bomber was able to enter the offices of the  Kabu...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A teenager has been arrested after a 13-year-old boy was left in a critical condition after taking a...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 526. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 527/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 527): 'A sheriff will issue a written judgement on the death of a Lauder man who suffered a gunshot wound....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A sheriff will issue a written judgement on the death of a Lauder man who suffered a gunshot wound....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Some 14,000 people have been evacuated in the Canadian province of British Columbia (BC) as more fir...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 527. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 528/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 528): 'Port Vale goalkeeper Miguel Santos has had his contract with the managerless League One club termina...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Port Vale goalkeeper Miguel Santos has had his contract with the managerless League One club termina...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Oscar Knox, the four-year-old Belfast child who has a rare form of cancer, has arrived home in North...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 528. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 529/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 529): 'A senior MP has called on Jeremy Corbyn to do more to curb the online abuse of colleagues, saying it...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A senior MP has called on Jeremy Corbyn to do more to curb the online abuse of colleagues, saying it...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'No energy source is perfect....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 529. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 530/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 530): 'The nominees for this year's Foster's Edinburgh Comedy Awards have been unveiled....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The nominees for this year's Foster's Edinburgh Comedy Awards have been unveiled....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Harry Redknapp has signed a one-year contract to continue as Birmingham City manager next season....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 530. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 531/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 531): 'It was a mixed picture for Asian shares at the start of a week shortened by holidays, amid quiet tra...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was a mixed picture for Asian shares at the start of a week shortened by holidays, amid quiet tra...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'England's Justin Rose jumped into a share of the lead with Spain's Sergio Garcia as the battle for t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 531. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 532/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 532): 'A 12-year-old boy and a teenager have been charged in connection with an unprovoked attack on a man ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A 12-year-old boy and a teenager have been charged in connection with an unprovoked attack on a man ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Galashiels branch of the Royal British Legion (RBL) has been fined Â£8,000 after a bar worker wa...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 532. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 533/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 533): 'Scottish Rugby is planning to create six semi-professional franchise clubs as part of a radical rest...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Scottish Rugby is planning to create six semi-professional franchise clubs as part of a radical rest...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'India Prime Minister Narendra Modi has met 47 chief executives of Fortune 500 companies at a dinner ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 533. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 534/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 534): 'A five-day strike by bus drivers in Dorset will go ahead after last ditch pay dispute talks broke do...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A five-day strike by bus drivers in Dorset will go ahead after last ditch pay dispute talks broke do...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dylan Bikey has signed for Hearts and thanked Stirling Albion for helping him win a contract after n...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 534. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 535/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 535): 'A British firm that claims to have come up with a solution to the issue of bulk password theft has a...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A British firm that claims to have come up with a solution to the issue of bulk password theft has a...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'South Africa's government has opposed a legal bid by Winnie Madikizela-Mandela to claim ownership of...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 535. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 536/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 536): 'Media in India are discussing the official reopening of Humayun's Tomb, a 16th-century mausoleum in ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Media in India are discussing the official reopening of Humayun's Tomb, a 16th-century mausoleum in ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chelsea remained firmly on course for a domestic Double as N'Golo Kante's second-half winner settled...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 536. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 537/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 537): 'Talks to avoid a five-day strike on Southern trains have been adjourned until Friday....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Talks to avoid a five-day strike on Southern trains have been adjourned until Friday....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Education is key to addressing \"entrenched and growing inequalities\" across Cardiff, the city's coun...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 537. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 538/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 538): 'Sutton warmed up for Monday's FA Cup clash with Arsenal with a last-gasp defeat at struggling Guisel...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Sutton warmed up for Monday's FA Cup clash with Arsenal with a last-gasp defeat at struggling Guisel...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australian seam bowler Steve Magoffin has signed a new one-year contract extension with Sussex, keep...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 40]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 40, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 538. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 539/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 539): 'Convicted killers getting temporary release from prison, Brexit, snakes in the grass and \"Satanic\" f...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Convicted killers getting temporary release from prison, Brexit, snakes in the grass and \"Satanic\" f...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At first glance, it was a game jam like any other....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 539. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 540/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 540): 'There are some tragedies that really stick in the mind and the Buncrana pier tragedy is one of them....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There are some tragedies that really stick in the mind and the Buncrana pier tragedy is one of them....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Emirates Team New Zealand beat Sweden's Artemis Racing by only half-a-second to go 4-2 up in the bes...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 540. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 541/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 541): 'The ability to breathe has been restored to mice with spinal cord injuries, in what US researchers d...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The ability to breathe has been restored to mice with spinal cord injuries, in what US researchers d...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'St Helens survived a late Warrington fightback in the first game of the Super 8s to deny Wolves the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 541. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 542/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 542): 'A father who repeatedly raped his daughter over a four-year period resulting in her having a baby ha...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A father who repeatedly raped his daughter over a four-year period resulting in her having a baby ha...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Gillingham owner Paul Scally says Ady Pennock deserved another chance to lead the League One club, d...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 542. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 543/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 543): 'The Women's Ashes begins on Tuesday, with England bidding for a third successive victory....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Women's Ashes begins on Tuesday, with England bidding for a third successive victory....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The Conservatives could be at risk of losing their overall majority, while remaining the largest par...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 543. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 544/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 544): 'Girls as young as nine are seeking surgery on their genitals because they are distressed by its appe...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Girls as young as nine are seeking surgery on their genitals because they are distressed by its appe...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The US has said it will seek clarity on the Philippine president's announcement of a \"separation fro...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 544. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 545/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 545): 'A farmer and his employee have been jailed over the death of a contractor who was electrocuted when ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A farmer and his employee have been jailed over the death of a contractor who was electrocuted when ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Doncaster Rovers won promotion back to League One at the first attempt after a narrow win over Mansf...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 65]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 65, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 545. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 546/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 546): 'Jamie Collins salvaged a draw for Sutton at Southport with a second-half penalty....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Jamie Collins salvaged a draw for Sutton at Southport with a second-half penalty....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It was not a normal Sunday on Portstewart Strand....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 546. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 547/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 547): 'Oscar-winning actor Al Pacino has delighted fans at the London Palladium with an evening of conversa...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Oscar-winning actor Al Pacino has delighted fans at the London Palladium with an evening of conversa...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Japanese carmaker Mitsubishi Motors has said domestic orders for its vehicles have halved since it r...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 547. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 548/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 548): 'Forensic experts in Colombia have begun a search for dozens of bodies at a landfill site believed to...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Forensic experts in Colombia have begun a search for dozens of bodies at a landfill site believed to...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The European Court of Human Rights has rejected a complaint brought by one of Joseph Stalin's grands...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 548. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 549/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 549): 'A woman faces a minimum wait of 12 months for a consultation about surgery for a cataract, MSPs have...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman faces a minimum wait of 12 months for a consultation about surgery for a cataract, MSPs have...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Tonga back row Viliami Fihaki has signed a two-year contract with Edinburgh after leaving Sale Shark...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 85]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 85, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 549. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 550/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 550): 'Whoever is elected in the general election must be held to account on mental health issues, says the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Whoever is elected in the general election must be held to account on mental health issues, says the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Plans to \"future proof\" communities across Wales against economic and social decline are among new l...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 80]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 80, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 550. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 551/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 551): 'A gang's attempt to steal batteries from 70 golf buggies was foiled as they loaded them into a getaw...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A gang's attempt to steal batteries from 70 golf buggies was foiled as they loaded them into a getaw...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Parts of Scotland have been badly hit by high winds and heavy rain in the wake of what was Hurricane...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 551. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 552/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 552): 'Melvyn Bragg has accused the National Trust of \"bullying\" after it bought a tranche of land in the L...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Melvyn Bragg has accused the National Trust of \"bullying\" after it bought a tranche of land in the L...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Crucial DNA evidence in the case of the murder of two British backpackers cannot be retested because...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 552. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 553/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 553): 'Italian Luca Paolini has been banned for 18 months after testing positive for cocaine at the 2015 To...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Italian Luca Paolini has been banned for 18 months after testing positive for cocaine at the 2015 To...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A 93-year-old alleged former guard at the Auschwitz extermination camp has been arrested in southern...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 553. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 554/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 554): 'A court in Sri Lanka has acquitted five men accused of involvement in the murder in 2006 of a promin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A court in Sri Lanka has acquitted five men accused of involvement in the murder in 2006 of a promin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police in Berlin have shot dead an Islamist who stabbed and seriously injured a policewoman....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 554. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 555/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 555): 'The UK will not be \"cowed\" after Islamic State killed another western hostage, David Cameron has tol...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The UK will not be \"cowed\" after Islamic State killed another western hostage, David Cameron has tol...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A grant of £4m towards a new £28.5m stand at Headingley stadium has been agreed by Leeds City Counci...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 555. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 556/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 556): 'Bulgarian Bogdan Dochev - the assistant referee who failed to spot Maradona's Hand of God goal again...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bulgarian Bogdan Dochev - the assistant referee who failed to spot Maradona's Hand of God goal again...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The surviving half of a couple of \"celebrity\" swans has been attacked by dogs, only a week after his...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 556. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 557/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 557): 'A third man has died following a crash in Manchester....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A third man has died following a crash in Manchester....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two people have been taken to hospital after being attacked by three dogs at their Derbyshire home....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 557. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 558/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 558): 'Labour MSP Ken Macintosh has officially launched his bid for the party's leadership in Scotland....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Labour MSP Ken Macintosh has officially launched his bid for the party's leadership in Scotland....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mainland Chinese shares on Wednesday fell again, extending losses from the previous day, despite rec...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 558. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 559/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 559): 'A suspected suicide bomber has attacked a regional security services building in the northern Kazakh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A suspected suicide bomber has attacked a regional security services building in the northern Kazakh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'As Donald Trump prepares to take the presidential oath of office, it's time for his campaign rhetori...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 50]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 50, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 559. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 560/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 560): 'Goals from Sylvan Ebanks-Blake and Lee Novak saw strugglers Chesterfield upset high-flying Gillingha...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Goals from Sylvan Ebanks-Blake and Lee Novak saw strugglers Chesterfield upset high-flying Gillingha...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Australia A players will boycott a tour of South Africa in July if a contract dispute is not resolve...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 560. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 561/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 561): 'Belgian Ronny Van Geneugden has been appointed as the new coach of Malawi on a two-year deal....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Belgian Ronny Van Geneugden has been appointed as the new coach of Malawi on a two-year deal....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Ed Balls says Strictly Come Dancing has taught him he has an \"inner Beyonce\" - and he is already thi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 561. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 562/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 562): 'SP Energy Networks has restored electricity supplies to Glasgow city centre following a power failur...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'SP Energy Networks has restored electricity supplies to Glasgow city centre following a power failur...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A prominent US civil rights group says it has identified almost 900 incidents of harassment followin...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 562. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 563/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 563): 'The former head of Anglo-Irish Bank Sean Fitzpatrick has been declared bankrupt by the High Court in...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The former head of Anglo-Irish Bank Sean Fitzpatrick has been declared bankrupt by the High Court in...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Police are investigating two serious crashes on the A470 in south Wales....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 563. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 564/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 564): 'Armagh will battle with Tipperary for a Football League Division Three promotion spot next Sunday af...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Armagh will battle with Tipperary for a Football League Division Three promotion spot next Sunday af...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Norwich were relegated to the Championship despite a thumping victory over Watford at Carrow Road....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 564. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 565/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 565): 'A power failure at Cardiff Crown Court has forced the building to closure and cases to be heard else...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A power failure at Cardiff Crown Court has forced the building to closure and cases to be heard else...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The assignment editor of the Venezuelan TV news network Globovision has been kidnapped, according to...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 565. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 566/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 566): 'China's Ding Junhui made a maximum 147 break in the quarter-final of the Welsh Open in Cardiff but c...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'China's Ding Junhui made a maximum 147 break in the quarter-final of the Welsh Open in Cardiff but c...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dublin Airport has temporarily suspended flights because of a fire on the roof of a hangar....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 566. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 567/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 567): 'Five orthopaedic consultants have warned that patients will suffer as a result of the decision to mo...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Five orthopaedic consultants have warned that patients will suffer as a result of the decision to mo...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been jailed for life for brutally murdering a woman during a robbery at her home in Glasgo...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 567. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 568/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 568): 'A takeaway delivery driver was killed in a \"snatch and grab\" robbery for three pizzas, a court has h...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A takeaway delivery driver was killed in a \"snatch and grab\" robbery for three pizzas, a court has h...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A series of riots followed repeated warnings about low staffing levels across prisons, a watchdog ha...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 568. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 569/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 569): 'Durham fast bowler Mark Wood trained with England at Lord's on Tuesday after being added to the Lion...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Durham fast bowler Mark Wood trained with England at Lord's on Tuesday after being added to the Lion...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After the result of the UK's snap general election on 8 June has been announced and the dust has set...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 569. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 570/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 570): 'Bydd pier Bae Colwyn yn cael ei ddatgymalu a'i storio wedi i ran ohono ddisgyn i'r môr....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Bydd pier Bae Colwyn yn cael ei ddatgymalu a'i storio wedi i ran ohono ddisgyn i'r môr....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The number of secondary school children in England being taught in classes with 36 or more pupils ha...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 73]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 73, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 570. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 571/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 571): 'If you want to earn a big salary, you would be advised to study medicine or economics, says a report...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'If you want to earn a big salary, you would be advised to study medicine or economics, says a report...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'More than 200 police have been involved in a major search and arrest operation in the Republic of Ir...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 571. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 572/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 572): 'A lorry driver who was on the wrong side of the road when he crashed into an oncoming car blamed the...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A lorry driver who was on the wrong side of the road when he crashed into an oncoming car blamed the...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A British diver has died exploring a wreck off the American coast....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 77]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 77, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 572. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 573/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 573): 'An alien star passed through our Solar System just 70,000 years ago, astronomers have discovered....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An alien star passed through our Solar System just 70,000 years ago, astronomers have discovered....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two Northern Ireland Executive ministers have had what they described as a \"useful\" meeting with rep...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 573. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 574/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 574): 'Two Scottish-born scientists have been awarded the 2016 Nobel Prize in Physics for their discoveries...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two Scottish-born scientists have been awarded the 2016 Nobel Prize in Physics for their discoveries...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Thousands of drug cases remain unsolved due to cuts in forensic service, according to Scottish Labou...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 574. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 575/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 575): 'The world's number one-rated racehorse Arrogate recovered from a poor start to win the $10m (£8.02m)...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The world's number one-rated racehorse Arrogate recovered from a poor start to win the $10m (£8.02m)...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sussex have signed South Africa all-rounder Vernon Philander as an overseas player for the first hal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 575. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 576/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 576): 'In death she received some of the sympathy denied her while she was alive....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'In death she received some of the sympathy denied her while she was alive....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The NHS is failing to meet the needs of transgender adults and children, says a nurse who has first-...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 576. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 577/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 577): 'An exhibition of late works by artist Salvador Dali opens this weekend in Atlanta, including several...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An exhibition of late works by artist Salvador Dali opens this weekend in Atlanta, including several...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'BBC Sport will bring you live coverage of the 2015 Snooker World Championship from Saturday, 18 Apri...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 577. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 578/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 578): 'Human remains have been found on a Greek island where a British tourist went missing 12 years ago....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Human remains have been found on a Greek island where a British tourist went missing 12 years ago....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'After a busy week which featured a guest appearance on The Graham Norton Show and a trip to Glastonb...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 578. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 579/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 579): 'Giant owls making up Birmingham's Big Hoot art trail have been gathered in the same place for the la...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Giant owls making up Birmingham's Big Hoot art trail have been gathered in the same place for the la...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Investors boosted shares of Amazon on Monday in anticipation of strong sales during the firm's heavi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 579. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 580/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 580): 'New rules have come into force which mean cigarettes and tobacco must be sold in plain green packets...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'New rules have come into force which mean cigarettes and tobacco must be sold in plain green packets...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Aung San Suu Kyi has denied there is ethnic cleansing of the Muslim minority in Myanmar - despite wi...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 580. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 581/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 581): 'Two bodies have been found inside a disused building after a large fire broke out in Manchester's Ch...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two bodies have been found inside a disused building after a large fire broke out in Manchester's Ch...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Justine Thornton and Marina Wheeler, whose husbands are Ed Miliband and Boris Johnson, have been app...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 581. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 582/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 582): 'A woman who lived with her partner for 18 years has launched a legal battle after his share of their...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A woman who lived with her partner for 18 years has launched a legal battle after his share of their...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'France is holding the second round of regional elections in which the far-right National Front (FN) ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 582. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 583/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 583): 'Manchester United forward Danny Welbeck has been ruled out for four to five weeks after suffering a ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Manchester United forward Danny Welbeck has been ruled out for four to five weeks after suffering a ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Goals from Otis Khan, Darren Ward, Matt Dolan and Tom Eaves were enough to see Yeovil claim a battli...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 583. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 584/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 584): 'The January transfer window is about to open - but which Premier League side will do the best bit of...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The January transfer window is about to open - but which Premier League side will do the best bit of...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Indian activist Irom Sharmila has said she \"felt isolated during years of confinement\" and now wants...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 48]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 48, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 584. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 585/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 585): 'The UK government is donating £1.5m for the translation of all William Shakespeare's works into Mand...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The UK government is donating £1.5m for the translation of all William Shakespeare's works into Mand...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Sales at the engineering firm Dyson rose by more than a quarter in 2015, helped by a tripling of sal...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 51]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 51, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 585. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 586/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 586): 'The US Senate has failed to pass a funding bill to help fight the Zika virus for a third time....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The US Senate has failed to pass a funding bill to help fight the Zika virus for a third time....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A leading cycling team could face a suspension after one of its riders failed a test for a banned su...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 586. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 587/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 587): 'The huge diversity of frogs we see today is mainly a consequence of the asteroid strike that killed ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The huge diversity of frogs we see today is mainly a consequence of the asteroid strike that killed ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A group which helps abuse victims is calling for the Football Association of Wales to hold an inquir...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 73]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 73, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 587. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 588/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 588): 'Romania's president has appointed Education Minister Sorin Cimpeanu as interim prime minister after ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Romania's president has appointed Education Minister Sorin Cimpeanu as interim prime minister after ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Average speed cameras are to be installed on a stretch of roadworks for the Aberdeen bypass....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 588. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 589/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 589): 'Voting in the Sudanese elections has ended, with only a third of the electorate casting their ballot...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Voting in the Sudanese elections has ended, with only a third of the electorate casting their ballot...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A controversial new book about the last days of former South African President Nelson Mandela has be...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 52]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 52, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 589. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 590/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 590): 'The man who died following a serious road traffic collision on the main Londonderry to Belfast road ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The man who died following a serious road traffic collision on the main Londonderry to Belfast road ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Officials of Wrexham FC have responded to criticism by fans over a plan for players to train on a co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 590. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 591/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 591): 'Residents have begun moving in to what developers claim is the first new town to be built in Scotlan...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Residents have begun moving in to what developers claim is the first new town to be built in Scotlan...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Andy Murray should be favourite for the final tennis major of the year, the US Open, according to Gr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 60]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 60, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 591. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 592/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 592): 'A teenager who had rarely left her home county of Cornwall has become a global sensation after her Y...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A teenager who had rarely left her home county of Cornwall has become a global sensation after her Y...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three teenagers have been jailed for stabbing a young rapper to death in a fight over a stolen bicyc...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 592. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 593/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 593): 'The Irish health minister has said pregnant women who feel suicidal will not have to face six doctor...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Irish health minister has said pregnant women who feel suicidal will not have to face six doctor...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Three women have been killed in the Colombian capital, Bogotá, in what the authorities say was a ter...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 64]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 64, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 593. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 594/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 594): 'Two preferred sites for a park-and-ride to the east of Bath have been chosen from a shortlist of eig...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two preferred sites for a park-and-ride to the east of Bath have been chosen from a shortlist of eig...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Greater Manchester Police (GMP) is \"under real strain\" following the concert terror attack and years...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 594. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 595/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 595): 'A stranger walked a seven-year-old girl to a park and then hit her in the face, police said....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A stranger walked a seven-year-old girl to a park and then hit her in the face, police said....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Celtic made short work of Gibraltarian part-timers Lincoln Red Imps to book a Champions League third...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 595. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 596/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 596): 'A Ceredigion school has paid tribute to a reception class pupil who died along with his grandmother ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Ceredigion school has paid tribute to a reception class pupil who died along with his grandmother ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man who was killed when he was struck by a car in South Shields has been named by police....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 45]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 45, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 596. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 597/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 597): 'It was announced on Tuesday that England manager Sam Allardyce had left the job after just 67 days i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It was announced on Tuesday that England manager Sam Allardyce had left the job after just 67 days i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'It's raining in the UK and many on social media are having fun with it....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 597. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 598/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 598): 'Two seal pups, believed to be the first grey seal twins born in the UK, have been abandoned by their...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two seal pups, believed to be the first grey seal twins born in the UK, have been abandoned by their...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Dozens of girls and young women are reported to have been killed in a road crash in Swaziland while ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 44]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 44, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 598. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 599/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 599): 'An urgent inquiry into the milk pricing crisis has been launched by the Scottish Parliament's rural ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'An urgent inquiry into the milk pricing crisis has been launched by the Scottish Parliament's rural ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Two men convicted of a revenge murder in which a flat-screen TV was used as a weapon have been jaile...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 57]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 57, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 599. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 600/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 600): 'George Osborne has unveiled a tax on sugary drinks in a wide ranging Budget dominated by gloomier gr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'George Osborne has unveiled a tax on sugary drinks in a wide ranging Budget dominated by gloomier gr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'An innovative housing development that could help people avoid the so-called \"bedroom tax\" has been ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 58]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 58, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 600. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 601/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 601): 'One of the fastest bowlers in cricket history has made an unlikely career move - starring in a roman...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'One of the fastest bowlers in cricket history has made an unlikely career move - starring in a roman...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'BBC has unveiled range of topical arts programmes, as part of a \"renewed commitment\" to primetime co...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 601. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 602/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 602): 'Only two overs were possible at the County Ground as Northamptonshire's One-Day Cup with Leicestersh...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Only two overs were possible at the County Ground as Northamptonshire's One-Day Cup with Leicestersh...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The US commander of international forces in Afghanistan has said an air strike on a hospital in the ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 602. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 603/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 603): 'Celtic have appointed former Chelsea head of scouting Lee Congerton as their new head of recruitment...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Celtic have appointed former Chelsea head of scouting Lee Congerton as their new head of recruitment...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Heavy rain has led to flooding with people needing to be rescued from waterlogged homes and roads in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 85]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 85, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 603. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 604/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 604): 'Singer Amy Winehouse has checked out of the Priory clinic in south-west London to carry on with tour...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Singer Amy Winehouse has checked out of the Priory clinic in south-west London to carry on with tour...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Facebook is rolling out a range of Reactions to replace its iconic Like button....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 47]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 47, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 604. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 605/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 605): 'A raft of measures to support the black cab trade amid growing competition from private car hire ser...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A raft of measures to support the black cab trade amid growing competition from private car hire ser...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'HMV's chief executive has been made redundant by administrators in charge of restructuring the faili...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 605. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 606/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 606): 'Octogenarian Irene Povey from Wolverhampton has become the oldest person in the region to take up fr...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Octogenarian Irene Povey from Wolverhampton has become the oldest person in the region to take up fr...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'James Morrison's early goal was enough to ensure West Brom beat Stoke at The Hawthorns to consolidat...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 606. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 607/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 607): 'Wolves maintained the momentum from their FA Cup heroics at Liverpool with an eventful win at 10-man...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Wolves maintained the momentum from their FA Cup heroics at Liverpool with an eventful win at 10-man...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Harry Redknapp says he will not be paid for his three-game stint in charge of Birmingham City if he ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 49]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 49, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 607. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 608/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 608): 'Ethiopia has become the second country after Japan to take delivery of the Boeing 787 Dreamliner....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Ethiopia has become the second country after Japan to take delivery of the Boeing 787 Dreamliner....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The jury in the case of two men accused of murdering a young mother in 1991 has retired to consider ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 608. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 609/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 609): 'Rome's bid to host the 2020 Olympics has been scrapped after the prime minister said it would be \"ir...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Rome's bid to host the 2020 Olympics has been scrapped after the prime minister said it would be \"ir...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Brazilian striker Neymar said he feels \"more alive than ever\" after marking his Paris St-Germain deb...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 37]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 37, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 609. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 610/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 610): 'A site for the first expansion of grammar school provision in England for over 50 years has been ide...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A site for the first expansion of grammar school provision in England for over 50 years has been ide...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The number of customers switching electricity suppliers has risen 14% this year....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 38]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 38, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 610. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 611/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 611): 'The Supreme Court is to consider whether to examine a married couple's attempt to find out why their...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The Supreme Court is to consider whether to examine a married couple's attempt to find out why their...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'British pentathlete Jamie Cooke proved his Rio Olympic credentials by easing into Saturday's Europea...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 53]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 53, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 611. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 612/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 612): 'The man who died in a crash on the M1 in County Tyrone on Friday 23 December was Paulo Roberto Maia-...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'The man who died in a crash on the M1 in County Tyrone on Friday 23 December was Paulo Roberto Maia-...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Farm leaders have said government plans to bring EU law onto the UK statute books must not jeopardis...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 56]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 56, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 612. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 613/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 613): 'With almost a third of new build homes outside London sold with the help of government-backed loans,...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'With almost a third of new build homes outside London sold with the help of government-backed loans,...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Former News of the World editor Andy Coulson has been jailed for 18 months for conspiring to hack ph...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 42]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 42, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 613. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 614/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 614): 'Not so long ago, Birubala Rabha believed witches existed....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Not so long ago, Birubala Rabha believed witches existed....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Mae cyn arweinydd y Blaid Lafur, yr Arglwydd Kinnock wedi dweud ei fod yn difaru'r argraff fuddugoli...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 81]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 81, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 614. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 615/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 615): 'Police have charged a 16-year-old boy with the murder of a man who died after being stabbed in Birmi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Police have charged a 16-year-old boy with the murder of a man who died after being stabbed in Birmi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Open champion Henrik Stenson sealed the Race to Dubai title as Englishman Matthew Fitzpatrick won th...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 70]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 70, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 615. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 616/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 616): 'Two \"lost\" films starring actor Peter Sellers are to be shown in public for the first time in more t...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Two \"lost\" films starring actor Peter Sellers are to be shown in public for the first time in more t...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Campaigners have accused the police watchdog of \"moving at snail's pace\" over claims of improper pol...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 66]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 66, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 616. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 617/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 617): 'Celtic have signed defender Dedryck Boyata from Manchester City on a four-year contract....'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Celtic have signed defender Dedryck Boyata from Manchester City on a four-year contract....'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A man has been sectioned under the Mental Health Act after a bomb hoax resulted in an RAF jet escort...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 59]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 59, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 617. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 618/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 618): 'Republic of Ireland boss Martin O'Neill praised Jeff Hendrick and Jon Walters after they helped set ...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Republic of Ireland boss Martin O'Neill praised Jeff Hendrick and Jon Walters after they helped set ...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'BBC Sport's football expert Mark Lawrenson is pitting his wits against a different guest each week t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 76]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 76, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 618. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 619/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 619): 'Robert Lewandowski scored twice as Bayern Munich beat 10-man Bochum to reach the German Cup semi-fin...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Robert Lewandowski scored twice as Bayern Munich beat 10-man Bochum to reach the German Cup semi-fin...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'At least 12 people have been wounded in clashes in Armenia between police and protesters demanding t...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 55]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 55, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 619. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 620/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 620): 'A Denbighshire seaside town which has seen a change in fortunes since the arrival of a retail park i...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'A Denbighshire seaside town which has seen a change in fortunes since the arrival of a retail park i...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Chelsea have announced that Antonio Conte will take charge of Chelsea this summer on a three year de...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 43]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 43, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 620. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 621/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 621): 'It is a quiet, leafy street in east Belfast that has inspired two songs on one of the greatest album...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'It is a quiet, leafy street in east Belfast that has inspired two songs on one of the greatest album...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'The UK government may wish to seek \"special status\" for Northern Ireland's electricity market after ...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 41]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 41, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 621. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 622/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 622): 'Adam Webster's second goal of the season helped Portsmouth to victory over Cambridge and lifted them...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Adam Webster's second goal of the season helped Portsmouth to victory over Cambridge and lifted them...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Northampton's record-breaking run extended to 10 straight league wins following victory over York....'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 622. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 623/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 623): 'RBAI clinched a third Schools' Cup triumph in a row and their 32nd outright title by beating Methodi...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'RBAI clinched a third Schools' Cup triumph in a row and their 32nd outright title by beating Methodi...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A woman has been charged with murdering a man who was stabbed to death in St Helens, police have sai...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 54]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 54, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 623. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 624/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 624): 'There's a real battle going on between the Conservatives and Labour for the seat of Warwick and Leam...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'There's a real battle going on between the Conservatives and Labour for the seat of Warwick and Leam...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'Royal Air Force staff operating drone aircraft in Iraq and Syria may be at greater risk of mental tr...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 39]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 39, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 624. Num noised sents from chunk: 64\nMLMGenerator.generate: Processing chunk 625/625. Batch items: 64\nMLMGenerator.generate: First sentence in batch to be noised (chunk 625): 'Pakistani ghazal singer Ghulam Ali has agreed to perform in the Indian capital Delhi after his conce...'\n  MLMGenerator.mlm_infiller: Starting for a batch of 64 sentences.\n    MLMGenerator.mlm_infiller: Processing sentence 1 in batch: 'Pakistani ghazal singer Ghulam Ali has agreed to perform in the Indian capital Delhi after his conce...'\n    MLMGenerator.mlm_infiller: Processing sentence 2 in batch: 'A former aide to Prime Minister David Cameron has been found guilty of possessing and downloading in...'\n  MLMGenerator.mlm_infiller: Preparing to pad 64 sequences.\n  MLMGenerator.mlm_infiller: Padded inputs created. Shape: torch.Size([64, 46]). Calling model...\n  MLMGenerator.mlm_infiller: Model inference complete. Logits shape: torch.Size([64, 46, 30522])\n  MLMGenerator.mlm_infiller: Finished for batch. Returning 64 sentences.\nMLMGenerator.generate: Finished mlm_infiller for chunk 625. Num noised sents from chunk: 64\nMLMGenerator.generate: Finished generate() method. Total sents_output: 40000\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Constructing final xsum examples:   0%|          | 0/40000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"name":"stdout","text":"Sampling 20000 from 40000 for xsum\nSaved 20000 samples for xsum to /kaggle/working/alignscore_training_data_20k/xsum_20k.jsonl\n\nProcessing dataset: stsb\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Constructing stsb:   0%|          | 0/5749 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f2feb29a4ec042b799e4b2803af01169"}},"metadata":{}},{"name":"stdout","text":"Using all 5749 examples for stsb (target was 20000)\nSaved 5749 samples for stsb to /kaggle/working/alignscore_training_data_20k/stsb_20k.jsonl\n\n--- Data Generation and Sampling Complete ---\nDataset: mnli, Samples saved: 20000\nDataset: paws, Samples saved: 20000\nDataset: xsum, Samples saved: 20000\nDataset: stsb, Samples saved: 5749\n\nGenerated files in: /kaggle/working/alignscore_training_data_20k\n/kaggle/working/alignscore_training_data_20k/xsum_20k.jsonl\n/kaggle/working/alignscore_training_data_20k/mnli_20k.jsonl\n  First line of mnli_20k.jsonl:\n    {\"task\": \"nli\", \"text_a\": \"His portraits of saints, hermits, and martyrs reveal impeccable drawing skills, composition, and keen exploitation of light and shadow.\", \"text_b\": [\"His portraits are mostly impressionist pieces, breaking down subjects into simple and broad strokes of colors.\"], \"text_c\": [\"his portraits are mostly impressionist pieces, breaking these subjects into simple and broad strokes of colors.\"], \"orig_label\": 2}\n/kaggle/working/alignscore_training_data_20k/stsb_20k.jsonl\n/kaggle/working/alignscore_training_data_20k/paws_20k.jsonl\n","output_type":"stream"}],"execution_count":12},{"cell_type":"markdown","source":"# Dataloader Definitions","metadata":{}},{"cell_type":"code","source":"from typing import Optional, Tuple, List\n\nclass DSTDataSet(Dataset):\n    def __init__(self, dataset_paths_with_task: list, model_name='roberta-large', need_mlm=True, tokenizer_max_length=512):\n        super().__init__()\n        self.tokenizer = AutoTokenizer.from_pretrained(model_name)\n        self.tokenizer_max_length = tokenizer_max_length\n        self.need_mlm = need_mlm\n        \n        self.dataset = []\n        print(f\"Loading data for DSTDataSet...\")\n        for item in tqdm(dataset_paths_with_task, desc=\"Loading individual JSONL files\"):\n            path = item['path']\n            task_type_from_path = item['task_type'] # Get task_type passed along with path\n            try:\n                with open(path, 'r', encoding='utf8') as f:\n                    for line_idx, line in enumerate(f):\n                        try:\n                            loaded_json = json.loads(line)\n                            # Ensure the loaded JSON has the 'task' field, if not, use the one from path config\n                            if 'task' not in loaded_json:\n                                loaded_json['task'] = task_type_from_path\n                            self.dataset.append(loaded_json)\n                        except json.JSONDecodeError:\n                            print(f\"Warning: Could not decode JSON from line {line_idx} in {path}. Skipping: {line.strip()}\")\n            except FileNotFoundError:\n                 print(f\"Warning: File not found {path}. Skipping.\")\n        \n        if not self.dataset:\n            print(\"Warning: DSTDataSet loaded 0 examples. Check paths and file contents.\")\n        else:\n            print(f\"DSTDataSet loaded a total of {len(self.dataset)} examples from {len(dataset_paths_with_task)} task files.\")\n\n\n    def random_word(self, token_ids_list):\n        tokens = list(token_ids_list) \n        if not self.need_mlm:\n            return tokens, [-100] * len(tokens)\n\n        output_label = []\n        for i, token_id in enumerate(tokens):\n            if token_id == self.tokenizer.pad_token_id:\n                output_label.append(-100)\n                continue\n            prob = random.random()\n            if prob < 0.15:\n                prob /= 0.15\n                original_token_id = tokens[i]\n\n                if prob < 0.8: \n                    tokens[i] = self.tokenizer.mask_token_id\n                elif prob < 0.9: \n                    tokens[i] = random.choice(list(range(self.tokenizer.vocab_size)))\n                output_label.append(original_token_id) \n            else:\n                output_label.append(-100)\n        return tokens, output_label\n\n    def _process_common(self, index):\n        example = self.dataset[index]\n        text_a = str(example['text_a']) # Ensure string\n        \n        # Positive example from text_b\n        if example['text_b']:\n            text_b_candidate = str(random.choice(example['text_b'])) # Ensure string\n            current_label = 1 # Default assumption for text_b\n        else: # Should not happen if data gen is correct\n            text_b_candidate = \"\"\n            current_label = 0 \n\n        # Negative example from text_c (if available and 50% chance)\n        # This logic is simplified. The original AlignScore had more nuanced positive/negative pair creation.\n        # The pre-processed data from DataGenerator already implies the roles of text_b (pos) and text_c (neg hints for some tasks)\n        # The 'orig_label' from the JSONL is the primary source of truth for labels.\n        \n        final_text_b = text_b_candidate # For this iteration, we primarily use text_b\n                                    # and derive labels from 'orig_label'.\n                                    # If orig_label is -1 (e.g. summarization), special handling might be needed\n                                    # for pos/neg pairs, but DSTDataLoader expects single pairs.\n                                    # The original AlignScore created multiple pairs in each process_ function.\n                                    # Here, each line in JSONL is one pair.\n\n        try:\n            tokenized_pair = self.tokenizer(text_a, final_text_b, padding='max_length', \n                                            max_length=self.tokenizer_max_length, truncation='only_first')\n        except: \n            tokenized_pair = self.tokenizer(text_a, final_text_b, padding='max_length', \n                                            max_length=self.tokenizer_max_length, truncation=True)\n\n        input_ids, mlm_labels = self.random_word(tokenized_pair['input_ids'])\n        \n        orig_label = example['orig_label']\n        task_type = example['task']\n\n        align_label_val = -100\n        tri_label_val = -100\n        reg_label_val = -100.0\n\n        if task_type in ['nli', 'fact_checking']:\n            tri_label_val = int(orig_label) if orig_label in [0,1,2] else 1 \n        elif task_type in ['paraphrase', 'bin_nli', 'qa', 'coreference', \n                           'summarization', 'ir', 'multiple_choice_qa', 'extractive_qa']:\n             # For summarization with orig_label = -1, this will become 0.\n             # Training logic needs to handle how summarization pairs are made (e.g. from text_b vs text_c)\n             # For now, if orig_label is -1 (from sum), assume it's a positive pair (text_a, text_b[0])\n             if orig_label == -1 and task_type == 'summarization': # Positive pair from text_b\n                 align_label_val = 1\n             elif orig_label in [0,1]: # For other binary tasks\n                 align_label_val = int(orig_label)\n             else: # Default to 0 if label is unexpected\n                 align_label_val = 0\n        elif task_type in ['sts', 'wmt', 'ctc']:\n            try:\n                reg_label_val = float(orig_label)\n            except ValueError:\n                print(f\"Warning: Could not convert reg_label '{orig_label}' to float for task {task_type}. Using 0.0.\")\n                reg_label_val = 0.0\n\n\n        return (\n            torch.tensor(input_ids),\n            torch.tensor(tokenized_pair['attention_mask']),\n            torch.tensor(tokenized_pair.get('token_type_ids', [0]*len(input_ids))), \n            torch.tensor(align_label_val, dtype=torch.long), # Ensure long for CrossEntropy\n            torch.tensor(mlm_labels, dtype=torch.long),\n            torch.tensor(tri_label_val, dtype=torch.long),\n            torch.tensor(reg_label_val, dtype=torch.float) # Ensure float\n        )\n\n    def __getitem__(self, index):\n        input_ids, attention_mask, token_type_ids, align_label, mlm_labels, tri_label, reg_label = self._process_common(index)\n        \n        item = {\n            'input_ids': input_ids,\n            'attention_mask': attention_mask,\n            'align_label': align_label,\n            'mlm_label': mlm_labels,\n            'tri_label': tri_label,\n            'reg_label': reg_label \n        }\n        # Only add token_type_ids if they are not all zeros (i.e., actually used, like for BERT)\n        # RoBERTa doesn't use them, tokenizer might return zeros.\n        if token_type_ids is not None and not torch.all(token_type_ids == 0):\n             item['token_type_ids'] = token_type_ids\n        return item\n\n    def __len__(self):\n        return len(self.dataset)\n\n\nclass DSTDataLoader(LightningDataModule):\n    def __init__(self, train_files_config_list: list, val_files_config_list: list, \n                 model_name='roberta-large', need_mlm=True, tokenizer_max_length=512, \n                 train_batch_size=32, eval_batch_size=16, num_workers=2, **kwargs):\n        super().__init__(**kwargs)\n        # train_files_config_list is like [{'path': 'path/to/mnli_20k.jsonl', 'task_type': 'nli'}, ...]\n        self.train_files_config_list = train_files_config_list\n        self.val_files_config_list = val_files_config_list    \n        self.model_name = model_name\n        self.need_mlm = need_mlm\n        self.tokenizer_max_length = tokenizer_max_length\n        self.train_batch_size = train_batch_size\n        self.eval_batch_size = eval_batch_size\n        self.num_workers = num_workers\n\n        self.train_dataset = None\n        self.val_dataset = None\n\n    def setup(self, stage: Optional[str] = None) -> None:\n        if stage == 'fit' or stage is None:\n            if not self.train_dataset:\n                print(\"Setting up training data for DataLoader...\")\n                self.train_dataset = DSTDataSet(dataset_paths_with_task=self.train_files_config_list, \n                                                model_name=self.model_name, need_mlm=self.need_mlm, \n                                                tokenizer_max_length=self.tokenizer_max_length)\n            if not self.val_dataset:\n                print(\"Setting up validation data for DataLoader...\")\n                self.val_dataset = DSTDataSet(dataset_paths_with_task=self.val_files_config_list, \n                                              model_name=self.model_name, need_mlm=self.need_mlm, \n                                              tokenizer_max_length=self.tokenizer_max_length)\n                                              \n    def train_dataloader(self):\n        if not self.train_dataset: self.setup('fit')\n        return DataLoader(self.train_dataset, batch_size=self.train_batch_size, shuffle=True, \n                          num_workers=self.num_workers, pin_memory=True, persistent_workers= (self.num_workers > 0) )\n\n    def val_dataloader(self):\n        if not self.val_dataset: self.setup('fit')\n        return DataLoader(self.val_dataset, batch_size=self.eval_batch_size, shuffle=False, \n                          num_workers=self.num_workers, pin_memory=True, persistent_workers= (self.num_workers > 0) )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:38:54.249475Z","iopub.execute_input":"2025-05-27T23:38:54.250176Z","iopub.status.idle":"2025-05-27T23:38:54.268650Z","shell.execute_reply.started":"2025-05-27T23:38:54.250151Z","shell.execute_reply":"2025-05-27T23:38:54.267967Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"# Model Definitions\n","metadata":{}},{"cell_type":"code","source":"# Cell 5: Model Definition (Adapted for PyTorch Lightning v2.0.0+)\n\nfrom dataclasses import dataclass\nfrom typing import Optional, Tuple, List \n\n# --- ModelOutput Dataclass --- \n@dataclass\nclass ModelOutput:\n    loss: Optional[torch.FloatTensor] = None\n    all_loss: Optional[list] = None\n    loss_nums: Optional[list] = None\n    prediction_logits: torch.FloatTensor = None\n    seq_relationship_logits: torch.FloatTensor = None\n    tri_label_logits: torch.FloatTensor = None\n    reg_label_logits: torch.FloatTensor = None\n    hidden_states: Optional[Tuple[torch.FloatTensor]] = None\n    attentions: Optional[Tuple[torch.FloatTensor]] = None\n\n# --- BERTAlignModel Class (Updated for PTL v2.0.0+) ---\nclass BERTAlignModel(pl.LightningModule):\n    def __init__(self, model_name_or_path='roberta-large', using_pretrained=True,\n                 learning_rate=1e-5, adam_epsilon=1e-6, weight_decay=0.1,\n                 warmup_steps_portion=0.06, mlm_loss_factor=0.5, **kwargs):\n        super().__init__()\n        self.save_hyperparameters()\n\n        self.model_name_or_path = model_name_or_path\n        self.using_pretrained = using_pretrained\n        \n        config = AutoConfig.from_pretrained(model_name_or_path, trust_remote_code=True)\n\n        # Model loading logic (simplified for brevity, use your existing comprehensive one)\n        if 'roberta' in model_name_or_path.lower():\n            if using_pretrained:\n                self.base_model = RobertaModel.from_pretrained(model_name_or_path, config=config, trust_remote_code=True)\n                lm_head_model = RobertaForMaskedLM.from_pretrained(model_name_or_path, config=config, trust_remote_code=True)\n                self.mlm_head = lm_head_model.lm_head\n            else:\n                self.base_model = RobertaModel(config)\n                self.mlm_head = RobertaForMaskedLM(config).lm_head\n        elif 'bert' in model_name_or_path.lower() and 'electra' not in model_name_or_path.lower():\n            if using_pretrained:\n                bert_mlm_model = BertForPreTraining.from_pretrained(model_name_or_path, config=config, trust_remote_code=True)\n                self.base_model = bert_mlm_model.bert\n                self.mlm_head = bert_mlm_model.cls.predictions\n            else:\n                self.base_model = BertModel(config)\n                self.mlm_head = BertForPreTraining(config).cls.predictions\n        else:\n            print(f\"Warning: Model type {model_name_or_path} needs specific loading logic for base_model/mlm_head if not roberta/bert.\")\n            self.base_model = AutoModel.from_pretrained(model_name_or_path, config=config, trust_remote_code=True)\n            self.mlm_head = AutoModelForMaskedLM.from_pretrained(model_name_or_path, config=config, trust_remote_code=True).get_output_embeddings() # Or other appropriate head\n\n        self.hidden_size = config.hidden_size\n        self.bin_layer = nn.Linear(self.hidden_size, 2)\n        self.tri_layer = nn.Linear(self.hidden_size, 3)\n        self.reg_layer = nn.Linear(self.hidden_size, 1)\n        self.dropout = nn.Dropout(p=config.hidden_dropout_prob if hasattr(config, 'hidden_dropout_prob') else 0.1)\n        \n        self.need_mlm = True \n        \n        # For storing step outputs\n        self._train_step_outputs = []\n        self._validation_step_outputs = []\n\n\n    def forward(self, batch):\n        # (Your existing forward pass logic - ensure it returns ModelOutput correctly)\n        # ... (Copied from your previous BERTAlignModel.forward())\n        input_ids = batch['input_ids']\n        attention_mask = batch['attention_mask']\n        token_type_ids = batch.get('token_type_ids', None)\n        \n        if 'roberta' in self.hparams.model_name_or_path.lower() and token_type_ids is not None:\n            base_model_output = self.base_model(input_ids=input_ids, attention_mask=attention_mask)\n        else:\n            base_model_output = self.base_model(input_ids=input_ids, attention_mask=attention_mask, token_type_ids=token_type_ids)\n        \n        sequence_output = base_model_output.last_hidden_state\n        if hasattr(base_model_output, 'pooler_output') and base_model_output.pooler_output is not None:\n            pooler_output = base_model_output.pooler_output\n        else: \n            pooler_output = sequence_output[:, 0, :]\n\n        prediction_scores = self.mlm_head(sequence_output) \n        pooled_output_dropout = self.dropout(pooler_output)\n        seq_relationship_score = self.bin_layer(pooled_output_dropout)\n        tri_label_score = self.tri_layer(pooled_output_dropout)\n        reg_label_score = self.reg_layer(pooler_output)\n\n        all_losses_val = [torch.tensor(0.0, device=self.device)] * 4\n        loss_nums_val = [torch.tensor(0, device=self.device, dtype=torch.long)] * 4\n\n        if 'mlm_label' in batch:\n            ce_loss_fct_sum = nn.CrossEntropyLoss(reduction='sum', ignore_index=-100)\n            if self.need_mlm:\n                mlm_labels = batch['mlm_label'].view(-1)\n                masked_lm_loss = ce_loss_fct_sum(prediction_scores.view(-1, self.base_model.config.vocab_size), mlm_labels)\n                loss_nums_val[0] = torch.sum(mlm_labels != -100)\n                all_losses_val[0] = masked_lm_loss if loss_nums_val[0] > 0 else torch.tensor(0.0, device=self.device)\n\n            align_labels = batch['align_label'].view(-1)\n            valid_align_indices = align_labels != -100\n            if torch.any(valid_align_indices):\n                next_sentence_loss = ce_loss_fct_sum(seq_relationship_score.view(-1, 2)[valid_align_indices], align_labels[valid_align_indices])\n                all_losses_val[1] = next_sentence_loss / math.log(2) if math.log(2) > 0 else next_sentence_loss\n                loss_nums_val[1] = torch.sum(valid_align_indices)\n            \n            tri_labels = batch['tri_label'].view(-1)\n            valid_tri_indices = tri_labels != -100\n            if torch.any(valid_tri_indices):\n                tri_label_loss = ce_loss_fct_sum(tri_label_score.view(-1, 3)[valid_tri_indices], tri_labels[valid_tri_indices])\n                all_losses_val[2] = tri_label_loss / math.log(3) if math.log(3) > 0 else tri_label_loss\n                loss_nums_val[2] = torch.sum(valid_tri_indices)\n\n            reg_labels = batch['reg_label'].view(-1) \n            valid_reg_indices = reg_labels != -100.0\n            if torch.any(valid_reg_indices):\n                current_reg_preds = reg_label_score.view(-1)[valid_reg_indices]\n                current_reg_targets = reg_labels[valid_reg_indices]\n                reg_label_loss = self.mse_loss(current_reg_preds, current_reg_targets, reduction='sum')\n                loss_nums_val[3] = torch.sum(valid_reg_indices)\n                all_losses_val[3] = reg_label_loss\n        \n        return ModelOutput(\n            all_loss=all_losses_val, loss_nums=loss_nums_val, \n            prediction_logits=prediction_scores, seq_relationship_logits=seq_relationship_score, \n            tri_label_logits=tri_label_score, reg_label_logits=reg_label_score, \n            hidden_states=base_model_output.hidden_states if hasattr(base_model_output, 'hidden_states') else None,\n            attentions=base_model_output.attentions if hasattr(base_model_output, 'attentions') else None\n        )\n\n\n    def _calculate_and_log_epoch_end_metrics(self, step_outputs: List[dict], step_type=\"train\"):\n        # Common logic for aggregating and logging epoch-end metrics\n        agg_losses = [0.0] * 4\n        agg_loss_nums = [0] * 4\n\n        for step_output in step_outputs: # step_outputs is the list of dicts we stored\n            losses_sum_batch = step_output['losses_sum_batch'] # List of loss sums for the batch\n            loss_nums_batch = step_output['loss_nums_batch'] # List of item counts for each loss for the batch\n            for i in range(4):\n                agg_losses[i] += losses_sum_batch[i].item()\n                agg_loss_nums[i] += loss_nums_batch[i].item()\n\n        avg_mlm_loss = agg_losses[0] / agg_loss_nums[0] if agg_loss_nums[0] > 0 else 0.\n        avg_bin_loss = agg_losses[1] / agg_loss_nums[1] if agg_loss_nums[1] > 0 else 0.\n        avg_tri_loss = agg_losses[2] / agg_loss_nums[2] if agg_loss_nums[2] > 0 else 0.\n        avg_reg_loss = agg_losses[3] / agg_loss_nums[3] if agg_loss_nums[3] > 0 else 0.\n        \n        mlm_contribution = self.hparams.mlm_loss_factor * avg_mlm_loss if self.need_mlm else 0.\n        # Ensure all components are non-None or zero before summing\n        total_loss = mlm_contribution + avg_bin_loss + avg_tri_loss + avg_reg_loss\n        \n        self.log(f'{step_type}_loss_epoch', total_loss, prog_bar=True, sync_dist=True)\n        if self.need_mlm: self.log(f'{step_type}_mlm_loss_epoch', avg_mlm_loss, prog_bar=False, sync_dist=True)\n        self.log(f'{step_type}_bin_loss_epoch', avg_bin_loss, prog_bar=False, sync_dist=True)\n        self.log(f'{step_type}_tri_loss_epoch', avg_tri_loss, prog_bar=False, sync_dist=True)\n        self.log(f'{step_type}_reg_loss_epoch', avg_reg_loss, prog_bar=False, sync_dist=True)\n        \n        if step_type == \"val\": # For checkpointing\n            self.log(\"val_loss\", total_loss, prog_bar=True, sync_dist=True) # PTL uses 'val_loss'\n\n        return total_loss\n\n\n    def training_step(self, batch, batch_idx):\n        output = self(batch)\n        # Calculate per-item average loss for this batch for PTL optimizer\n        current_total_loss = torch.tensor(0.0, device=self.device)\n        items_for_loss = 0\n\n        if output.loss_nums[0] > 0 and self.need_mlm:\n            current_total_loss += self.hparams.mlm_loss_factor * output.all_loss[0] # loss is already sum\n            items_for_loss += output.loss_nums[0] # accumulate items for averaging later if needed\n        if output.loss_nums[1] > 0: \n            current_total_loss += output.all_loss[1]\n            items_for_loss += output.loss_nums[1]\n        if output.loss_nums[2] > 0: \n            current_total_loss += output.all_loss[2]\n            items_for_loss += output.loss_nums[2]\n        if output.loss_nums[3] > 0: \n            current_total_loss += output.all_loss[3]\n            items_for_loss += output.loss_nums[3]\n        \n        # Normalize the sum of losses by total items contributing to any loss for the step loss\n        # PTL backward() will be called on this returned 'loss'\n        step_loss = current_total_loss / items_for_loss if items_for_loss > 0 else torch.tensor(0.0, device=self.device)\n\n        self.log('train_step_loss', step_loss, on_step=True, on_epoch=False, prog_bar=True, logger=True)\n        \n        # For epoch end calculation, store the sums and counts\n        self._train_step_outputs.append({'losses_sum_batch': output.all_loss, 'loss_nums_batch': output.loss_nums})\n        return step_loss # Return the scalar loss for PTL to optimize\n\n    def on_train_epoch_end(self):\n        if not self._train_step_outputs: return\n        self._calculate_and_log_epoch_end_metrics(self._train_step_outputs, step_type=\"train\")\n        self._train_step_outputs.clear()  # free memory\n\n\n    def validation_step(self, batch, batch_idx):\n        output = self(batch)\n        # For epoch end calculation, store the sums and counts\n        self._validation_step_outputs.append({'losses_sum_batch': output.all_loss, 'loss_nums_batch': output.loss_nums})\n        # No need to return loss here, PTL will call on_validation_epoch_end\n\n    def on_validation_epoch_end(self):\n        if not self._validation_step_outputs: return\n        self._calculate_and_log_epoch_end_metrics(self._validation_step_outputs, step_type=\"val\")\n        self._validation_step_outputs.clear()  # free memory\n\n    def configure_optimizers(self):\n        # (Your existing configure_optimizers logic - should be fine)\n        # ... (Copied from your previous BERTAlignModel.configure_optimizers())\n        no_decay = [\"bias\", \"LayerNorm.weight\"]\n        optimizer_grouped_parameters = [\n            {\n                \"params\": [p for n, p in self.named_parameters() if not any(nd in n for nd in no_decay) and p.requires_grad],\n                \"weight_decay\": self.hparams.weight_decay,\n            },\n            {\n                \"params\": [p for n, p in self.named_parameters() if any(nd in n for nd in no_decay) and p.requires_grad],\n                \"weight_decay\": 0.0,\n            },\n        ]\n        optimizer = AdamW(optimizer_grouped_parameters, lr=self.hparams.learning_rate, eps=self.hparams.adam_epsilon)\n\n        # Calculate total steps based on trainer if available, otherwise estimate\n        if self.trainer and hasattr(self.trainer, 'estimated_stepping_batches') and self.trainer.estimated_stepping_batches is not None and self.trainer.estimated_stepping_batches > 0 :\n            num_training_steps = self.trainer.estimated_stepping_batches\n            print(f\"Scheduler: Using trainer.estimated_stepping_batches = {num_training_steps}\")\n        else:\n            # Estimate total steps if trainer attribute not available (e.g. before trainer.fit() fully initializes it)\n            # This estimation requires dataloader length.\n            # For robust setup, this might be better configured in configure_sharded_model or after dataloaders are known\n            # Let's try to access dataloader directly if trainer property isn't ready.\n            if self.trainer and self.trainer.train_dataloader:\n                 # This might be tricky as train_dataloader itself might not be fully initialized yet by PTL at this exact point\n                 # Let's assume PTL's internal handling or a large default if this fails.\n                try:\n                    len_train_loader = len(self.trainer.train_dataloader)\n                    accumulate_grad_batches = self.trainer.accumulate_grad_batches if self.trainer.accumulate_grad_batches else 1\n                    num_training_steps = (len_train_loader // accumulate_grad_batches) * self.trainer.max_epochs\n                    print(f\"Scheduler: Estimated num_training_steps = {num_training_steps}\")\n                except Exception as e:\n                    print(f\"Scheduler: Could not estimate steps from dataloader ({e}). Using large default for num_training_steps.\")\n                    num_training_steps = 100000 # Fallback\n            else:\n                 print(f\"Scheduler: Trainer or train_dataloader not available for step estimation. Using large default.\")\n                 num_training_steps = 100000 # Fallback if trainer/dataloader info not yet available\n            \n            if num_training_steps <= 0 : # Safety for a very small dataset/epochs\n                 print(f\"Warning: Calculated num_training_steps is {num_training_steps}. Setting to a minimum of 100.\")\n                 num_training_steps = 100\n\n\n        num_warmup_steps = int(self.hparams.warmup_steps_portion * num_training_steps)\n        print(f\"Scheduler: num_warmup_steps = {num_warmup_steps}, num_training_steps = {num_training_steps}\")\n        \n        scheduler = get_linear_schedule_with_warmup(\n            optimizer,\n            num_warmup_steps=num_warmup_steps,\n            num_training_steps=num_training_steps,\n        )\n        return {\"optimizer\": optimizer, \"lr_scheduler\": {\"scheduler\": scheduler, \"interval\": \"step\", \"frequency\": 1}}\n\n    def mse_loss(self, input_tensor, target_tensor, reduction='mean'):\n        target_tensor_float = target_tensor.float()\n        if input_tensor.numel() == 0 or target_tensor_float.numel() == 0 or input_tensor.shape != target_tensor_float.shape :\n             # print(f\"MSE Loss: Mismatch or empty tensors. Input: {input_tensor.shape}, Target: {target_tensor_float.shape}\")\n             return torch.tensor(0.0, device=self.device)\n\n        loss = nn.functional.mse_loss(input_tensor, target_tensor_float, reduction='none')\n        \n        if reduction == \"mean\":\n            return loss.mean() if loss.numel() > 0 else torch.tensor(0.0, device=self.device)\n        elif reduction == \"sum\":\n            return loss.sum()\n        return torch.tensor(0.0, device=self.device)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:39:22.782043Z","iopub.execute_input":"2025-05-27T23:39:22.782340Z","iopub.status.idle":"2025-05-27T23:39:22.813855Z","shell.execute_reply.started":"2025-05-27T23:39:22.782320Z","shell.execute_reply":"2025-05-27T23:39:22.813154Z"}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"# Training Execution","metadata":{}},{"cell_type":"code","source":"# --- Training Configuration ---\nTRAIN_ARGS = Namespace(\n    model_name_or_path=MODEL_NAME, \n    batch_size=4, # Adjust based on Kaggle GPU VRAM (RoBERTa-large is demanding)\n    num_epoch=1, # Start with 1 for Kaggle\n    num_workers=2, \n    learning_rate=1e-5, \n    adam_epsilon=1e-6, \n    weight_decay=0.01, # Common default for AdamW\n    warmup_steps_portion=0.06, \n    ckpt_save_path=CHECKPOINT_SAVE_PATH,\n    ckpt_comment=\"kaggle_20k_alignscore_\", \n    devices=1 if torch.cuda.is_available() else 0, \n    accelerator='gpu' if torch.cuda.is_available() else 'cpu',\n    accumulate_grad_batches=8, # Effective batch size = batch_size * accumulate_grad_batches (4*8=32)\n    do_mlm=True, \n    use_pretrained_model=True,\n    mlm_loss_factor=0.5 # From BERTAlignModel default\n)\n\n# --- Prepare dataset config for DataLoader ---\n# Uses files generated in GENERATED_DATA_DIR (e.g., mnli_20k.jsonl)\n# Create list of {'path': ..., 'task_type': ...} dicts\ntrain_files_config_list = []\nval_files_config_list = []\n\nall_generated_files = [f for f in os.listdir(GENERATED_DATA_DIR) if f.endswith(\"_20k.jsonl\")]\nrandom.shuffle(all_generated_files)\n\n# Simple split of generated files for train/val\n# For a more robust setup, ensure diverse tasks in validation or use predefined splits\nnum_val_files = max(1, int(0.1 * len(all_generated_files))) # Use at least 1 file for validation\nif not all_generated_files:\n    print(\"No generated JSONL files found in {GENERATED_DATA_DIR}. Cannot proceed with training.\")\n    # Handle error or exit\nelse:\n    for i, f_name in enumerate(all_generated_files):\n        dataset_name_key = f_name.replace(\"_20k.jsonl\", \"\")\n        task_type = DATASET_CONFIG.get(dataset_name_key, {}).get('task', 'unknown') # Get task from main config\n        file_info = {'path': os.path.join(GENERATED_DATA_DIR, f_name), 'task_type': task_type}\n        if i < num_val_files and len(all_generated_files) > 1 : # Ensure train set is not empty\n            val_files_config_list.append(file_info)\n        else:\n            train_files_config_list.append(file_info)\n            \n    if not train_files_config_list and val_files_config_list: # If all went to val somehow (e.g. only 1 file)\n        train_files_config_list = val_files_config_list \n        print(\"Warning: Using the same file(s) for training and validation as only a few files were generated.\")\n    elif not val_files_config_list and train_files_config_list: # If no val files, use one from train\n        val_files_config_list.append(train_files_config_list[0])\n        print(f\"Warning: No dedicated validation files. Using {train_files_config_list[0]['path']} for validation.\")\n\n\nif not train_files_config_list:\n    print(\"No training data files configured. Skipping training.\")\n    BEST_MODEL_PATH = None\nelse:\n    print(f\"Training with {len(train_files_config_list)} task files. Validation with {len(val_files_config_list)} task files.\")\n    print(\"Training files:\", [item['path'] for item in train_files_config_list[:3]], \"...\")\n    print(\"Validation files:\", [item['path'] for item in val_files_config_list[:3]], \"...\")\n\n    data_module = DSTDataLoader(\n        train_files_config_list=train_files_config_list,\n        val_files_config_list=val_files_config_list, \n        model_name=TRAIN_ARGS.model_name_or_path,\n        train_batch_size=TRAIN_ARGS.batch_size,\n        eval_batch_size=TRAIN_ARGS.batch_size * 2, \n        num_workers=TRAIN_ARGS.num_workers,\n        need_mlm=TRAIN_ARGS.do_mlm\n    )\n\n    align_model = BERTAlignModel(\n        model_name_or_path=TRAIN_ARGS.model_name_or_path,\n        using_pretrained=TRAIN_ARGS.use_pretrained_model,\n        adam_epsilon=TRAIN_ARGS.adam_epsilon,\n        learning_rate=TRAIN_ARGS.learning_rate,\n        weight_decay=TRAIN_ARGS.weight_decay,\n        warmup_steps_portion=TRAIN_ARGS.warmup_steps_portion, # Now this will match\n        mlm_loss_factor=TRAIN_ARGS.mlm_loss_factor\n    )\n    align_model.need_mlm = TRAIN_ARGS.do_mlm\n\n    model_short_name = TRAIN_ARGS.model_name_or_path.split('/')[-1]\n    checkpoint_filename_template = (\n        f\"{TRAIN_ARGS.ckpt_comment}{model_short_name}_\"\n        f\"{'scratch_' if not TRAIN_ARGS.use_pretrained_model else ''}\"\n        f\"{'mlm_' if TRAIN_ARGS.do_mlm else 'no_mlm_'}\"\n        f\"all_{SAMPLES_PER_DATASET_TARGET // 1000}k_\"\n        f\"b{TRAIN_ARGS.batch_size}x{TRAIN_ARGS.devices}x{TRAIN_ARGS.accumulate_grad_batches}\"\n    )\n\n    checkpoint_callback = pl.callbacks.ModelCheckpoint(\n        dirpath=TRAIN_ARGS.ckpt_save_path,\n        filename=checkpoint_filename_template + \"_{epoch:02d}_{val_loss:.2f}\",\n        save_top_k=1,\n        monitor=\"val_loss\", # Monitor val_loss (which is total weighted loss on val set)\n        mode=\"min\",\n        every_n_epochs=1,\n        save_last=True # Save the last model as well\n    )\n    \n    # Early stopping\n    early_stop_callback = pl.callbacks.EarlyStopping(\n        monitor=\"val_loss\",\n        min_delta=0.001,\n        patience=3, # Stop if val_loss doesn't improve for 3 epochs\n        verbose=True,\n        mode=\"min\"\n    )\n\n    trainer = pl.Trainer(\n        accelerator=TRAIN_ARGS.accelerator,\n        devices=TRAIN_ARGS.devices if TRAIN_ARGS.accelerator == 'gpu' else None,\n        max_epochs=TRAIN_ARGS.num_epoch,\n        callbacks=[checkpoint_callback, early_stop_callback],\n        accumulate_grad_batches=TRAIN_ARGS.accumulate_grad_batches,\n        precision=\"16-mixed\" if TRAIN_ARGS.accelerator == 'gpu' else 32, # Mixed precision for GPU\n        log_every_n_steps=20, # Log more frequently\n        # deterministic=True, # For reproducibility, can slow down\n        # strategy=\"ddp_find_unused_parameters_true\" if TRAIN_ARGS.devices > 1 else None, # If using multiple GPUs\n    )\n\n    print(f\"\\n--- Starting Training: {checkpoint_filename_template} ---\")\n    try:\n        trainer.fit(align_model, datamodule=data_module)\n        \n        # Path to the best checkpoint saved by ModelCheckpoint\n        BEST_MODEL_PATH = checkpoint_callback.best_model_path\n        print(f\"Best checkpoint path from callback: {BEST_MODEL_PATH}\")\n        if not BEST_MODEL_PATH or not os.path.exists(BEST_MODEL_PATH):\n            print(\"Best model path not found from callback, trying 'last.ckpt'\")\n            # Try last checkpoint if best_model_path is not set (e.g. if training is very short or no val improvement)\n            last_ckpt_path = os.path.join(TRAIN_ARGS.ckpt_save_path, \"last.ckpt\")\n            if os.path.exists(last_ckpt_path):\n                 BEST_MODEL_PATH = last_ckpt_path\n            else: # Fallback to a constructed name if last.ckpt also not there\n                 BEST_MODEL_PATH = os.path.join(TRAIN_ARGS.ckpt_save_path, f\"{checkpoint_filename_template}_final.ckpt\") # Default if no val improvement\n                 trainer.save_checkpoint(BEST_MODEL_PATH)\n\n\n        print(f\"Training finished. Best/Final model saved to: {BEST_MODEL_PATH}\")\n\n    except Exception as e:\n        print(f\"An error occurred during training: {e}\")\n        import traceback\n        traceback.print_exc()\n        BEST_MODEL_PATH = None","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-27T23:55:32.290846Z","iopub.execute_input":"2025-05-27T23:55:32.291436Z","iopub.status.idle":"2025-05-28T01:22:05.661601Z","shell.execute_reply.started":"2025-05-27T23:55:32.291412Z","shell.execute_reply":"2025-05-28T01:22:05.660958Z"}},"outputs":[{"name":"stdout","text":"Training with 3 task files. Validation with 1 task files.\nTraining files: ['/kaggle/working/alignscore_training_data_20k/stsb_20k.jsonl', '/kaggle/working/alignscore_training_data_20k/xsum_20k.jsonl', '/kaggle/working/alignscore_training_data_20k/paws_20k.jsonl'] ...\nValidation files: ['/kaggle/working/alignscore_training_data_20k/mnli_20k.jsonl'] ...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/482 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"383416c80989439b93897f1f868cefcb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/1.42G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bae2a11161ae4f2b9fc59fce2ffa3bd2"}},"metadata":{}},{"name":"stdout","text":"\n--- Starting Training: kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8 ---\nSetting up training data for DataLoader...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/25.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ec11080a5c384b3da2d416b877a23bbc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"89fce3cb2f2c49dbb41dd30aadf7f515"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"79d2c26d5b794349ad447281c1c8cc63"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"154f745c87d14a3aa64ef728f47e8a8f"}},"metadata":{}},{"name":"stdout","text":"Loading data for DSTDataSet...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Loading individual JSONL files:   0%|          | 0/3 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"534dae6e6fa64cdeb9b42c31bdb25291"}},"metadata":{}},{"name":"stdout","text":"DSTDataSet loaded a total of 45749 examples from 3 task files.\nSetting up validation data for DataLoader...\nLoading data for DSTDataSet...\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Loading individual JSONL files:   0%|          | 0/1 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"603b7bb8e7274892a8854fd232b13113"}},"metadata":{}},{"name":"stdout","text":"DSTDataSet loaded a total of 20000 examples from 1 task files.\n","output_type":"stream"},{"name":"stderr","text":"huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n","output_type":"stream"},{"name":"stdout","text":"Scheduler: Using trainer.estimated_stepping_batches = 1430\nScheduler: num_warmup_steps = 85, num_training_steps = 1430\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Sanity Checking: |          | 0/? [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"name":"stderr","text":"huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\nhuggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Training: |          | 0/? [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bf4b1525b77647dcb880e60917c568a7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Validation: |          | 0/? [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":""}},"metadata":{}},{"name":"stdout","text":"Best checkpoint path from callback: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt\nTraining finished. Best/Final model saved to: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt\n","output_type":"stream"}],"execution_count":13},{"cell_type":"markdown","source":"# Inference and Evaluation Definitions","metadata":{}},{"cell_type":"code","source":"\n# --- Inferencer Class ---\nclass Inferencer:\n    def __init__(self, ckpt_path, model_name_or_path='roberta-large', batch_size=32, device='cuda', verbose=True):\n        self.device = device\n        self.model_name_or_path = model_name_or_path # Store for tokenizer\n        if ckpt_path and os.path.exists(ckpt_path):\n            print(f\"Loading model from checkpoint: {ckpt_path}\")\n            try:\n                # When loading, pass hparams explicitly if they are not saved or to override\n                # For AlignScore, the model_name_or_path is part of hparams for BERTAlignModel\n                self.model = BERTAlignModel.load_from_checkpoint(\n                    checkpoint_path=ckpt_path,\n                    model_name_or_path=model_name_or_path # Pass this to ensure config is loaded correctly\n                ).to(self.device)\n            except Exception as e:\n                 print(f\"Failed to load from checkpoint with explicit hparams, trying without: {e}\")\n                 self.model = BERTAlignModel.load_from_checkpoint(checkpoint_path=ckpt_path, strict=False).to(self.device)\n\n        elif using_pretrained_for_inference_only: # If no ckpt, load a pretrained base model for testing inference pipeline\n            print(f\"Warning: Checkpoint path {ckpt_path} not found. Loading PRETRAINED base model {model_name_or_path} for inference structure testing.\")\n            self.model = BERTAlignModel(model_name_or_path=model_name_or_path, using_pretrained=True).to(self.device)\n        else: # If neither checkpoint nor pretrained base model for inference\n             raise FileNotFoundError(f\"Checkpoint path {ckpt_path} not found and not configured to load a base pretrained model for inference.\")\n\n        self.model.eval()\n        self.batch_size = batch_size\n\n        self.tokenizer = AutoTokenizer.from_pretrained(self.model_name_or_path, trust_remote_code=True)\n        try:\n            self.spacy_nlp = spacy.load('en_core_web_sm')\n        except Exception as e:\n            print(f\"Spacy model en_core_web_sm not loaded: {e}. Sentence tokenization for _sp modes might be affected.\")\n            self.spacy_nlp = None\n\n\n        self.softmax = nn.Softmax(dim=-1)\n        self.disable_progress_bar_in_inference = not verbose\n        self.nlg_eval_mode = 'nli_sp' \n        self.verbose = verbose\n        self.smart_type = 'smart-n' # For smart_doc method from original AlignScore, not used in primary nlg_eval\n\n    def chunks(self, lst, n):\n        for i in range(0, len(lst), n):\n             yield lst[i:i + n]\n\n    def batch_tokenize(self, premise: list, hypo: list):\n        assert isinstance(premise, list) and isinstance(hypo, list)\n        assert len(premise) == len(hypo), \"Premise and hypothesis should have the same length.\"\n        \n        batch_tokenized = []\n        for i in range(0, len(premise), self.batch_size):\n            batch_premise = premise[i:i+self.batch_size]\n            batch_hypo = hypo[i:i+self.batch_size]\n            try:\n                inputs = self.tokenizer(batch_premise, batch_hypo, truncation='only_first', \n                                        padding='max_length', max_length=self.tokenizer.model_max_length, \n                                        return_tensors='pt')\n            except Exception as e: # Fallback if only_first fails (e.g. both are too long)\n                # print(f\"Tokenizer warning (only_first): {e}. Truncating both sequences.\")\n                inputs = self.tokenizer(batch_premise, batch_hypo, truncation=True, \n                                        padding='max_length', max_length=self.tokenizer.model_max_length, \n                                        return_tensors='pt')\n            batch_tokenized.append(inputs)\n        return batch_tokenized\n\n    def inference(self, premise: list, hypo: list):\n        if isinstance(premise, str) and isinstance(hypo, str):\n            premise = [premise]\n            hypo = [hypo]\n        \n        tokenized_batches = self.batch_tokenize(premise, hypo)\n        \n        all_reg_logits = []\n        all_bin_probs = [] # Store probability of positive class (index 1)\n        all_tri_probs = [] # Store all three probabilities (entail, neutral, contradict)\n\n        for mini_batch_inputs in tqdm(tokenized_batches, desc=\"Inferencing Batch\", disable=self.disable_progress_bar_in_inference):\n            mini_batch_inputs = {k: v.to(self.device) for k, v in mini_batch_inputs.items()}\n            with torch.no_grad():\n                model_output_obj = self.model(mini_batch_inputs) # BERTAlignModel forward\n                \n                reg_logits = model_output_obj.reg_label_logits.cpu() # Shape: (batch, 1)\n                bin_logits = model_output_obj.seq_relationship_logits.cpu() # Shape: (batch, 2)\n                tri_logits = model_output_obj.tri_label_logits.cpu() # Shape: (batch, 3)\n\n                bin_probs = self.softmax(bin_logits)\n                tri_probs = self.softmax(tri_logits)\n            \n            all_reg_logits.append(reg_logits[:,0]) # Squeeze to (batch,)\n            all_bin_probs.append(bin_probs[:,1]) # Prob of positive class\n            all_tri_probs.append(tri_probs) \n        \n        final_reg = torch.cat(all_reg_logits) if all_reg_logits else torch.empty(0)\n        final_bin_pos_prob = torch.cat(all_bin_probs) if all_bin_probs else torch.empty(0)\n        final_tri_probs = torch.cat(all_tri_probs) if all_tri_probs else torch.empty(0)\n        \n        return final_reg, final_bin_pos_prob, final_tri_probs\n\n\n    def inference_per_example(self, premise: str, hypo: str):\n        if not self.spacy_nlp:\n            # Fallback to NLTK if spaCy isn't loaded\n            premise_sents = sent_tokenize(premise) if premise else ['']\n            hypo_sents = sent_tokenize(hypo) if hypo else ['']\n        else:\n            premise_sents = [s.text for s in self.spacy_nlp(premise).sents] if premise else ['']\n            hypo_sents = [s.text for s in self.spacy_nlp(hypo).sents] if hypo else ['']\n        \n        premise_sents = premise_sents or [''] # Ensure not empty list\n        hypo_sents = hypo_sents or ['']     # Ensure not empty list\n\n\n        # AlignScore's original logic for chunking long premise sentences\n        def chunk_premise_sents(sents, n_words_per_chunk=350): # Approx.\n            processed = []\n            for s in sents:\n                words = s.strip().split()\n                if len(words) > n_words_per_chunk * 1.2: # If a single sentence is too long\n                    for i in range(0, len(words), n_words_per_chunk):\n                        processed.append(' '.join(words[i:i+n_words_per_chunk]))\n                else:\n                    processed.append(s)\n            return processed if processed else ['']\n\n        processed_premise_sents = chunk_premise_sents(premise_sents)\n\n        premise_sent_mat = []\n        hypo_sents_mat = []\n        for p_sent in processed_premise_sents:\n            for h_sent in hypo_sents:\n                premise_sent_mat.append(p_sent)\n                hypo_sents_mat.append(h_sent)\n        \n        if not premise_sent_mat: # Handles cases where premise or hypo was empty\n            return 0.0\n\n        # Get all three types of scores/probabilities from the model\n        reg_scores, bin_pos_probs, tri_probs_all = self.inference(premise_sent_mat, hypo_sents_mat)\n\n        output_score_for_agg = None\n        if self.nlg_eval_mode == 'nli_sp':\n            # tri_probs_all has shape (num_pairs, 3). Index 0 for entailment (AlignScore convention)\n            output_score_for_agg = tri_probs_all[:, 0] if tri_probs_all.numel() > 0 else torch.empty(0)\n        elif self.nlg_eval_mode == 'bin_sp':\n            output_score_for_agg = bin_pos_probs if bin_pos_probs.numel() > 0 else torch.empty(0)\n        elif self.nlg_eval_mode == 'reg_sp':\n            output_score_for_agg = reg_scores if reg_scores.numel() > 0 else torch.empty(0)\n        else: \n            print(f\"Warning: Unknown nlg_eval_mode '{self.nlg_eval_mode}' in inference_per_example. Defaulting to NLI entailment prob.\")\n            output_score_for_agg = tri_probs_all[:, 0] if tri_probs_all.numel() > 0 else torch.empty(0)\n\n        if output_score_for_agg.numel() == 0: return 0.0\n\n        try:\n            output_score_matrix = output_score_for_agg.view(len(processed_premise_sents), len(hypo_sents))\n            # Aggregate: max score for each hypothesis sentence across all premise chunks, then mean\n            if output_score_matrix.numel() > 0:\n                max_scores_per_hypo_sent, _ = torch.max(output_score_matrix, dim=0) # Max along premise chunks\n                final_score = torch.mean(max_scores_per_hypo_sent).item()\n            else:\n                final_score = 0.0\n        except RuntimeError as e: # If view fails due to mismatched sizes (e.g. empty hypo_sents)\n            # print(f\"RuntimeError during score matrix view/aggregation: {e}. Num premise_sents: {len(processed_premise_sents)}, num hypo_sents: {len(hypo_sents)}, agg_score shape: {output_score_for_agg.shape}\")\n            final_score = output_score_for_agg.mean().item() if output_score_for_agg.numel() > 0 else 0.0\n\n        return final_score\n\n    def nlg_eval(self, premises: List[str], hypos: List[str]):\n        assert self.nlg_eval_mode is not None, \"Select NLG Eval mode for nlg_eval!\"\n\n        if (self.nlg_eval_mode == 'bin') or (self.nlg_eval_mode == 'nli') or (self.nlg_eval_mode == 'reg'):\n            reg_out, bin_out_pos_prob, tri_out_probs = self.inference(premises, hypos)\n            if self.nlg_eval_mode == 'nli':\n                # Return entailment probability (index 0)\n                return None, tri_out_probs[:, 0] if tri_out_probs.numel() > 0 else torch.empty(0), None\n            elif self.nlg_eval_mode == 'bin':\n                return None, bin_out_pos_prob, None\n            elif self.nlg_eval_mode == 'reg':\n                return None, reg_out, None\n        \n        elif (self.nlg_eval_mode == 'bin_sp') or (self.nlg_eval_mode == 'nli_sp') or (self.nlg_eval_mode == 'reg_sp'):\n            scores = [self.inference_per_example(p, h) for p, h in tqdm(zip(premises, hypos), total=len(premises), desc=f\"Eval {self.nlg_eval_mode}\", disable=not self.verbose)]\n            return None, torch.tensor(scores), None \n        \n        else:\n            raise ValueError(f\"Unrecognized NLG Eval mode: {self.nlg_eval_mode}\")\n\n\n# --- Evaluation Configuration (from evaluate.py) ---\n# These are critical for the Evaluator class to know how to process datasets\nHUGGINGFACE_DATASETS_EVAL = { # Renamed to avoid conflict if Cell 2's var is different\n    'stsb': ['glue', 'stsb', 'validation'],\n    'mrpc': ['glue', 'mrpc', 'test'], # AlignScore uses test for MRPC eval\n    'paws': ['paws', 'labeled_final', 'test'],\n    'mnli_matched': ['multi_nli', 'validation_matched'],\n    'mnli_mismatched': ['multi_nli', 'validation_mismatched'],\n    'nli_fever': ['pietrolesci/nli_fever', 'default', 'test'], # Original was 'dev', using 'test' if available\n    'doc_nli': ['saattrupdan/doc-nli', None, 'test'],\n    'sick': ['sick', 'default', 'test'], # For SICK-R (relatedness) and SICK-E (entailment)\n    'boolq': ['boolq', 'validation'],\n    'anli_r1': ['anli', 'plain_text', 'test_r1'], # ANLI rounds\n    'anli_r2': ['anli', 'plain_text', 'test_r2'],\n    'anli_r3': ['anli', 'plain_text', 'test_r3'],\n    'snli': ['snli', 'test'],\n    'vitaminc': ['tals/vitaminc', 'default', 'test'], # Ensure 'test' split exists for this config\n    'qqp': ['glue', 'qqp', 'validation'],\n    # Summarization/Factuality benchmarks often loaded from local JSON/CSV in original AlignScore\n    # Examples of how they might be structured if on HF:\n    # 'summeval': ['KETI-QueryLab/summeval', 'default', 'test'], # Fictional, replace with actual if exists\n    # 'qags_xsum': ['SOME_HF_PATH/qags_xsum', 'default', 'test'],\n}\n\n# ALL_TASKS maps dataset name to output type index (0:reg, 1:bin, 2:tri NLI)\nALL_TASKS_EVAL = { \n    'stsb': 0, 'sick': 0, # For sick-r, SICK-E would be 2\n    'race_m': 1,'race_h': 1, 'boolq': 1,\n    'anli_r1': 2, 'anli_r2': 2, 'anli_r3': 2, 'snli': 2,\n    'vitaminc': 2, # 0:SUPPORTS, 1:NEI, 2:REFUTES\n    'mrpc': 1, 'paws': 1, 'paws_qqp': 1, 'qqp': 1,\n    'mnli_matched': 2, 'mnli_mismatched': 2,\n    'nli_fever': 2, 'doc_nli': 1, # doc_nli often treated as binary entail vs not\n    # Summarization datasets typically use Pearson/Spearman with human scores (regression-like)\n    'summeval': 0, 'qags_xsum': 0, 'qags_cnndm': 0, 'frank': 0, 'xsumfaith': 0,\n    # Other GLUE/SuperGLUE that AlignScore evaluated\n    'rte': 2, 'cb': 2, 'axb':1, 'axg':2, # axg (WNLI GLUE diagnostic) uses NLI format\n    # Add more as per original evaluate.py if you have the data\n}\n\n\n# --- Simplified Evaluator Class Placeholder ---\n# Implementing the full Evaluator from AlignScore is extensive.\n# This is a basic structure to show how one might evaluate a single task.\nclass SimplifiedEvaluator:\n    def __init__(self, align_inferencer, target_samples=20000, verbose=True):\n        self.align_inferencer = align_inferencer\n        self.target_samples = target_samples\n        self.verbose = verbose\n\n    def evaluate_task(self, task_name, hf_id, hf_config, hf_split,\n                        text_a_field, text_b_field, label_field, metric_type, \n                        nlg_mode_for_task, label_map_func=None, is_multi_text_b=False):\n        if self.verbose: print(f\"\\n--- Evaluating on benchmark: {task_name} ---\")\n        try:\n            if hf_config:\n                dataset = load_dataset(hf_id, name=hf_config, split=hf_split, trust_remote_code=True)\n            else:\n                dataset = load_dataset(hf_id, split=hf_split, trust_remote_code=True)\n        except Exception as e:\n            if self.verbose: print(f\"Could not load dataset {task_name}: {e}\")\n            return None\n\n        # Sample the dataset\n        if len(dataset) > self.target_samples:\n            if self.verbose: print(f\"Sampling {self.target_samples} from {len(dataset)} for {task_name} evaluation.\")\n            indices = random.sample(range(len(dataset)), self.target_samples)\n            dataset = dataset.select(indices)\n        \n        premises = []\n        hypotheses = []\n        true_labels_orig = []\n\n        for example in tqdm(dataset, desc=f\"Preparing {task_name}\", disable=(not self.verbose)):\n            try:\n                premises.append(str(example[text_a_field]))\n                if is_multi_text_b: # e.g. for race where text_b is options\n                     # This needs specific handling based on how options are structured and combined with question\n                     # For simplicity, this generic evaluator won't handle complex multi-text_b scenarios deeply.\n                     # Assuming text_b_field is the primary one for hypotheses for now.\n                     hypotheses.append(str(example[text_b_field][0])) # Take first option as placeholder\n                else:\n                    hypotheses.append(str(example[text_b_field]))\n                true_labels_orig.append(example[label_field])\n            except KeyError as e:\n                # print(f\"KeyError {e} in example: {example}. Skipping.\")\n                continue\n            except Exception as e:\n                # print(f\"Error processing example: {e}. Example: {example}. Skipping.\")\n                continue\n        \n        if not premises or not hypotheses:\n            if self.verbose: print(f\"No data to evaluate for {task_name} after preparation.\")\n            return None\n\n        self.align_inferencer.nlg_eval_mode = nlg_mode_for_task\n        _, pred_scores, _ = self.align_inferencer.nlg_eval(premises, hypotheses)\n        pred_scores_list = pred_scores.tolist()\n\n        true_labels_processed = []\n        if label_map_func:\n            true_labels_processed = [label_map_func(l) for l in true_labels_orig]\n        else:\n            true_labels_processed = [float(l) if metric_type == 'regression' else int(l) for l in true_labels_orig]\n\n        results = {'task': task_name, 'num_samples': len(pred_scores_list)}\n        if not pred_scores_list or not true_labels_processed or len(pred_scores_list) != len(true_labels_processed):\n            if self.verbose: print(f\"Mismatch in pred ({len(pred_scores_list)}) and true ({len(true_labels_processed)}) counts for {task_name}.\")\n            return results\n\n\n        if metric_type == 'regression':\n            p_corr, _ = pearsonr(true_labels_processed, pred_scores_list)\n            s_corr, _ = spearmanr(true_labels_processed, pred_scores_list)\n            k_corr, _ = kendalltau(true_labels_processed, pred_scores_list)\n            results.update({'pearson': p_corr, 'spearman': s_corr, 'kendall': k_corr})\n            if self.verbose: print(f\"{task_name} Results: Pearson={p_corr:.4f}, Spearman={s_corr:.4f}\")\n        elif metric_type == 'binary_classification':\n            # Assuming pred_scores are probabilities for the positive class\n            pred_labels_binary = [1 if p > 0.5 else 0 for p in pred_scores_list]\n            acc = accuracy_score(true_labels_processed, pred_labels_binary)\n            f1 = f1_score(true_labels_processed, pred_labels_binary, average='binary' if len(set(true_labels_processed)) <=2 else 'weighted', zero_division=0)\n            try:\n                auc = roc_auc_score(true_labels_processed, pred_scores_list) # Use raw scores for AUC\n            except ValueError: # If only one class in true_labels_processed\n                auc = 0.0 \n            results.update({'accuracy': acc, 'f1': f1, 'auc': auc})\n            if self.verbose: print(f\"{task_name} Results: Accuracy={acc:.4f}, F1={f1:.4f}, AUC={auc:.4f}\")\n        elif metric_type == 'multiclass_classification':\n            # Assuming pred_scores here are from an NLI head (e.g. entailment probability)\n            # For true multiclass, inferencer would need to return argmax or full logits.\n            # This simplified evaluator uses pred_scores directly for NLI as \"entailment score\"\n            # This is a placeholder. True multiclass (e.g. MNLI 3-way) needs different handling of pred_scores.\n            # If pred_scores are [prob_entail, prob_neutral, prob_contradict] from tri_out_probs in Inferencer:\n            # pred_idx = torch.argmax(pred_scores, dim=1).tolist()\n            # acc = accuracy_score(true_labels_processed, pred_idx)\n            # f1 = f1_score(true_labels_processed, pred_idx, average='weighted', zero_division=0)\n            # results.update({'accuracy': acc, 'f1_weighted': f1})\n            # For now, if it's NLI and we get entail_prob:\n            if self.verbose: print(f\"Multiclass for {task_name} needs specific handling of model's tri_label_logits. Current pred_scores are likely entail_probs.\")\n            # As a proxy for tasks like SNLI where entailment is label 0:\n            # Map true labels: 0->1 (entail), 1->0 (neutral), 2->0 (contradict)\n            # This is just an example for how one might binarize for an AUC like score if pred_scores are entail_probs\n            binary_true_for_auc = [1 if tl == 0 else 0 for tl in true_labels_processed] # Assuming 0 is entailment\n            try:\n                auc = roc_auc_score(binary_true_for_auc, pred_scores_list)\n                results.update({'auc_entail_vs_rest': auc})\n                if self.verbose: print(f\"{task_name} Results (AUC Entail vs Rest): AUC={auc:.4f}\")\n            except ValueError:\n                 results.update({'auc_entail_vs_rest': 0.0})\n\n\n        return results\n\n# You would also define baseline scorer classes (CTCScorer, SimCSEScorer, etc.) here\n# from `baselines.py` if you want to run them. This is omitted for brevity.\n# e.g. class SimCSEScorer: ...","metadata":{"trusted":true},"outputs":[],"execution_count":16},{"cell_type":"code","source":"# # Cell 6: Training Execution (Adapted from train.py)\n\n# # --- Training Configuration ---\n# TRAIN_ARGS = Namespace(\n#     model_name_or_path=MODEL_NAME, \n#     batch_size=4, # Adjust based on Kaggle GPU VRAM (RoBERTa-large is demanding)\n#     num_epoch=1, # Start with 1 for Kaggle\n#     num_workers=2, \n#     learning_rate=1e-5, \n#     adam_epsilon=1e-6, \n#     weight_decay=0.01, # Common default for AdamW\n#     warmup_steps_portion=0.06, \n#     ckpt_save_path=CHECKPOINT_SAVE_PATH,\n#     ckpt_comment=\"kaggle_20k_alignscore_\", \n#     devices=1 if torch.cuda.is_available() else 0, \n#     accelerator='gpu' if torch.cuda.is_available() else 'cpu',\n#     accumulate_grad_batches=8, # Effective batch size = batch_size * accumulate_grad_batches (4*8=32)\n#     do_mlm=True, \n#     use_pretrained_model=True,\n#     mlm_loss_factor=0.5 # From BERTAlignModel default\n# )\n\n# # --- Prepare dataset config for DataLoader ---\n# # Uses files generated in GENERATED_DATA_DIR (e.g., mnli_20k.jsonl)\n# # Create list of {'path': ..., 'task_type': ...} dicts\n# train_files_config_list = []\n# val_files_config_list = []\n\n# all_generated_files = [f for f in os.listdir(GENERATED_DATA_DIR) if f.endswith(\"_20k.jsonl\")]\n# random.shuffle(all_generated_files)\n\n# # Simple split of generated files for train/val\n# # For a more robust setup, ensure diverse tasks in validation or use predefined splits\n# num_val_files = max(1, int(0.1 * len(all_generated_files))) # Use at least 1 file for validation\n# if not all_generated_files:\n#     print(\"No generated JSONL files found in {GENERATED_DATA_DIR}. Cannot proceed with training.\")\n#     # Handle error or exit\n# else:\n#     for i, f_name in enumerate(all_generated_files):\n#         dataset_name_key = f_name.replace(\"_20k.jsonl\", \"\")\n#         task_type = DATASET_CONFIG.get(dataset_name_key, {}).get('task', 'unknown') # Get task from main config\n#         file_info = {'path': os.path.join(GENERATED_DATA_DIR, f_name), 'task_type': task_type}\n#         if i < num_val_files and len(all_generated_files) > 1 : # Ensure train set is not empty\n#             val_files_config_list.append(file_info)\n#         else:\n#             train_files_config_list.append(file_info)\n            \n#     if not train_files_config_list and val_files_config_list: # If all went to val somehow (e.g. only 1 file)\n#         train_files_config_list = val_files_config_list \n#         print(\"Warning: Using the same file(s) for training and validation as only a few files were generated.\")\n#     elif not val_files_config_list and train_files_config_list: # If no val files, use one from train\n#         val_files_config_list.append(train_files_config_list[0])\n#         print(f\"Warning: No dedicated validation files. Using {train_files_config_list[0]['path']} for validation.\")\n\n\n# if not train_files_config_list:\n#     print(\"No training data files configured. Skipping training.\")\n#     BEST_MODEL_PATH = None\n# else:\n#     print(f\"Training with {len(train_files_config_list)} task files. Validation with {len(val_files_config_list)} task files.\")\n#     print(\"Training files:\", [item['path'] for item in train_files_config_list[:3]], \"...\")\n#     print(\"Validation files:\", [item['path'] for item in val_files_config_list[:3]], \"...\")\n\n#     data_module = DSTDataLoader(\n#         train_files_config_list=train_files_config_list,\n#         val_files_config_list=val_files_config_list, \n#         model_name=TRAIN_ARGS.model_name_or_path,\n#         train_batch_size=TRAIN_ARGS.batch_size,\n#         eval_batch_size=TRAIN_ARGS.batch_size * 2, \n#         num_workers=TRAIN_ARGS.num_workers,\n#         need_mlm=TRAIN_ARGS.do_mlm\n#     )\n\n#     align_model = BERTAlignModel(\n#         model_name_or_path=TRAIN_ARGS.model_name_or_path,\n#         using_pretrained=TRAIN_ARGS.use_pretrained_model,\n#         adam_epsilon=TRAIN_ARGS.adam_epsilon,\n#         learning_rate=TRAIN_ARGS.learning_rate,\n#         weight_decay=TRAIN_ARGS.weight_decay,\n#         warmup_steps_portion=TRAIN_ARGS.warm_up_proportion,\n#         mlm_loss_factor=TRAIN_ARGS.mlm_loss_factor\n#     )\n#     align_model.need_mlm = TRAIN_ARGS.do_mlm\n\n#     model_short_name = TRAIN_ARGS.model_name_or_path.split('/')[-1]\n#     checkpoint_filename_template = (\n#         f\"{TRAIN_ARGS.ckpt_comment}{model_short_name}_\"\n#         f\"{'scratch_' if not TRAIN_ARGS.use_pretrained_model else ''}\"\n#         f\"{'mlm_' if TRAIN_ARGS.do_mlm else 'no_mlm_'}\"\n#         f\"all_{SAMPLES_PER_DATASET_TARGET // 1000}k_\"\n#         f\"b{TRAIN_ARGS.batch_size}x{TRAIN_ARGS.devices}x{TRAIN_ARGS.accumulate_grad_batches}\"\n#     )\n\n#     checkpoint_callback = pl.callbacks.ModelCheckpoint(\n#         dirpath=TRAIN_ARGS.ckpt_save_path,\n#         filename=checkpoint_filename_template + \"_{epoch:02d}_{val_loss:.2f}\",\n#         save_top_k=1,\n#         monitor=\"val_loss\", # Monitor val_loss (which is total weighted loss on val set)\n#         mode=\"min\",\n#         every_n_epochs=1,\n#         save_last=True # Save the last model as well\n#     )\n    \n#     # Early stopping\n#     early_stop_callback = pl.callbacks.EarlyStopping(\n#         monitor=\"val_loss\",\n#         min_delta=0.001,\n#         patience=3, # Stop if val_loss doesn't improve for 3 epochs\n#         verbose=True,\n#         mode=\"min\"\n#     )\n\n#     trainer = pl.Trainer(\n#         accelerator=TRAIN_ARGS.accelerator,\n#         devices=TRAIN_ARGS.devices if TRAIN_ARGS.accelerator == 'gpu' else None,\n#         max_epochs=TRAIN_ARGS.num_epoch,\n#         callbacks=[checkpoint_callback, early_stop_callback],\n#         accumulate_grad_batches=TRAIN_ARGS.accumulate_grad_batches,\n#         precision=\"16-mixed\" if TRAIN_ARGS.accelerator == 'gpu' else 32, # Mixed precision for GPU\n#         log_every_n_steps=20, # Log more frequently\n#         # deterministic=True, # For reproducibility, can slow down\n#         # strategy=\"ddp_find_unused_parameters_true\" if TRAIN_ARGS.devices > 1 else None, # If using multiple GPUs\n#     )\n\n#     print(f\"\\n--- Starting Training: {checkpoint_filename_template} ---\")\n#     try:\n#         trainer.fit(align_model, datamodule=data_module)\n        \n#         # Path to the best checkpoint saved by ModelCheckpoint\n#         BEST_MODEL_PATH = checkpoint_callback.best_model_path\n#         print(f\"Best checkpoint path from callback: {BEST_MODEL_PATH}\")\n#         if not BEST_MODEL_PATH or not os.path.exists(BEST_MODEL_PATH):\n#             print(\"Best model path not found from callback, trying 'last.ckpt'\")\n#             # Try last checkpoint if best_model_path is not set (e.g. if training is very short or no val improvement)\n#             last_ckpt_path = os.path.join(TRAIN_ARGS.ckpt_save_path, \"last.ckpt\")\n#             if os.path.exists(last_ckpt_path):\n#                  BEST_MODEL_PATH = last_ckpt_path\n#             else: # Fallback to a constructed name if last.ckpt also not there\n#                  BEST_MODEL_PATH = os.path.join(TRAIN_ARGS.ckpt_save_path, f\"{checkpoint_filename_template}_final.ckpt\") # Default if no val improvement\n#                  trainer.save_checkpoint(BEST_MODEL_PATH)\n\n\n#         print(f\"Training finished. Best/Final model saved to: {BEST_MODEL_PATH}\")\n\n#     except Exception as e:\n#         print(f\"An error occurred during training: {e}\")\n#         import traceback\n#         traceback.print_exc()\n#         BEST_MODEL_PATH = None","metadata":{"trusted":true,"execution":{"execution_failed":"2025-05-27T23:32:48.662Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Execute Evaluation","metadata":{}},{"cell_type":"code","source":"# Cell 8: Execute Evaluation\n\n# Ensure BEST_MODEL_PATH is set from training cell, or manually set to a checkpoint path\n# BEST_MODEL_PATH = \"/kaggle/working/alignscore_checkpoints/your_best_model.ckpt\" # Example\n\n# Initialize alignscore_inferencer to None\nalignscore_inferencer = None\nusing_pretrained_for_inference_only = False # Set to True if BEST_MODEL_PATH is None and you want to test with a base model\n\nif BEST_MODEL_PATH and os.path.exists(BEST_MODEL_PATH):\n    print(f\"\\n--- Initializing Inferencer with trained model: {BEST_MODEL_PATH} ---\")\n    alignscore_inferencer = Inferencer(\n        ckpt_path=BEST_MODEL_PATH,\n        model_name_or_path=TRAIN_ARGS.model_name_or_path, # From training args\n        batch_size=TRAIN_ARGS.batch_size * 4, \n        device=DEVICE,\n        verbose=False # Less verbose during bulk eval\n    )\nelif using_pretrained_for_inference_only:\n    print(f\"\\n--- Initializing Inferencer with PRETRAINED base model: {MODEL_NAME} (NO FINETUNED CHECKPOINT) ---\")\n    alignscore_inferencer = Inferencer(\n        ckpt_path=None, # No checkpoint\n        model_name_or_path=MODEL_NAME, # Defined in Cell 1\n        batch_size=TRAIN_ARGS.batch_size * 4, \n        device=DEVICE,\n        verbose=False\n    )\nelse:\n    print(\"No trained model checkpoint (BEST_MODEL_PATH) found or specified, and not using pretrained for inference. Skipping evaluation.\")\n    # alignscore_inferencer remains None\n\n\nif alignscore_inferencer: # Now this check is safe\n    evaluator = SimplifiedEvaluator(alignscore_inferencer, target_samples=1000, verbose=True) \n\n    all_eval_results = []\n\n    # Example: Evaluate STS-B (Regression)\n    def stsb_label_map(label): return float(label) / 5.0\n    results_stsb = evaluator.evaluate_task(\n        task_name='stsb',\n        hf_id='glue', hf_config='stsb', hf_split='validation',\n        text_a_field='sentence1', text_b_field='sentence2', label_field='label',\n        metric_type='regression', nlg_mode_for_task='reg_sp',\n        label_map_func=stsb_label_map\n    )\n    if results_stsb: all_eval_results.append(results_stsb)\n\n    # Example: Evaluate MRPC (Binary Classification)\n    results_mrpc = evaluator.evaluate_task(\n        task_name='mrpc',\n        hf_id='glue', hf_config='mrpc', hf_split='test', \n        text_a_field='sentence1', text_b_field='sentence2', label_field='label',\n        metric_type='binary_classification', nlg_mode_for_task='bin_sp'\n    )\n    if results_mrpc: all_eval_results.append(results_mrpc)\n\n    # Example: Evaluate MNLI Matched (Multiclass NLI -> Simplified to Entailment Probability AUC)\n    def nli_label_map(label): return int(label) \n    results_mnli = evaluator.evaluate_task(\n        task_name='mnli_matched',\n        hf_id='multi_nli', hf_config=None, hf_split='validation_matched',\n        text_a_field='premise', text_b_field='hypothesis', label_field='label',\n        metric_type='multiclass_classification', nlg_mode_for_task='nli_sp', \n        label_map_func=nli_label_map\n    )\n    if results_mnli: all_eval_results.append(results_mnli)\n    \n    def boolq_label_map(label): return 1 if label else 0\n    results_boolq = evaluator.evaluate_task(\n        task_name='boolq',\n        hf_id='boolq', hf_config=None, hf_split='validation',\n        text_a_field='passage', text_b_field='question', label_field='answer', \n        metric_type='binary_classification', nlg_mode_for_task='bin_sp', \n        label_map_func=boolq_label_map\n    )\n    if results_boolq: all_eval_results.append(results_boolq)\n\n\n    print(\"\\n--- All Evaluation Results ---\")\n    for res in all_eval_results:\n        print(res)\nelse:\n    print(\"alignscore_inferencer was not initialized. Skipping evaluation execution.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-28T01:36:52.366097Z","iopub.execute_input":"2025-05-28T01:36:52.366407Z","iopub.status.idle":"2025-05-28T01:51:59.991683Z","shell.execute_reply.started":"2025-05-28T01:36:52.366376Z","shell.execute_reply":"2025-05-28T01:51:59.990818Z"}},"outputs":[{"name":"stdout","text":"\n--- Initializing Inferencer with trained model: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt ---\nLoading model from checkpoint: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt\n\n--- Evaluating on benchmark: stsb ---\nSampling 1000 from 1500 for stsb evaluation.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Preparing stsb:   0%|          | 0/1000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0edb7b649fae4a4fbfbe3f6f77558adf"}},"metadata":{}},{"name":"stdout","text":"stsb Results: Pearson=0.2224, Spearman=0.1921\n\n--- Evaluating on benchmark: mrpc ---\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/649k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"261a51cc16ff43e0b6309965ab885c46"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"validation-00000-of-00001.parquet:   0%|          | 0.00/75.7k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f37ae73c03c0463988564b9f351d3342"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"test-00000-of-00001.parquet:   0%|          | 0.00/308k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"521ec634ab054b0ebfc09d44e5bf275e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/3668 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"41d805a2502f4f1588a260f44cb0d932"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/408 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9db0f75a3ec24b8eaea44dc5804d0cde"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating test split:   0%|          | 0/1725 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"26f8b35059ed443b8d86cb7ab1afff55"}},"metadata":{}},{"name":"stdout","text":"Sampling 1000 from 1725 for mrpc evaluation.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Preparing mrpc:   0%|          | 0/1000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9b667bf5acba462d90d706ddb77a7629"}},"metadata":{}},{"name":"stdout","text":"mrpc Results: Accuracy=0.5810, F1=0.7186, AUC=0.4069\n\n--- Evaluating on benchmark: mnli_matched ---\nSampling 1000 from 9815 for mnli_matched evaluation.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Preparing mnli_matched:   0%|          | 0/1000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d8339b65f04440c9b2614b978bb82e3f"}},"metadata":{}},{"name":"stdout","text":"Multiclass for mnli_matched needs specific handling of model's tri_label_logits. Current pred_scores are likely entail_probs.\nmnli_matched Results (AUC Entail vs Rest): AUC=0.4674\n\n--- Evaluating on benchmark: boolq ---\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"README.md:   0%|          | 0.00/6.57k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a5ee1b5300ae4bc48515e853cc10ae29"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"train-00000-of-00001.parquet:   0%|          | 0.00/3.69M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5f1b84fd92d1495486e2c5d8fea47799"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"validation-00000-of-00001.parquet:   0%|          | 0.00/1.26M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9b48e80e9e6d4e2482789276ae3da48d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating train split:   0%|          | 0/9427 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c4a5d29d12eb481797cad20650d0d280"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Generating validation split:   0%|          | 0/3270 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3870c7db7570481d99591063c75d3c85"}},"metadata":{}},{"name":"stdout","text":"Sampling 1000 from 3270 for boolq evaluation.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"Preparing boolq:   0%|          | 0/1000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2b266e334ab640f881bab72e7a2471cd"}},"metadata":{}},{"name":"stdout","text":"boolq Results: Accuracy=0.6200, F1=0.7567, AUC=0.5408\n\n--- All Evaluation Results ---\n{'task': 'stsb', 'num_samples': 1000, 'pearson': 0.22235420730350747, 'spearman': 0.1921219048089744, 'kendall': 0.13317833897438452}\n{'task': 'mrpc', 'num_samples': 1000, 'accuracy': 0.581, 'f1': 0.7186030893216925, 'auc': 0.4068925482132728}\n{'task': 'mnli_matched', 'num_samples': 1000, 'auc_entail_vs_rest': 0.46743489583333336}\n{'task': 'boolq', 'num_samples': 1000, 'accuracy': 0.62, 'f1': 0.7567221510883482, 'auc': 0.5408421657181642}\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"# # Ensure BEST_MODEL_PATH is set from training cell, or manually set to a checkpoint path\n# # BEST_MODEL_PATH = \"/kaggle/working/alignscore_checkpoints/your_best_model.ckpt\" # Example if loading manually\n\n# using_pretrained_for_inference_only = False # Set to True if BEST_MODEL_PATH is None and you want to test with a base model\n\n# if BEST_MODEL_PATH and os.path.exists(BEST_MODEL_PATH):\n#     print(f\"\\n--- Initializing Inferencer with trained model: {BEST_MODEL_PATH} ---\")\n#     alignscore_inferencer = Inferencer(\n#         ckpt_path=BEST_MODEL_PATH,\n#         model_name_or_path=TRAIN_ARGS.model_name_or_path, # From training args\n#         batch_size=TRAIN_ARGS.batch_size * 4, \n#         device=DEVICE,\n#         verbose=False # Less verbose during bulk eval\n#     )\n# elif using_pretrained_for_inference_only:\n#     print(f\"\\n--- Initializing Inferencer with PRETRAINED base model: {MODEL_NAME} (NO FINETUNED CHECKPOINT) ---\")\n#     alignscore_inferencer = Inferencer(\n#         ckpt_path=None, # No checkpoint\n#         model_name_or_path=MODEL_NAME, # Defined in Cell 1\n#         batch_size=TRAIN_ARGS.batch_size * 4, \n#         device=DEVICE,\n#         verbose=False\n#     )\n# else:\n#     print(\"No trained model checkpoint (BEST_MODEL_PATH) found or specified, and not using pretrained for inference. Skipping evaluation.\")\n#     alignscore_inferencer = None\n\n\n# if alignscore_inferencer:\n#     evaluator = SimplifiedEvaluator(align_inferencer, target_samples=1000, verbose=True) # Use smaller sample for quick eval demo\n\n#     all_eval_results = []\n\n#     # Example: Evaluate STS-B (Regression)\n#     # Task: stsb, Output type index: 0 (regression) -> use 'reg_sp'\n#     # Labels are 0-5, need to be normalized to 0-1 if model output is in that range, or scale model output.\n#     # The original AlignScore normalizes STSB labels by dividing by 5.0.\n#     def stsb_label_map(label): return float(label) / 5.0\n#     results_stsb = evaluator.evaluate_task(\n#         task_name='stsb',\n#         hf_id='glue', hf_config='stsb', hf_split='validation',\n#         text_a_field='sentence1', text_b_field='sentence2', label_field='label',\n#         metric_type='regression', nlg_mode_for_task='reg_sp',\n#         label_map_func=stsb_label_map\n#     )\n#     if results_stsb: all_eval_results.append(results_stsb)\n\n#     # Example: Evaluate MRPC (Binary Classification)\n#     # Task: mrpc, Output type index: 1 (binary) -> use 'bin_sp'\n#     results_mrpc = evaluator.evaluate_task(\n#         task_name='mrpc',\n#         hf_id='glue', hf_config='mrpc', hf_split='test', # Original AlignScore uses 'test' for MRPC\n#         text_a_field='sentence1', text_b_field='sentence2', label_field='label',\n#         metric_type='binary_classification', nlg_mode_for_task='bin_sp'\n#     )\n#     if results_mrpc: all_eval_results.append(results_mrpc)\n\n#     # Example: Evaluate MNLI Matched (Multiclass NLI -> Simplified to Entailment Probability AUC)\n#     # Task: mnli_matched, Output type index: 2 (NLI) -> use 'nli_sp' (gets entailment prob)\n#     def nli_label_map(label): return int(label) # 0:entail, 1:neutral, 2:contradict\n#     results_mnli = evaluator.evaluate_task(\n#         task_name='mnli_matched',\n#         hf_id='multi_nli', hf_config=None, hf_split='validation_matched',\n#         text_a_field='premise', text_b_field='hypothesis', label_field='label',\n#         metric_type='multiclass_classification', nlg_mode_for_task='nli_sp', # 'nli_sp' gets entailment score by default\n#         label_map_func=nli_label_map\n#     )\n#     if results_mnli: all_eval_results.append(results_mnli)\n    \n#     # Example: Evaluate BoolQ (Binary Classification from QA format)\n#     # Task: boolq, Output type index: 1 (binary) -> use 'bin_sp'\n#     # Labels are True/False, map to 1/0\n#     def boolq_label_map(label): return 1 if label else 0\n#     # BoolQ is tricky with text_a/text_b for a generic evaluator.\n#     # Original AlignScore combines passage+question vs yes/no options.\n#     # This simplified one would take passage as premise, question as hypothesis.\n#     # For BoolQ, you might need a more specific `evaluate_boolq` method as in original.\n#     # Using a simplified setup here:\n#     results_boolq = evaluator.evaluate_task(\n#         task_name='boolq',\n#         hf_id='boolq', hf_config=None, hf_split='validation',\n#         text_a_field='passage', text_b_field='question', label_field='answer', # True/False\n#         metric_type='binary_classification', nlg_mode_for_task='bin_sp', # Model should predict if question is entailed by passage\n#         label_map_func=boolq_label_map\n#     )\n#     if results_boolq: all_eval_results.append(results_boolq)\n\n\n#     print(\"\\n--- All Evaluation Results ---\")\n#     for res in all_eval_results:\n#         print(res)\n        \n#     # To run baselines, you would instantiate their scorer classes and pass their .score/.scorer method\n#     # to the evaluator, similar to how `align_inferencer.nlg_eval` is used.\n#     # Example (pseudo-code, actual baseline classes need full definition from baselines.py):\n#     # if False: # Set to True to run example baseline\n#     #     simcse_scorer = SimCSEScorer(model_type='princeton-nlp/sup-simcse-roberta-large', device=DEVICE)\n#     #     evaluator_simcse = SimplifiedEvaluator(simcse_scorer, target_samples=1000) # SimCSE score method matches align_func\n#     #     results_stsb_simcse = evaluator_simcse.evaluate_task(...) # Call for STSB with SimCSE\n#     #     print(\"SimCSE STSB:\", results_stsb_simcse)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-28T01:34:32.971959Z","iopub.execute_input":"2025-05-28T01:34:32.972521Z","iopub.status.idle":"2025-05-28T01:35:04.870346Z","shell.execute_reply.started":"2025-05-28T01:34:32.972496Z","shell.execute_reply":"2025-05-28T01:35:04.869446Z"}},"outputs":[{"name":"stdout","text":"\n--- Initializing Inferencer with trained model: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt ---\nLoading model from checkpoint: /kaggle/working/alignscore_checkpoints/kaggle_20k_alignscore_roberta-large_mlm_all_20k_b4x1x8_epoch=00_val_loss=1.70.ckpt\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_35/164971875.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0malignscore_inferencer\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m     \u001b[0mevaluator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSimplifiedEvaluator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malign_inferencer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_samples\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Use smaller sample for quick eval demo\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0mall_eval_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'align_inferencer' is not defined"],"ename":"NameError","evalue":"name 'align_inferencer' is not defined","output_type":"error"}],"execution_count":17}]}